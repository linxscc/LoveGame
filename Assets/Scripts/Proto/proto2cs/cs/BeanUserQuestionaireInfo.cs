// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_user_questionaire_info.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from bean_user_questionaire_info.proto</summary>
public static partial class BeanUserQuestionaireInfoReflection {

  #region Descriptor
  /// <summary>File descriptor for bean_user_questionaire_info.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static BeanUserQuestionaireInfoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiFiZWFuX3VzZXJfcXVlc3Rpb25haXJlX2luZm8ucHJvdG8aCmJhc2UucHJv",
          "dG8ipwEKF1VzZXJRdWVzdGlvbm5haXJlSW5mb1BCEjoKCXJlc3VsdE1hcBgB",
          "IAMoCzInLlVzZXJRdWVzdGlvbm5haXJlSW5mb1BCLlJlc3VsdE1hcEVudHJ5",
          "Eg4KBmFuc3dlchgCIAEoCRIOCgZzdGF0dXMYAyABKBEaMAoOUmVzdWx0TWFw",
          "RW50cnkSCwoDa2V5GAEgASgREg0KBXZhbHVlGAIgASgJOgI4AUI9Ch9uZXQu",
          "Z2FsYXNwb3J0cy5iaWdzdGFyLnByb3RvY29sQhpVc2VyUXVlc3Rpb25haXJl",
          "SW5mb1Byb3Rvc2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::UserQuestionnaireInfoPB), global::UserQuestionnaireInfoPB.Parser, new[]{ "ResultMap", "Answer", "Status" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
        }));
  }
  #endregion

}
#region Messages
public sealed partial class UserQuestionnaireInfoPB : pb::IMessage<UserQuestionnaireInfoPB> {
  private static readonly pb::MessageParser<UserQuestionnaireInfoPB> _parser = new pb::MessageParser<UserQuestionnaireInfoPB>(() => new UserQuestionnaireInfoPB());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UserQuestionnaireInfoPB> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BeanUserQuestionaireInfoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserQuestionnaireInfoPB() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserQuestionnaireInfoPB(UserQuestionnaireInfoPB other) : this() {
    resultMap_ = other.resultMap_.Clone();
    answer_ = other.answer_;
    status_ = other.status_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserQuestionnaireInfoPB Clone() {
    return new UserQuestionnaireInfoPB(this);
  }

  /// <summary>Field number for the "resultMap" field.</summary>
  public const int ResultMapFieldNumber = 1;
  private static readonly pbc::MapField<int, string>.Codec _map_resultMap_codec
      = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForSInt32(8), pb::FieldCodec.ForString(18), 10);
  private readonly pbc::MapField<int, string> resultMap_ = new pbc::MapField<int, string>();
  /// <summary>
  ///选择题
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, string> ResultMap {
    get { return resultMap_; }
  }

  /// <summary>Field number for the "answer" field.</summary>
  public const int AnswerFieldNumber = 2;
  private string answer_ = "";
  /// <summary>
  ///简答题
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Answer {
    get { return answer_; }
    set {
      answer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 3;
  private int status_;
  /// <summary>
  ///0是未开始，1是进行中，2是活动结束
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UserQuestionnaireInfoPB);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UserQuestionnaireInfoPB other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!ResultMap.Equals(other.ResultMap)) return false;
    if (Answer != other.Answer) return false;
    if (Status != other.Status) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= ResultMap.GetHashCode();
    if (Answer.Length != 0) hash ^= Answer.GetHashCode();
    if (Status != 0) hash ^= Status.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    resultMap_.WriteTo(output, _map_resultMap_codec);
    if (Answer.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Answer);
    }
    if (Status != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Status);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += resultMap_.CalculateSize(_map_resultMap_codec);
    if (Answer.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Answer);
    }
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Status);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UserQuestionnaireInfoPB other) {
    if (other == null) {
      return;
    }
    resultMap_.Add(other.resultMap_);
    if (other.Answer.Length != 0) {
      Answer = other.Answer;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          resultMap_.AddEntriesFrom(input, _map_resultMap_codec);
          break;
        }
        case 18: {
          Answer = input.ReadString();
          break;
        }
        case 24: {
          Status = input.ReadSInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
