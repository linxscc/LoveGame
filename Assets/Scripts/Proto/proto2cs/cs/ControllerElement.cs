// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller_element.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from controller_element.proto</summary>
  public static partial class ControllerElementReflection {

    #region Descriptor
    /// <summary>File descriptor for controller_element.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControllerElementReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chhjb250cm9sbGVyX2VsZW1lbnQucHJvdG8SCWNvbS5wcm90bxoKYmFzZS5w",
            "cm90bxoXYmVhbl91c2VyX2VsZW1lbnQucHJvdG8aFWJlYW5fdXNlcl9tb25l",
            "eS5wcm90bxoSYmVhbl9lbGVtZW50LnByb3RvIkEKCkVsZW1lbnRSZXMSCwoD",
            "cmV0GAEgASgREiYKCGVsZW1lbnRzGAIgAygLMhQuY29tLnByb3RvLkVsZW1l",
            "bnRQQiJMCgxNeUVsZW1lbnRSZXMSCwoDcmV0GAEgASgREi8KDXVzZXJfZWxl",
            "bWVudHMYAiADKAsyGC5jb20ucHJvdG8uVXNlckVsZW1lbnRQQiIjCg1CdXlF",
            "bGVtZW50UmVxEhIKCmVsZW1lbnRfaWQYASABKBEieAoNQnV5RWxlbWVudFJl",
            "cxILCgNyZXQYASABKBESLgoMdXNlcl9lbGVtZW50GAIgASgLMhguY29tLnBy",
            "b3RvLlVzZXJFbGVtZW50UEISKgoKdXNlcl9tb25leRgDIAEoCzIWLmNvbS5w",
            "cm90by5Vc2VyTW9uZXlQQkI6Ch9uZXQuZ2FsYXNwb3J0cy5iaWdzdGFyLnBy",
            "b3RvY29sQhdFbGVtZW50Q29udHJvbGxlclByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanUserElementReflection.Descriptor, global::Com.Proto.BeanUserMoneyReflection.Descriptor, global::Com.Proto.BeanElementReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ElementRes), global::Com.Proto.ElementRes.Parser, new[]{ "Ret", "Elements" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.MyElementRes), global::Com.Proto.MyElementRes.Parser, new[]{ "Ret", "UserElements" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.BuyElementReq), global::Com.Proto.BuyElementReq.Parser, new[]{ "ElementId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.BuyElementRes), global::Com.Proto.BuyElementRes.Parser, new[]{ "Ret", "UserElement", "UserMoney" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///素材规则 elementC/elements
  /// </summary>
  public sealed partial class ElementRes : pb::IMessage<ElementRes> {
    private static readonly pb::MessageParser<ElementRes> _parser = new pb::MessageParser<ElementRes>(() => new ElementRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElementRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerElementReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElementRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElementRes(ElementRes other) : this() {
      ret_ = other.ret_;
      elements_ = other.elements_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElementRes Clone() {
      return new ElementRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "elements" field.</summary>
    public const int ElementsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.ElementPB> _repeated_elements_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.ElementPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ElementPB> elements_ = new pbc::RepeatedField<global::Com.Proto.ElementPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ElementPB> Elements {
      get { return elements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElementRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElementRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!elements_.Equals(other.elements_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= elements_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      elements_.WriteTo(output, _repeated_elements_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += elements_.CalculateSize(_repeated_elements_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElementRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      elements_.Add(other.elements_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            elements_.AddEntriesFrom(input, _repeated_elements_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///用户解锁的素材列表 elementC/userElements
  /// </summary>
  public sealed partial class MyElementRes : pb::IMessage<MyElementRes> {
    private static readonly pb::MessageParser<MyElementRes> _parser = new pb::MessageParser<MyElementRes>(() => new MyElementRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MyElementRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerElementReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyElementRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyElementRes(MyElementRes other) : this() {
      ret_ = other.ret_;
      userElements_ = other.userElements_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyElementRes Clone() {
      return new MyElementRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_elements" field.</summary>
    public const int UserElementsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.UserElementPB> _repeated_userElements_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.UserElementPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserElementPB> userElements_ = new pbc::RepeatedField<global::Com.Proto.UserElementPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserElementPB> UserElements {
      get { return userElements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MyElementRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MyElementRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!userElements_.Equals(other.userElements_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= userElements_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      userElements_.WriteTo(output, _repeated_userElements_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += userElements_.CalculateSize(_repeated_userElements_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MyElementRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      userElements_.Add(other.userElements_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            userElements_.AddEntriesFrom(input, _repeated_userElements_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///购买素材 elementC/buyElement
  /// </summary>
  public sealed partial class BuyElementReq : pb::IMessage<BuyElementReq> {
    private static readonly pb::MessageParser<BuyElementReq> _parser = new pb::MessageParser<BuyElementReq>(() => new BuyElementReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuyElementReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerElementReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyElementReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyElementReq(BuyElementReq other) : this() {
      elementId_ = other.elementId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyElementReq Clone() {
      return new BuyElementReq(this);
    }

    /// <summary>Field number for the "element_id" field.</summary>
    public const int ElementIdFieldNumber = 1;
    private int elementId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ElementId {
      get { return elementId_; }
      set {
        elementId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuyElementReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuyElementReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ElementId != other.ElementId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ElementId != 0) hash ^= ElementId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ElementId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(ElementId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ElementId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ElementId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuyElementReq other) {
      if (other == null) {
        return;
      }
      if (other.ElementId != 0) {
        ElementId = other.ElementId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ElementId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuyElementRes : pb::IMessage<BuyElementRes> {
    private static readonly pb::MessageParser<BuyElementRes> _parser = new pb::MessageParser<BuyElementRes>(() => new BuyElementRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuyElementRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerElementReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyElementRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyElementRes(BuyElementRes other) : this() {
      ret_ = other.ret_;
      UserElement = other.userElement_ != null ? other.UserElement.Clone() : null;
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyElementRes Clone() {
      return new BuyElementRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_element" field.</summary>
    public const int UserElementFieldNumber = 2;
    private global::Com.Proto.UserElementPB userElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserElementPB UserElement {
      get { return userElement_; }
      set {
        userElement_ = value;
      }
    }

    /// <summary>Field number for the "user_money" field.</summary>
    public const int UserMoneyFieldNumber = 3;
    private global::Com.Proto.UserMoneyPB userMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuyElementRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuyElementRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserElement, other.UserElement)) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userElement_ != null) hash ^= UserElement.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userElement_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserElement);
      }
      if (userMoney_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserMoney);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userElement_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserElement);
      }
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuyElementRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userElement_ != null) {
        if (userElement_ == null) {
          userElement_ = new global::Com.Proto.UserElementPB();
        }
        UserElement.MergeFrom(other.UserElement);
      }
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userElement_ == null) {
              userElement_ = new global::Com.Proto.UserElementPB();
            }
            input.ReadMessage(userElement_);
            break;
          }
          case 26: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
