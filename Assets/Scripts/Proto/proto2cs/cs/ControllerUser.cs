// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller_user.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from controller_user.proto</summary>
  public static partial class ControllerUserReflection {

    #region Descriptor
    /// <summary>File descriptor for controller_user.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControllerUserReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVjb250cm9sbGVyX3VzZXIucHJvdG8SCWNvbS5wcm90bxoKYmFzZS5wcm90",
            "bxoPYmVhbl91c2VyLnByb3RvGhViZWFuX3VzZXJfbW9uZXkucHJvdG8aFWJl",
            "YW5fdXNlcl9wb3dlci5wcm90bxoaYmVhbl91c2VyX2RlcGFydG1lbnQucHJv",
            "dG8aF2JlYW5fYnV5X2dlbV9ydWxlLnByb3RvGhBiZWFuX2F3YXJkLnByb3Rv",
            "GhxiZWFuX3VzZXJfYnV5X2dlbV9pbmZvLnByb3RvGhViZWFuX3VzZXJfZ3Vp",
            "ZGUucHJvdG8aGmJlYW5fdXNlcl9leHRyYV9pbmZvLnByb3RvGhliZWFuX2Zp",
            "cnN0X3JlY2hhcmdlLnByb3RvGhpiZWFuX3VzZXJfbW9udGhfY2FyZC5wcm90",
            "bxoVYmVhbl9ndWlkZV9ydWxlLnByb3RvGiFiZWFuX3VzZXJfcXVlc3Rpb25h",
            "aXJlX2luZm8ucHJvdG8aGWJlYW5fYW50aV9hZGRpY3Rpb24ucHJvdG8aF2Jl",
            "YW5fdXNlcl9lbGVtZW50LnByb3RvGhBiZWFuX3NoYXJlLnByb3RvIh8KDFVz",
            "ZXJMb2dpblJlcRIPCgd1c2VyX2lkGAEgASgRIuIDCgxVc2VyTG9naW5SZXMS",
            "CwoDcmV0GAEgASgREh8KBHVzZXIYAiABKAsyES5jb20ucHJvdG8uVXNlclBC",
            "EioKCnVzZXJfbW9uZXkYAyABKAsyFi5jb20ucHJvdG8uVXNlck1vbmV5UEIS",
            "KgoKdXNlcl9wb3dlchgEIAEoCzIWLmNvbS5wcm90by5Vc2VyUG93ZXJQQhI1",
            "ChB1c2VyX2RlcGFydG1lbnRzGAUgAygLMhsuY29tLnByb3RvLlVzZXJEZXBh",
            "cnRtZW50UEISNgoRdXNlcl9idXlfZ2VtX2luZm8YBiABKAsyGy5jb20ucHJv",
            "dG8uVXNlckJ1eUdlbUluZm9QQhIqCgp1c2VyX2d1aWRlGAcgAygLMhYuY29t",
            "LnByb3RvLlVzZXJHdWlkZVBCEjMKD3VzZXJfZXh0cmFfaW5mbxgIIAEoCzIa",
            "LmNvbS5wcm90by5Vc2VyRXh0cmFJbmZvUEISMgoOZmlyc3RfcmVjaGFyZ2UY",
            "CSADKAsyGi5jb20ucHJvdG8uRmlyc3RSZWNoYXJnZVBCEjMKD3VzZXJfbW9u",
            "dGhfY2FyZBgKIAEoCzIaLmNvbS5wcm90by5Vc2VyTW9udGhDYXJkUEISEwoL",
            "c2VydmVyX3RpbWUYYyABKBIiHQoNQ3JlYXRlVXNlclJlcRIMCgRuYW1lGAEg",
            "ASgJIj0KDUNyZWF0ZVVzZXJSZXMSCwoDcmV0GAEgASgREh8KBHVzZXIYAiAB",
            "KAsyES5jb20ucHJvdG8uVXNlclBCIjMKFVVwZGF0ZVVzZXJCaXJ0aGRheVJl",
            "cRINCgVtb250aBgCIAEoERILCgNkYXkYAyABKBEiRQoVVXBkYXRlVXNlckJp",
            "cnRoZGF5UmVzEgsKA3JldBgBIAEoERIfCgR1c2VyGAIgASgLMhEuY29tLnBy",
            "b3RvLlVzZXJQQiKkAQoLVXNlclJ1bGVSZXMSCwoDcmV0GAEgASgREi4KDWJ1",
            "eV9nZW1fcnVsZXMYAiADKAsyFy5jb20ucHJvdG8uQnV5R2VtUnVsZVBCEisK",
            "C2d1aWRlX3J1bGVzGAMgAygLMhYuY29tLnByb3RvLkd1aWRlUnVsZVBCEisK",
            "C3NoYXJlX3J1bGVzGAQgAygLMhYuY29tLnByb3RvLlNoYXJlUnVsZVBCIjEK",
            "DkdlbUV4Y2hhbmdlUmVxEh8KCGJ1eV90eXBlGAEgASgOMg0uQnV5R2VtVHlw",
            "ZVBCIq0BCg5HZW1FeGNoYW5nZVJlcxILCgNyZXQYASABKBESKgoKdXNlcl9t",
            "b25leRgCIAEoCzIWLmNvbS5wcm90by5Vc2VyTW9uZXlQQhIqCgp1c2VyX3Bv",
            "d2VyGAMgASgLMhYuY29tLnByb3RvLlVzZXJQb3dlclBCEjYKEXVzZXJfYnV5",
            "X2dlbV9pbmZvGAQgASgLMhsuY29tLnByb3RvLlVzZXJCdXlHZW1JbmZvUEIi",
            "QQoPRXhjaGFuZ2VDb2RlUmVzEgsKA3JldBgBIAEoERIhCgVhd2FyZBgCIAMo",
            "CzISLmNvbS5wcm90by5Bd2FyZFBCIh8KD0V4Y2hhbmdlQ29kZVJlcRIMCgRj",
            "b2RlGAEgASgJIj4KCEd1aWRlUmVxEiAKCmd1aWRlX3R5cGUYASABKA4yDC5H",
            "dWlkZVR5cGVQQhIQCghndWlkZV9pZBgCIAEoESJmCghHdWlkZVJlcxILCgNy",
            "ZXQYASABKBESIQoFYXdhcmQYAiADKAsyEi5jb20ucHJvdG8uQXdhcmRQQhIq",
            "Cgp1c2VyX2d1aWRlGAMgASgLMhYuY29tLnByb3RvLlVzZXJHdWlkZVBCIioK",
            "EVVzZXJNb2RpZnlOYW1lUmVxEhUKDW5ld191c2VyX25hbWUYASABKAkiogEK",
            "EVVzZXJNb2RpZnlOYW1lUmVzEgsKA3JldBgBIAEoERIqCgp1c2VyX21vbmV5",
            "GAIgASgLMhYuY29tLnByb3RvLlVzZXJNb25leVBCEjMKD3VzZXJfZXh0cmFf",
            "aW5mbxgDIAEoCzIaLmNvbS5wcm90by5Vc2VyRXh0cmFJbmZvUEISHwoEdXNl",
            "chgEIAEoCzIRLmNvbS5wcm90by5Vc2VyUEIiFwoVU2hhcmVSZXdhcmRzU3Rh",
            "dHVzUmVxIjYKFVNoYXJlUmV3YXJkc1N0YXR1c1JlcxILCgNyZXQYASABKBES",
            "EAoIdG9kYXlHb3QYAiABKAgiHQoPU2hhcmVSZXdhcmRzUmVxEgoKAmlkGAEg",
            "ASgRInYKD1NoYXJlUmV3YXJkc1JlcxILCgNyZXQYASABKBESIQoFYXdhcmQY",
            "AiADKAsyEi5jb20ucHJvdG8uQXdhcmRQQhIzCg91c2VyX2V4dHJhX2luZm8Y",
            "AyABKAsyGi5jb20ucHJvdG8uVXNlckV4dHJhSW5mb1BCIjYKEkdvdERhaWx5",
            "UGFja2FnZVJlcRIOCgZtYWxsSWQYASABKBESEAoIbWFsbFR5cGUYAiABKBEi",
            "eQoSR290RGFpbHlQYWNrYWdlUmVzEgsKA3JldBgBIAEoERIhCgVhd2FyZBgC",
            "IAMoCzISLmNvbS5wcm90by5Bd2FyZFBCEjMKD3VzZXJfZXh0cmFfaW5mbxgD",
            "IAEoCzIaLmNvbS5wcm90by5Vc2VyRXh0cmFJbmZvUEIiGQoXR2V0VXNlclF1",
            "ZXN0aW9ubmFpcmVSZXEiYQoXR2V0VXNlclF1ZXN0aW9ubmFpcmVSZXMSCwoD",
            "cmV0GAEgASgREjkKF3VzZXJRdWVzdGlvbm5haXJlSW5mb1BCGAIgASgLMhgu",
            "VXNlclF1ZXN0aW9ubmFpcmVJbmZvUEIinwEKFkFuc3dlclF1ZXN0aW9ubmFp",
            "cmVSZXESQwoJcmVzdWx0TWFwGAEgAygLMjAuY29tLnByb3RvLkFuc3dlclF1",
            "ZXN0aW9ubmFpcmVSZXEuUmVzdWx0TWFwRW50cnkSDgoGYW5zd2VyGAIgASgJ",
            "GjAKDlJlc3VsdE1hcEVudHJ5EgsKA2tleRgBIAEoERINCgV2YWx1ZRgCIAEo",
            "CToCOAEihQEKFkFuc3dlclF1ZXN0aW9ubmFpcmVSZXMSCwoDcmV0GAEgASgR",
            "EiMKB2F3YXJkUEIYAiADKAsyEi5jb20ucHJvdG8uQXdhcmRQQhI5Chd1c2Vy",
            "UXVlc3Rpb25uYWlyZUluZm9QQhgDIAEoCzIYLlVzZXJRdWVzdGlvbm5haXJl",
            "SW5mb1BCIlgKEEFudGlBZGRpY3Rpb25SZXMSCwoDcmV0GAEgASgREjcKE3Vz",
            "ZXJfYW50aV9hZGRpY3Rpb24YAiABKAsyGi5jb20ucHJvdG8uQW50aUFkZGlj",
            "dGlvblBCIj8KGVJlcGxhY2VVc2VyQXZhdGFyT3JCb3hSZXESDgoGYXZhdGFy",
            "GAEgASgREhIKCmF2YXRhcl9ib3gYAiABKBEiegoZUmVwbGFjZVVzZXJBdmF0",
            "YXJPckJveFJlcxILCgNyZXQYASABKBESHwoEdXNlchgCIAEoCzIRLmNvbS5w",
            "cm90by5Vc2VyUEISLwoNdXNlcl9lbGVtZW50cxgDIAMoCzIYLmNvbS5wcm90",
            "by5Vc2VyRWxlbWVudFBCIoEBChlSZWNlaXZlVXNlckV4dHJhQXdhcmRzUmVx",
            "EjcKFm9wdGlvbmFsX2FjdGl2aXR5X3R5cGUYASABKA4yFy5PcHRpb25hbEFj",
            "dGl2aXR5VHlwZVBCEisKCHZlcmlmaWVkGAIgASgLMhkuY29tLnByb3RvLlZl",
            "cmlmaWVkSW5mb1BCIi4KDlZlcmlmaWVkSW5mb1BCEg8KB2FjY291bnQYASAB",
            "KAkSCwoDcHdkGAIgASgJIoEBChlSZWNlaXZlVXNlckV4dHJhQXdhcmRzUmVz",
            "EgsKA3JldBgBIAEoERIiCgZhd2FyZHMYAiADKAsyEi5jb20ucHJvdG8uQXdh",
            "cmRQQhIzCg91c2VyX2V4dHJhX2luZm8YAyABKAsyGi5jb20ucHJvdG8uVXNl",
            "ckV4dHJhSW5mb1BCQjcKH25ldC5nYWxhc3BvcnRzLmJpZ3N0YXIucHJvdG9j",
            "b2xCFFVzZXJDb250cm9sbGVyUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanUserReflection.Descriptor, global::Com.Proto.BeanUserMoneyReflection.Descriptor, global::Com.Proto.BeanUserPowerReflection.Descriptor, global::Com.Proto.BeanUserDepartmentReflection.Descriptor, global::Com.Proto.BeanBuyGemRuleReflection.Descriptor, global::Com.Proto.BeanAwardReflection.Descriptor, global::Com.Proto.BeanUserBuyGemInfoReflection.Descriptor, global::Com.Proto.BeanUserGuideReflection.Descriptor, global::Com.Proto.BeanUserExtraInfoReflection.Descriptor, global::Com.Proto.BeanFirstRechargeReflection.Descriptor, global::Com.Proto.BeanUserMonthCardReflection.Descriptor, global::Com.Proto.BeanGuideRuleReflection.Descriptor, global::BeanUserQuestionaireInfoReflection.Descriptor, global::Com.Proto.BeanAntiAddictionReflection.Descriptor, global::Com.Proto.BeanUserElementReflection.Descriptor, global::Com.Proto.BeanShareReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserLoginReq), global::Com.Proto.UserLoginReq.Parser, new[]{ "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserLoginRes), global::Com.Proto.UserLoginRes.Parser, new[]{ "Ret", "User", "UserMoney", "UserPower", "UserDepartments", "UserBuyGemInfo", "UserGuide", "UserExtraInfo", "FirstRecharge", "UserMonthCard", "ServerTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CreateUserReq), global::Com.Proto.CreateUserReq.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CreateUserRes), global::Com.Proto.CreateUserRes.Parser, new[]{ "Ret", "User" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UpdateUserBirthdayReq), global::Com.Proto.UpdateUserBirthdayReq.Parser, new[]{ "Month", "Day" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UpdateUserBirthdayRes), global::Com.Proto.UpdateUserBirthdayRes.Parser, new[]{ "Ret", "User" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserRuleRes), global::Com.Proto.UserRuleRes.Parser, new[]{ "Ret", "BuyGemRules", "GuideRules", "ShareRules" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GemExchangeReq), global::Com.Proto.GemExchangeReq.Parser, new[]{ "BuyType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GemExchangeRes), global::Com.Proto.GemExchangeRes.Parser, new[]{ "Ret", "UserMoney", "UserPower", "UserBuyGemInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ExchangeCodeRes), global::Com.Proto.ExchangeCodeRes.Parser, new[]{ "Ret", "Award" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ExchangeCodeReq), global::Com.Proto.ExchangeCodeReq.Parser, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GuideReq), global::Com.Proto.GuideReq.Parser, new[]{ "GuideType", "GuideId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GuideRes), global::Com.Proto.GuideRes.Parser, new[]{ "Ret", "Award", "UserGuide" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserModifyNameReq), global::Com.Proto.UserModifyNameReq.Parser, new[]{ "NewUserName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserModifyNameRes), global::Com.Proto.UserModifyNameRes.Parser, new[]{ "Ret", "UserMoney", "UserExtraInfo", "User" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ShareRewardsStatusReq), global::Com.Proto.ShareRewardsStatusReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ShareRewardsStatusRes), global::Com.Proto.ShareRewardsStatusRes.Parser, new[]{ "Ret", "TodayGot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ShareRewardsReq), global::Com.Proto.ShareRewardsReq.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ShareRewardsRes), global::Com.Proto.ShareRewardsRes.Parser, new[]{ "Ret", "Award", "UserExtraInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GotDailyPackageReq), global::Com.Proto.GotDailyPackageReq.Parser, new[]{ "MallId", "MallType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GotDailyPackageRes), global::Com.Proto.GotDailyPackageRes.Parser, new[]{ "Ret", "Award", "UserExtraInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GetUserQuestionnaireReq), global::Com.Proto.GetUserQuestionnaireReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GetUserQuestionnaireRes), global::Com.Proto.GetUserQuestionnaireRes.Parser, new[]{ "Ret", "UserQuestionnaireInfoPB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.AnswerQuestionnaireReq), global::Com.Proto.AnswerQuestionnaireReq.Parser, new[]{ "ResultMap", "Answer" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.AnswerQuestionnaireRes), global::Com.Proto.AnswerQuestionnaireRes.Parser, new[]{ "Ret", "AwardPB", "UserQuestionnaireInfoPB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.AntiAddictionRes), global::Com.Proto.AntiAddictionRes.Parser, new[]{ "Ret", "UserAntiAddiction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReplaceUserAvatarOrBoxReq), global::Com.Proto.ReplaceUserAvatarOrBoxReq.Parser, new[]{ "Avatar", "AvatarBox" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReplaceUserAvatarOrBoxRes), global::Com.Proto.ReplaceUserAvatarOrBoxRes.Parser, new[]{ "Ret", "User", "UserElements" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReceiveUserExtraAwardsReq), global::Com.Proto.ReceiveUserExtraAwardsReq.Parser, new[]{ "OptionalActivityType", "Verified" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.VerifiedInfoPB), global::Com.Proto.VerifiedInfoPB.Parser, new[]{ "Account", "Pwd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReceiveUserExtraAwardsRes), global::Com.Proto.ReceiveUserExtraAwardsRes.Parser, new[]{ "Ret", "Awards", "UserExtraInfo" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UserLoginReq : pb::IMessage<UserLoginReq> {
    private static readonly pb::MessageParser<UserLoginReq> _parser = new pb::MessageParser<UserLoginReq>(() => new UserLoginReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserLoginReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginReq(UserLoginReq other) : this() {
      userId_ = other.userId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginReq Clone() {
      return new UserLoginReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserLoginReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserLoginReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(UserId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserLoginReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserLoginRes : pb::IMessage<UserLoginRes> {
    private static readonly pb::MessageParser<UserLoginRes> _parser = new pb::MessageParser<UserLoginRes>(() => new UserLoginRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserLoginRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginRes(UserLoginRes other) : this() {
      ret_ = other.ret_;
      User = other.user_ != null ? other.User.Clone() : null;
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
      UserPower = other.userPower_ != null ? other.UserPower.Clone() : null;
      userDepartments_ = other.userDepartments_.Clone();
      UserBuyGemInfo = other.userBuyGemInfo_ != null ? other.UserBuyGemInfo.Clone() : null;
      userGuide_ = other.userGuide_.Clone();
      UserExtraInfo = other.userExtraInfo_ != null ? other.UserExtraInfo.Clone() : null;
      firstRecharge_ = other.firstRecharge_.Clone();
      UserMonthCard = other.userMonthCard_ != null ? other.UserMonthCard.Clone() : null;
      serverTime_ = other.serverTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginRes Clone() {
      return new UserLoginRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Com.Proto.UserPB user_;
    /// <summary>
    ///用户
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserPB User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "user_money" field.</summary>
    public const int UserMoneyFieldNumber = 3;
    private global::Com.Proto.UserMoneyPB userMoney_;
    /// <summary>
    ///金钱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    /// <summary>Field number for the "user_power" field.</summary>
    public const int UserPowerFieldNumber = 4;
    private global::Com.Proto.UserPowerPB userPower_;
    /// <summary>
    ///体能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserPowerPB UserPower {
      get { return userPower_; }
      set {
        userPower_ = value;
      }
    }

    /// <summary>Field number for the "user_departments" field.</summary>
    public const int UserDepartmentsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Com.Proto.UserDepartmentPB> _repeated_userDepartments_codec
        = pb::FieldCodec.ForMessage(42, global::Com.Proto.UserDepartmentPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserDepartmentPB> userDepartments_ = new pbc::RepeatedField<global::Com.Proto.UserDepartmentPB>();
    /// <summary>
    ///应援团
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserDepartmentPB> UserDepartments {
      get { return userDepartments_; }
    }

    /// <summary>Field number for the "user_buy_gem_info" field.</summary>
    public const int UserBuyGemInfoFieldNumber = 6;
    private global::Com.Proto.UserBuyGemInfoPB userBuyGemInfo_;
    /// <summary>
    ///购买信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserBuyGemInfoPB UserBuyGemInfo {
      get { return userBuyGemInfo_; }
      set {
        userBuyGemInfo_ = value;
      }
    }

    /// <summary>Field number for the "user_guide" field.</summary>
    public const int UserGuideFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Com.Proto.UserGuidePB> _repeated_userGuide_codec
        = pb::FieldCodec.ForMessage(58, global::Com.Proto.UserGuidePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserGuidePB> userGuide_ = new pbc::RepeatedField<global::Com.Proto.UserGuidePB>();
    /// <summary>
    ///新手引导
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserGuidePB> UserGuide {
      get { return userGuide_; }
    }

    /// <summary>Field number for the "user_extra_info" field.</summary>
    public const int UserExtraInfoFieldNumber = 8;
    private global::Com.Proto.UserExtraInfoPB userExtraInfo_;
    /// <summary>
    ///用户额外信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserExtraInfoPB UserExtraInfo {
      get { return userExtraInfo_; }
      set {
        userExtraInfo_ = value;
      }
    }

    /// <summary>Field number for the "first_recharge" field.</summary>
    public const int FirstRechargeFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Com.Proto.FirstRechargePB> _repeated_firstRecharge_codec
        = pb::FieldCodec.ForMessage(74, global::Com.Proto.FirstRechargePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.FirstRechargePB> firstRecharge_ = new pbc::RepeatedField<global::Com.Proto.FirstRechargePB>();
    /// <summary>
    ///用户充值翻倍数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.FirstRechargePB> FirstRecharge {
      get { return firstRecharge_; }
    }

    /// <summary>Field number for the "user_month_card" field.</summary>
    public const int UserMonthCardFieldNumber = 10;
    private global::Com.Proto.UserMonthCardPB userMonthCard_;
    /// <summary>
    ///用户月卡状况表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMonthCardPB UserMonthCard {
      get { return userMonthCard_; }
      set {
        userMonthCard_ = value;
      }
    }

    /// <summary>Field number for the "server_time" field.</summary>
    public const int ServerTimeFieldNumber = 99;
    private long serverTime_;
    /// <summary>
    ///服务器时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ServerTime {
      get { return serverTime_; }
      set {
        serverTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserLoginRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserLoginRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(User, other.User)) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      if (!object.Equals(UserPower, other.UserPower)) return false;
      if(!userDepartments_.Equals(other.userDepartments_)) return false;
      if (!object.Equals(UserBuyGemInfo, other.UserBuyGemInfo)) return false;
      if(!userGuide_.Equals(other.userGuide_)) return false;
      if (!object.Equals(UserExtraInfo, other.UserExtraInfo)) return false;
      if(!firstRecharge_.Equals(other.firstRecharge_)) return false;
      if (!object.Equals(UserMonthCard, other.UserMonthCard)) return false;
      if (ServerTime != other.ServerTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      if (userPower_ != null) hash ^= UserPower.GetHashCode();
      hash ^= userDepartments_.GetHashCode();
      if (userBuyGemInfo_ != null) hash ^= UserBuyGemInfo.GetHashCode();
      hash ^= userGuide_.GetHashCode();
      if (userExtraInfo_ != null) hash ^= UserExtraInfo.GetHashCode();
      hash ^= firstRecharge_.GetHashCode();
      if (userMonthCard_ != null) hash ^= UserMonthCard.GetHashCode();
      if (ServerTime != 0L) hash ^= ServerTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (userMoney_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserMoney);
      }
      if (userPower_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UserPower);
      }
      userDepartments_.WriteTo(output, _repeated_userDepartments_codec);
      if (userBuyGemInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UserBuyGemInfo);
      }
      userGuide_.WriteTo(output, _repeated_userGuide_codec);
      if (userExtraInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(UserExtraInfo);
      }
      firstRecharge_.WriteTo(output, _repeated_firstRecharge_codec);
      if (userMonthCard_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UserMonthCard);
      }
      if (ServerTime != 0L) {
        output.WriteRawTag(152, 6);
        output.WriteSInt64(ServerTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      if (userPower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserPower);
      }
      size += userDepartments_.CalculateSize(_repeated_userDepartments_codec);
      if (userBuyGemInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserBuyGemInfo);
      }
      size += userGuide_.CalculateSize(_repeated_userGuide_codec);
      if (userExtraInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserExtraInfo);
      }
      size += firstRecharge_.CalculateSize(_repeated_firstRecharge_codec);
      if (userMonthCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMonthCard);
      }
      if (ServerTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeSInt64Size(ServerTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserLoginRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Com.Proto.UserPB();
        }
        User.MergeFrom(other.User);
      }
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
      if (other.userPower_ != null) {
        if (userPower_ == null) {
          userPower_ = new global::Com.Proto.UserPowerPB();
        }
        UserPower.MergeFrom(other.UserPower);
      }
      userDepartments_.Add(other.userDepartments_);
      if (other.userBuyGemInfo_ != null) {
        if (userBuyGemInfo_ == null) {
          userBuyGemInfo_ = new global::Com.Proto.UserBuyGemInfoPB();
        }
        UserBuyGemInfo.MergeFrom(other.UserBuyGemInfo);
      }
      userGuide_.Add(other.userGuide_);
      if (other.userExtraInfo_ != null) {
        if (userExtraInfo_ == null) {
          userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
        }
        UserExtraInfo.MergeFrom(other.UserExtraInfo);
      }
      firstRecharge_.Add(other.firstRecharge_);
      if (other.userMonthCard_ != null) {
        if (userMonthCard_ == null) {
          userMonthCard_ = new global::Com.Proto.UserMonthCardPB();
        }
        UserMonthCard.MergeFrom(other.UserMonthCard);
      }
      if (other.ServerTime != 0L) {
        ServerTime = other.ServerTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (user_ == null) {
              user_ = new global::Com.Proto.UserPB();
            }
            input.ReadMessage(user_);
            break;
          }
          case 26: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
          case 34: {
            if (userPower_ == null) {
              userPower_ = new global::Com.Proto.UserPowerPB();
            }
            input.ReadMessage(userPower_);
            break;
          }
          case 42: {
            userDepartments_.AddEntriesFrom(input, _repeated_userDepartments_codec);
            break;
          }
          case 50: {
            if (userBuyGemInfo_ == null) {
              userBuyGemInfo_ = new global::Com.Proto.UserBuyGemInfoPB();
            }
            input.ReadMessage(userBuyGemInfo_);
            break;
          }
          case 58: {
            userGuide_.AddEntriesFrom(input, _repeated_userGuide_codec);
            break;
          }
          case 66: {
            if (userExtraInfo_ == null) {
              userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
            }
            input.ReadMessage(userExtraInfo_);
            break;
          }
          case 74: {
            firstRecharge_.AddEntriesFrom(input, _repeated_firstRecharge_codec);
            break;
          }
          case 82: {
            if (userMonthCard_ == null) {
              userMonthCard_ = new global::Com.Proto.UserMonthCardPB();
            }
            input.ReadMessage(userMonthCard_);
            break;
          }
          case 792: {
            ServerTime = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateUserReq : pb::IMessage<CreateUserReq> {
    private static readonly pb::MessageParser<CreateUserReq> _parser = new pb::MessageParser<CreateUserReq>(() => new CreateUserReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateUserReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUserReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUserReq(CreateUserReq other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUserReq Clone() {
      return new CreateUserReq(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateUserReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateUserReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateUserReq other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateUserRes : pb::IMessage<CreateUserRes> {
    private static readonly pb::MessageParser<CreateUserRes> _parser = new pb::MessageParser<CreateUserRes>(() => new CreateUserRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateUserRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUserRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUserRes(CreateUserRes other) : this() {
      ret_ = other.ret_;
      User = other.user_ != null ? other.User.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUserRes Clone() {
      return new CreateUserRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Com.Proto.UserPB user_;
    /// <summary>
    ///用户
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserPB User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateUserRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateUserRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(User, other.User)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateUserRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Com.Proto.UserPB();
        }
        User.MergeFrom(other.User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (user_ == null) {
              user_ = new global::Com.Proto.UserPB();
            }
            input.ReadMessage(user_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateUserBirthdayReq : pb::IMessage<UpdateUserBirthdayReq> {
    private static readonly pb::MessageParser<UpdateUserBirthdayReq> _parser = new pb::MessageParser<UpdateUserBirthdayReq>(() => new UpdateUserBirthdayReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateUserBirthdayReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUserBirthdayReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUserBirthdayReq(UpdateUserBirthdayReq other) : this() {
      month_ = other.month_;
      day_ = other.day_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUserBirthdayReq Clone() {
      return new UpdateUserBirthdayReq(this);
    }

    /// <summary>Field number for the "month" field.</summary>
    public const int MonthFieldNumber = 2;
    private int month_;
    /// <summary>
    ///月
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Month {
      get { return month_; }
      set {
        month_ = value;
      }
    }

    /// <summary>Field number for the "day" field.</summary>
    public const int DayFieldNumber = 3;
    private int day_;
    /// <summary>
    ///日
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Day {
      get { return day_; }
      set {
        day_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateUserBirthdayReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateUserBirthdayReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Month != other.Month) return false;
      if (Day != other.Day) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Month != 0) hash ^= Month.GetHashCode();
      if (Day != 0) hash ^= Day.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Month != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(Month);
      }
      if (Day != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Day);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Month != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Month);
      }
      if (Day != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Day);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateUserBirthdayReq other) {
      if (other == null) {
        return;
      }
      if (other.Month != 0) {
        Month = other.Month;
      }
      if (other.Day != 0) {
        Day = other.Day;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 16: {
            Month = input.ReadSInt32();
            break;
          }
          case 24: {
            Day = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateUserBirthdayRes : pb::IMessage<UpdateUserBirthdayRes> {
    private static readonly pb::MessageParser<UpdateUserBirthdayRes> _parser = new pb::MessageParser<UpdateUserBirthdayRes>(() => new UpdateUserBirthdayRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateUserBirthdayRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUserBirthdayRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUserBirthdayRes(UpdateUserBirthdayRes other) : this() {
      ret_ = other.ret_;
      User = other.user_ != null ? other.User.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUserBirthdayRes Clone() {
      return new UpdateUserBirthdayRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Com.Proto.UserPB user_;
    /// <summary>
    ///用户
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserPB User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateUserBirthdayRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateUserBirthdayRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(User, other.User)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateUserBirthdayRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Com.Proto.UserPB();
        }
        User.MergeFrom(other.User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (user_ == null) {
              user_ = new global::Com.Proto.UserPB();
            }
            input.ReadMessage(user_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserRuleRes : pb::IMessage<UserRuleRes> {
    private static readonly pb::MessageParser<UserRuleRes> _parser = new pb::MessageParser<UserRuleRes>(() => new UserRuleRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserRuleRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRuleRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRuleRes(UserRuleRes other) : this() {
      ret_ = other.ret_;
      buyGemRules_ = other.buyGemRules_.Clone();
      guideRules_ = other.guideRules_.Clone();
      shareRules_ = other.shareRules_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRuleRes Clone() {
      return new UserRuleRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "buy_gem_rules" field.</summary>
    public const int BuyGemRulesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.BuyGemRulePB> _repeated_buyGemRules_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.BuyGemRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.BuyGemRulePB> buyGemRules_ = new pbc::RepeatedField<global::Com.Proto.BuyGemRulePB>();
    /// <summary>
    ///购买规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.BuyGemRulePB> BuyGemRules {
      get { return buyGemRules_; }
    }

    /// <summary>Field number for the "guide_rules" field.</summary>
    public const int GuideRulesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.GuideRulePB> _repeated_guideRules_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.GuideRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.GuideRulePB> guideRules_ = new pbc::RepeatedField<global::Com.Proto.GuideRulePB>();
    /// <summary>
    ///新手引导规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.GuideRulePB> GuideRules {
      get { return guideRules_; }
    }

    /// <summary>Field number for the "share_rules" field.</summary>
    public const int ShareRulesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.ShareRulePB> _repeated_shareRules_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.ShareRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ShareRulePB> shareRules_ = new pbc::RepeatedField<global::Com.Proto.ShareRulePB>();
    /// <summary>
    ///分享规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ShareRulePB> ShareRules {
      get { return shareRules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserRuleRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserRuleRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!buyGemRules_.Equals(other.buyGemRules_)) return false;
      if(!guideRules_.Equals(other.guideRules_)) return false;
      if(!shareRules_.Equals(other.shareRules_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= buyGemRules_.GetHashCode();
      hash ^= guideRules_.GetHashCode();
      hash ^= shareRules_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      buyGemRules_.WriteTo(output, _repeated_buyGemRules_codec);
      guideRules_.WriteTo(output, _repeated_guideRules_codec);
      shareRules_.WriteTo(output, _repeated_shareRules_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += buyGemRules_.CalculateSize(_repeated_buyGemRules_codec);
      size += guideRules_.CalculateSize(_repeated_guideRules_codec);
      size += shareRules_.CalculateSize(_repeated_shareRules_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserRuleRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      buyGemRules_.Add(other.buyGemRules_);
      guideRules_.Add(other.guideRules_);
      shareRules_.Add(other.shareRules_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            buyGemRules_.AddEntriesFrom(input, _repeated_buyGemRules_codec);
            break;
          }
          case 26: {
            guideRules_.AddEntriesFrom(input, _repeated_guideRules_codec);
            break;
          }
          case 34: {
            shareRules_.AddEntriesFrom(input, _repeated_shareRules_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GemExchangeReq : pb::IMessage<GemExchangeReq> {
    private static readonly pb::MessageParser<GemExchangeReq> _parser = new pb::MessageParser<GemExchangeReq>(() => new GemExchangeReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GemExchangeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemExchangeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemExchangeReq(GemExchangeReq other) : this() {
      buyType_ = other.buyType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemExchangeReq Clone() {
      return new GemExchangeReq(this);
    }

    /// <summary>Field number for the "buy_type" field.</summary>
    public const int BuyTypeFieldNumber = 1;
    private global::BuyGemTypePB buyType_ = 0;
    /// <summary>
    ///购买类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BuyGemTypePB BuyType {
      get { return buyType_; }
      set {
        buyType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GemExchangeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GemExchangeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuyType != other.BuyType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuyType != 0) hash ^= BuyType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuyType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) BuyType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuyType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BuyType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GemExchangeReq other) {
      if (other == null) {
        return;
      }
      if (other.BuyType != 0) {
        BuyType = other.BuyType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            buyType_ = (global::BuyGemTypePB) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GemExchangeRes : pb::IMessage<GemExchangeRes> {
    private static readonly pb::MessageParser<GemExchangeRes> _parser = new pb::MessageParser<GemExchangeRes>(() => new GemExchangeRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GemExchangeRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemExchangeRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemExchangeRes(GemExchangeRes other) : this() {
      ret_ = other.ret_;
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
      UserPower = other.userPower_ != null ? other.UserPower.Clone() : null;
      UserBuyGemInfo = other.userBuyGemInfo_ != null ? other.UserBuyGemInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemExchangeRes Clone() {
      return new GemExchangeRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_money" field.</summary>
    public const int UserMoneyFieldNumber = 2;
    private global::Com.Proto.UserMoneyPB userMoney_;
    /// <summary>
    ///金钱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    /// <summary>Field number for the "user_power" field.</summary>
    public const int UserPowerFieldNumber = 3;
    private global::Com.Proto.UserPowerPB userPower_;
    /// <summary>
    ///体能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserPowerPB UserPower {
      get { return userPower_; }
      set {
        userPower_ = value;
      }
    }

    /// <summary>Field number for the "user_buy_gem_info" field.</summary>
    public const int UserBuyGemInfoFieldNumber = 4;
    private global::Com.Proto.UserBuyGemInfoPB userBuyGemInfo_;
    /// <summary>
    ///购买信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserBuyGemInfoPB UserBuyGemInfo {
      get { return userBuyGemInfo_; }
      set {
        userBuyGemInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GemExchangeRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GemExchangeRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      if (!object.Equals(UserPower, other.UserPower)) return false;
      if (!object.Equals(UserBuyGemInfo, other.UserBuyGemInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      if (userPower_ != null) hash ^= UserPower.GetHashCode();
      if (userBuyGemInfo_ != null) hash ^= UserBuyGemInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userMoney_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserMoney);
      }
      if (userPower_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserPower);
      }
      if (userBuyGemInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UserBuyGemInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      if (userPower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserPower);
      }
      if (userBuyGemInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserBuyGemInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GemExchangeRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
      if (other.userPower_ != null) {
        if (userPower_ == null) {
          userPower_ = new global::Com.Proto.UserPowerPB();
        }
        UserPower.MergeFrom(other.UserPower);
      }
      if (other.userBuyGemInfo_ != null) {
        if (userBuyGemInfo_ == null) {
          userBuyGemInfo_ = new global::Com.Proto.UserBuyGemInfoPB();
        }
        UserBuyGemInfo.MergeFrom(other.UserBuyGemInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
          case 26: {
            if (userPower_ == null) {
              userPower_ = new global::Com.Proto.UserPowerPB();
            }
            input.ReadMessage(userPower_);
            break;
          }
          case 34: {
            if (userBuyGemInfo_ == null) {
              userBuyGemInfo_ = new global::Com.Proto.UserBuyGemInfoPB();
            }
            input.ReadMessage(userBuyGemInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExchangeCodeRes : pb::IMessage<ExchangeCodeRes> {
    private static readonly pb::MessageParser<ExchangeCodeRes> _parser = new pb::MessageParser<ExchangeCodeRes>(() => new ExchangeCodeRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeCodeRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCodeRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCodeRes(ExchangeCodeRes other) : this() {
      ret_ = other.ret_;
      award_ = other.award_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCodeRes Clone() {
      return new ExchangeCodeRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_award_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> award_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///激活码奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Award {
      get { return award_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeCodeRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeCodeRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!award_.Equals(other.award_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= award_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      award_.WriteTo(output, _repeated_award_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += award_.CalculateSize(_repeated_award_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeCodeRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      award_.Add(other.award_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            award_.AddEntriesFrom(input, _repeated_award_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExchangeCodeReq : pb::IMessage<ExchangeCodeReq> {
    private static readonly pb::MessageParser<ExchangeCodeReq> _parser = new pb::MessageParser<ExchangeCodeReq>(() => new ExchangeCodeReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeCodeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCodeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCodeReq(ExchangeCodeReq other) : this() {
      code_ = other.code_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCodeReq Clone() {
      return new ExchangeCodeReq(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    /// <summary>
    ///激活码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeCodeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeCodeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeCodeReq other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GuideReq : pb::IMessage<GuideReq> {
    private static readonly pb::MessageParser<GuideReq> _parser = new pb::MessageParser<GuideReq>(() => new GuideReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuideReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuideReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuideReq(GuideReq other) : this() {
      guideType_ = other.guideType_;
      guideId_ = other.guideId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuideReq Clone() {
      return new GuideReq(this);
    }

    /// <summary>Field number for the "guide_type" field.</summary>
    public const int GuideTypeFieldNumber = 1;
    private global::GuideTypePB guideType_ = 0;
    /// <summary>
    ///新手引导
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GuideTypePB GuideType {
      get { return guideType_; }
      set {
        guideType_ = value;
      }
    }

    /// <summary>Field number for the "guide_id" field.</summary>
    public const int GuideIdFieldNumber = 2;
    private int guideId_;
    /// <summary>
    ///新手ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GuideId {
      get { return guideId_; }
      set {
        guideId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuideReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuideReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuideType != other.GuideType) return false;
      if (GuideId != other.GuideId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuideType != 0) hash ^= GuideType.GetHashCode();
      if (GuideId != 0) hash ^= GuideId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GuideType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GuideType);
      }
      if (GuideId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(GuideId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuideType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GuideType);
      }
      if (GuideId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(GuideId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuideReq other) {
      if (other == null) {
        return;
      }
      if (other.GuideType != 0) {
        GuideType = other.GuideType;
      }
      if (other.GuideId != 0) {
        GuideId = other.GuideId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            guideType_ = (global::GuideTypePB) input.ReadEnum();
            break;
          }
          case 16: {
            GuideId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GuideRes : pb::IMessage<GuideRes> {
    private static readonly pb::MessageParser<GuideRes> _parser = new pb::MessageParser<GuideRes>(() => new GuideRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuideRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuideRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuideRes(GuideRes other) : this() {
      ret_ = other.ret_;
      award_ = other.award_.Clone();
      UserGuide = other.userGuide_ != null ? other.UserGuide.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuideRes Clone() {
      return new GuideRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_award_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> award_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///新手奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Award {
      get { return award_; }
    }

    /// <summary>Field number for the "user_guide" field.</summary>
    public const int UserGuideFieldNumber = 3;
    private global::Com.Proto.UserGuidePB userGuide_;
    /// <summary>
    ///新手引导
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserGuidePB UserGuide {
      get { return userGuide_; }
      set {
        userGuide_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuideRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuideRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!award_.Equals(other.award_)) return false;
      if (!object.Equals(UserGuide, other.UserGuide)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= award_.GetHashCode();
      if (userGuide_ != null) hash ^= UserGuide.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      award_.WriteTo(output, _repeated_award_codec);
      if (userGuide_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserGuide);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += award_.CalculateSize(_repeated_award_codec);
      if (userGuide_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserGuide);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuideRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      award_.Add(other.award_);
      if (other.userGuide_ != null) {
        if (userGuide_ == null) {
          userGuide_ = new global::Com.Proto.UserGuidePB();
        }
        UserGuide.MergeFrom(other.UserGuide);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            award_.AddEntriesFrom(input, _repeated_award_codec);
            break;
          }
          case 26: {
            if (userGuide_ == null) {
              userGuide_ = new global::Com.Proto.UserGuidePB();
            }
            input.ReadMessage(userGuide_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///修改用户名
  /// </summary>
  public sealed partial class UserModifyNameReq : pb::IMessage<UserModifyNameReq> {
    private static readonly pb::MessageParser<UserModifyNameReq> _parser = new pb::MessageParser<UserModifyNameReq>(() => new UserModifyNameReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserModifyNameReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserModifyNameReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserModifyNameReq(UserModifyNameReq other) : this() {
      newUserName_ = other.newUserName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserModifyNameReq Clone() {
      return new UserModifyNameReq(this);
    }

    /// <summary>Field number for the "new_user_name" field.</summary>
    public const int NewUserNameFieldNumber = 1;
    private string newUserName_ = "";
    /// <summary>
    ///新的角色名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewUserName {
      get { return newUserName_; }
      set {
        newUserName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserModifyNameReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserModifyNameReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewUserName != other.NewUserName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NewUserName.Length != 0) hash ^= NewUserName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NewUserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NewUserName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NewUserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewUserName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserModifyNameReq other) {
      if (other == null) {
        return;
      }
      if (other.NewUserName.Length != 0) {
        NewUserName = other.NewUserName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            NewUserName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///修改用户名
  /// </summary>
  public sealed partial class UserModifyNameRes : pb::IMessage<UserModifyNameRes> {
    private static readonly pb::MessageParser<UserModifyNameRes> _parser = new pb::MessageParser<UserModifyNameRes>(() => new UserModifyNameRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserModifyNameRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserModifyNameRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserModifyNameRes(UserModifyNameRes other) : this() {
      ret_ = other.ret_;
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
      UserExtraInfo = other.userExtraInfo_ != null ? other.UserExtraInfo.Clone() : null;
      User = other.user_ != null ? other.User.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserModifyNameRes Clone() {
      return new UserModifyNameRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_money" field.</summary>
    public const int UserMoneyFieldNumber = 2;
    private global::Com.Proto.UserMoneyPB userMoney_;
    /// <summary>
    ///金钱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    /// <summary>Field number for the "user_extra_info" field.</summary>
    public const int UserExtraInfoFieldNumber = 3;
    private global::Com.Proto.UserExtraInfoPB userExtraInfo_;
    /// <summary>
    ///用户额外信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserExtraInfoPB UserExtraInfo {
      get { return userExtraInfo_; }
      set {
        userExtraInfo_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 4;
    private global::Com.Proto.UserPB user_;
    /// <summary>
    ///用户
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserPB User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserModifyNameRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserModifyNameRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      if (!object.Equals(UserExtraInfo, other.UserExtraInfo)) return false;
      if (!object.Equals(User, other.User)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      if (userExtraInfo_ != null) hash ^= UserExtraInfo.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userMoney_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserMoney);
      }
      if (userExtraInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserExtraInfo);
      }
      if (user_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      if (userExtraInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserExtraInfo);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserModifyNameRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
      if (other.userExtraInfo_ != null) {
        if (userExtraInfo_ == null) {
          userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
        }
        UserExtraInfo.MergeFrom(other.UserExtraInfo);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Com.Proto.UserPB();
        }
        User.MergeFrom(other.User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
          case 26: {
            if (userExtraInfo_ == null) {
              userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
            }
            input.ReadMessage(userExtraInfo_);
            break;
          }
          case 34: {
            if (user_ == null) {
              user_ = new global::Com.Proto.UserPB();
            }
            input.ReadMessage(user_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///每日分享奖励领取状态  userC/shareRewardStatus
  /// </summary>
  public sealed partial class ShareRewardsStatusReq : pb::IMessage<ShareRewardsStatusReq> {
    private static readonly pb::MessageParser<ShareRewardsStatusReq> _parser = new pb::MessageParser<ShareRewardsStatusReq>(() => new ShareRewardsStatusReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShareRewardsStatusReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShareRewardsStatusReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShareRewardsStatusReq(ShareRewardsStatusReq other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShareRewardsStatusReq Clone() {
      return new ShareRewardsStatusReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShareRewardsStatusReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShareRewardsStatusReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShareRewardsStatusReq other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class ShareRewardsStatusRes : pb::IMessage<ShareRewardsStatusRes> {
    private static readonly pb::MessageParser<ShareRewardsStatusRes> _parser = new pb::MessageParser<ShareRewardsStatusRes>(() => new ShareRewardsStatusRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShareRewardsStatusRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShareRewardsStatusRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShareRewardsStatusRes(ShareRewardsStatusRes other) : this() {
      ret_ = other.ret_;
      todayGot_ = other.todayGot_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShareRewardsStatusRes Clone() {
      return new ShareRewardsStatusRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "todayGot" field.</summary>
    public const int TodayGotFieldNumber = 2;
    private bool todayGot_;
    /// <summary>
    ///今日是否领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TodayGot {
      get { return todayGot_; }
      set {
        todayGot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShareRewardsStatusRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShareRewardsStatusRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (TodayGot != other.TodayGot) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (TodayGot != false) hash ^= TodayGot.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (TodayGot != false) {
        output.WriteRawTag(16);
        output.WriteBool(TodayGot);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (TodayGot != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShareRewardsStatusRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.TodayGot != false) {
        TodayGot = other.TodayGot;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 16: {
            TodayGot = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///领取分享奖励 userC/shareReward
  /// </summary>
  public sealed partial class ShareRewardsReq : pb::IMessage<ShareRewardsReq> {
    private static readonly pb::MessageParser<ShareRewardsReq> _parser = new pb::MessageParser<ShareRewardsReq>(() => new ShareRewardsReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShareRewardsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShareRewardsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShareRewardsReq(ShareRewardsReq other) : this() {
      id_ = other.id_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShareRewardsReq Clone() {
      return new ShareRewardsReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShareRewardsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShareRewardsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Id);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShareRewardsReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShareRewardsRes : pb::IMessage<ShareRewardsRes> {
    private static readonly pb::MessageParser<ShareRewardsRes> _parser = new pb::MessageParser<ShareRewardsRes>(() => new ShareRewardsRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShareRewardsRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShareRewardsRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShareRewardsRes(ShareRewardsRes other) : this() {
      ret_ = other.ret_;
      award_ = other.award_.Clone();
      UserExtraInfo = other.userExtraInfo_ != null ? other.UserExtraInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShareRewardsRes Clone() {
      return new ShareRewardsRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_award_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> award_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Award {
      get { return award_; }
    }

    /// <summary>Field number for the "user_extra_info" field.</summary>
    public const int UserExtraInfoFieldNumber = 3;
    private global::Com.Proto.UserExtraInfoPB userExtraInfo_;
    /// <summary>
    ///用户额外信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserExtraInfoPB UserExtraInfo {
      get { return userExtraInfo_; }
      set {
        userExtraInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShareRewardsRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShareRewardsRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!award_.Equals(other.award_)) return false;
      if (!object.Equals(UserExtraInfo, other.UserExtraInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= award_.GetHashCode();
      if (userExtraInfo_ != null) hash ^= UserExtraInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      award_.WriteTo(output, _repeated_award_codec);
      if (userExtraInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserExtraInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += award_.CalculateSize(_repeated_award_codec);
      if (userExtraInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserExtraInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShareRewardsRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      award_.Add(other.award_);
      if (other.userExtraInfo_ != null) {
        if (userExtraInfo_ == null) {
          userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
        }
        UserExtraInfo.MergeFrom(other.UserExtraInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            award_.AddEntriesFrom(input, _repeated_award_codec);
            break;
          }
          case 26: {
            if (userExtraInfo_ == null) {
              userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
            }
            input.ReadMessage(userExtraInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///领取每日礼包 userC/gotDailyPackage
  /// </summary>
  public sealed partial class GotDailyPackageReq : pb::IMessage<GotDailyPackageReq> {
    private static readonly pb::MessageParser<GotDailyPackageReq> _parser = new pb::MessageParser<GotDailyPackageReq>(() => new GotDailyPackageReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GotDailyPackageReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GotDailyPackageReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GotDailyPackageReq(GotDailyPackageReq other) : this() {
      mallId_ = other.mallId_;
      mallType_ = other.mallType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GotDailyPackageReq Clone() {
      return new GotDailyPackageReq(this);
    }

    /// <summary>Field number for the "mallId" field.</summary>
    public const int MallIdFieldNumber = 1;
    private int mallId_;
    /// <summary>
    ///商城id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MallId {
      get { return mallId_; }
      set {
        mallId_ = value;
      }
    }

    /// <summary>Field number for the "mallType" field.</summary>
    public const int MallTypeFieldNumber = 2;
    private int mallType_;
    /// <summary>
    ///商城类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MallType {
      get { return mallType_; }
      set {
        mallType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GotDailyPackageReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GotDailyPackageReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MallId != other.MallId) return false;
      if (MallType != other.MallType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MallId != 0) hash ^= MallId.GetHashCode();
      if (MallType != 0) hash ^= MallType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MallId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(MallId);
      }
      if (MallType != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(MallType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MallId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MallId);
      }
      if (MallType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MallType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GotDailyPackageReq other) {
      if (other == null) {
        return;
      }
      if (other.MallId != 0) {
        MallId = other.MallId;
      }
      if (other.MallType != 0) {
        MallType = other.MallType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MallId = input.ReadSInt32();
            break;
          }
          case 16: {
            MallType = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GotDailyPackageRes : pb::IMessage<GotDailyPackageRes> {
    private static readonly pb::MessageParser<GotDailyPackageRes> _parser = new pb::MessageParser<GotDailyPackageRes>(() => new GotDailyPackageRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GotDailyPackageRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GotDailyPackageRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GotDailyPackageRes(GotDailyPackageRes other) : this() {
      ret_ = other.ret_;
      award_ = other.award_.Clone();
      UserExtraInfo = other.userExtraInfo_ != null ? other.UserExtraInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GotDailyPackageRes Clone() {
      return new GotDailyPackageRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_award_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> award_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Award {
      get { return award_; }
    }

    /// <summary>Field number for the "user_extra_info" field.</summary>
    public const int UserExtraInfoFieldNumber = 3;
    private global::Com.Proto.UserExtraInfoPB userExtraInfo_;
    /// <summary>
    ///用户额外信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserExtraInfoPB UserExtraInfo {
      get { return userExtraInfo_; }
      set {
        userExtraInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GotDailyPackageRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GotDailyPackageRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!award_.Equals(other.award_)) return false;
      if (!object.Equals(UserExtraInfo, other.UserExtraInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= award_.GetHashCode();
      if (userExtraInfo_ != null) hash ^= UserExtraInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      award_.WriteTo(output, _repeated_award_codec);
      if (userExtraInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserExtraInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += award_.CalculateSize(_repeated_award_codec);
      if (userExtraInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserExtraInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GotDailyPackageRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      award_.Add(other.award_);
      if (other.userExtraInfo_ != null) {
        if (userExtraInfo_ == null) {
          userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
        }
        UserExtraInfo.MergeFrom(other.UserExtraInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            award_.AddEntriesFrom(input, _repeated_award_codec);
            break;
          }
          case 26: {
            if (userExtraInfo_ == null) {
              userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
            }
            input.ReadMessage(userExtraInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获取问卷调查信息 userC/questionnaireInfo
  /// </summary>
  public sealed partial class GetUserQuestionnaireReq : pb::IMessage<GetUserQuestionnaireReq> {
    private static readonly pb::MessageParser<GetUserQuestionnaireReq> _parser = new pb::MessageParser<GetUserQuestionnaireReq>(() => new GetUserQuestionnaireReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserQuestionnaireReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserQuestionnaireReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserQuestionnaireReq(GetUserQuestionnaireReq other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserQuestionnaireReq Clone() {
      return new GetUserQuestionnaireReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserQuestionnaireReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserQuestionnaireReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserQuestionnaireReq other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class GetUserQuestionnaireRes : pb::IMessage<GetUserQuestionnaireRes> {
    private static readonly pb::MessageParser<GetUserQuestionnaireRes> _parser = new pb::MessageParser<GetUserQuestionnaireRes>(() => new GetUserQuestionnaireRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserQuestionnaireRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserQuestionnaireRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserQuestionnaireRes(GetUserQuestionnaireRes other) : this() {
      ret_ = other.ret_;
      UserQuestionnaireInfoPB = other.userQuestionnaireInfoPB_ != null ? other.UserQuestionnaireInfoPB.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserQuestionnaireRes Clone() {
      return new GetUserQuestionnaireRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "userQuestionnaireInfoPB" field.</summary>
    public const int UserQuestionnaireInfoPBFieldNumber = 2;
    private global::UserQuestionnaireInfoPB userQuestionnaireInfoPB_;
    /// <summary>
    ///问卷信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UserQuestionnaireInfoPB UserQuestionnaireInfoPB {
      get { return userQuestionnaireInfoPB_; }
      set {
        userQuestionnaireInfoPB_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserQuestionnaireRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserQuestionnaireRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserQuestionnaireInfoPB, other.UserQuestionnaireInfoPB)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userQuestionnaireInfoPB_ != null) hash ^= UserQuestionnaireInfoPB.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userQuestionnaireInfoPB_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserQuestionnaireInfoPB);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userQuestionnaireInfoPB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserQuestionnaireInfoPB);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserQuestionnaireRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userQuestionnaireInfoPB_ != null) {
        if (userQuestionnaireInfoPB_ == null) {
          userQuestionnaireInfoPB_ = new global::UserQuestionnaireInfoPB();
        }
        UserQuestionnaireInfoPB.MergeFrom(other.UserQuestionnaireInfoPB);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userQuestionnaireInfoPB_ == null) {
              userQuestionnaireInfoPB_ = new global::UserQuestionnaireInfoPB();
            }
            input.ReadMessage(userQuestionnaireInfoPB_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///回答问卷调查  userC/answerQuestionnaire
  /// </summary>
  public sealed partial class AnswerQuestionnaireReq : pb::IMessage<AnswerQuestionnaireReq> {
    private static readonly pb::MessageParser<AnswerQuestionnaireReq> _parser = new pb::MessageParser<AnswerQuestionnaireReq>(() => new AnswerQuestionnaireReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnswerQuestionnaireReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerQuestionnaireReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerQuestionnaireReq(AnswerQuestionnaireReq other) : this() {
      resultMap_ = other.resultMap_.Clone();
      answer_ = other.answer_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerQuestionnaireReq Clone() {
      return new AnswerQuestionnaireReq(this);
    }

    /// <summary>Field number for the "resultMap" field.</summary>
    public const int ResultMapFieldNumber = 1;
    private static readonly pbc::MapField<int, string>.Codec _map_resultMap_codec
        = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForSInt32(8), pb::FieldCodec.ForString(18), 10);
    private readonly pbc::MapField<int, string> resultMap_ = new pbc::MapField<int, string>();
    /// <summary>
    ///选择题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, string> ResultMap {
      get { return resultMap_; }
    }

    /// <summary>Field number for the "answer" field.</summary>
    public const int AnswerFieldNumber = 2;
    private string answer_ = "";
    /// <summary>
    ///简答题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Answer {
      get { return answer_; }
      set {
        answer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnswerQuestionnaireReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnswerQuestionnaireReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ResultMap.Equals(other.ResultMap)) return false;
      if (Answer != other.Answer) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ResultMap.GetHashCode();
      if (Answer.Length != 0) hash ^= Answer.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      resultMap_.WriteTo(output, _map_resultMap_codec);
      if (Answer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Answer);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resultMap_.CalculateSize(_map_resultMap_codec);
      if (Answer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Answer);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnswerQuestionnaireReq other) {
      if (other == null) {
        return;
      }
      resultMap_.Add(other.resultMap_);
      if (other.Answer.Length != 0) {
        Answer = other.Answer;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            resultMap_.AddEntriesFrom(input, _map_resultMap_codec);
            break;
          }
          case 18: {
            Answer = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AnswerQuestionnaireRes : pb::IMessage<AnswerQuestionnaireRes> {
    private static readonly pb::MessageParser<AnswerQuestionnaireRes> _parser = new pb::MessageParser<AnswerQuestionnaireRes>(() => new AnswerQuestionnaireRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnswerQuestionnaireRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerQuestionnaireRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerQuestionnaireRes(AnswerQuestionnaireRes other) : this() {
      ret_ = other.ret_;
      awardPB_ = other.awardPB_.Clone();
      UserQuestionnaireInfoPB = other.userQuestionnaireInfoPB_ != null ? other.UserQuestionnaireInfoPB.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerQuestionnaireRes Clone() {
      return new AnswerQuestionnaireRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awardPB" field.</summary>
    public const int AwardPBFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awardPB_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awardPB_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> AwardPB {
      get { return awardPB_; }
    }

    /// <summary>Field number for the "userQuestionnaireInfoPB" field.</summary>
    public const int UserQuestionnaireInfoPBFieldNumber = 3;
    private global::UserQuestionnaireInfoPB userQuestionnaireInfoPB_;
    /// <summary>
    ///问卷信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UserQuestionnaireInfoPB UserQuestionnaireInfoPB {
      get { return userQuestionnaireInfoPB_; }
      set {
        userQuestionnaireInfoPB_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnswerQuestionnaireRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnswerQuestionnaireRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awardPB_.Equals(other.awardPB_)) return false;
      if (!object.Equals(UserQuestionnaireInfoPB, other.UserQuestionnaireInfoPB)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awardPB_.GetHashCode();
      if (userQuestionnaireInfoPB_ != null) hash ^= UserQuestionnaireInfoPB.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awardPB_.WriteTo(output, _repeated_awardPB_codec);
      if (userQuestionnaireInfoPB_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserQuestionnaireInfoPB);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awardPB_.CalculateSize(_repeated_awardPB_codec);
      if (userQuestionnaireInfoPB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserQuestionnaireInfoPB);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnswerQuestionnaireRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awardPB_.Add(other.awardPB_);
      if (other.userQuestionnaireInfoPB_ != null) {
        if (userQuestionnaireInfoPB_ == null) {
          userQuestionnaireInfoPB_ = new global::UserQuestionnaireInfoPB();
        }
        UserQuestionnaireInfoPB.MergeFrom(other.UserQuestionnaireInfoPB);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awardPB_.AddEntriesFrom(input, _repeated_awardPB_codec);
            break;
          }
          case 26: {
            if (userQuestionnaireInfoPB_ == null) {
              userQuestionnaireInfoPB_ = new global::UserQuestionnaireInfoPB();
            }
            input.ReadMessage(userQuestionnaireInfoPB_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AntiAddictionRes : pb::IMessage<AntiAddictionRes> {
    private static readonly pb::MessageParser<AntiAddictionRes> _parser = new pb::MessageParser<AntiAddictionRes>(() => new AntiAddictionRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AntiAddictionRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AntiAddictionRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AntiAddictionRes(AntiAddictionRes other) : this() {
      ret_ = other.ret_;
      UserAntiAddiction = other.userAntiAddiction_ != null ? other.UserAntiAddiction.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AntiAddictionRes Clone() {
      return new AntiAddictionRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_anti_addiction" field.</summary>
    public const int UserAntiAddictionFieldNumber = 2;
    private global::Com.Proto.AntiAddictionPB userAntiAddiction_;
    /// <summary>
    ///用户在线时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.AntiAddictionPB UserAntiAddiction {
      get { return userAntiAddiction_; }
      set {
        userAntiAddiction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AntiAddictionRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AntiAddictionRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserAntiAddiction, other.UserAntiAddiction)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userAntiAddiction_ != null) hash ^= UserAntiAddiction.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userAntiAddiction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserAntiAddiction);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userAntiAddiction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAntiAddiction);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AntiAddictionRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userAntiAddiction_ != null) {
        if (userAntiAddiction_ == null) {
          userAntiAddiction_ = new global::Com.Proto.AntiAddictionPB();
        }
        UserAntiAddiction.MergeFrom(other.UserAntiAddiction);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userAntiAddiction_ == null) {
              userAntiAddiction_ = new global::Com.Proto.AntiAddictionPB();
            }
            input.ReadMessage(userAntiAddiction_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReplaceUserAvatarOrBoxReq : pb::IMessage<ReplaceUserAvatarOrBoxReq> {
    private static readonly pb::MessageParser<ReplaceUserAvatarOrBoxReq> _parser = new pb::MessageParser<ReplaceUserAvatarOrBoxReq>(() => new ReplaceUserAvatarOrBoxReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReplaceUserAvatarOrBoxReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceUserAvatarOrBoxReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceUserAvatarOrBoxReq(ReplaceUserAvatarOrBoxReq other) : this() {
      avatar_ = other.avatar_;
      avatarBox_ = other.avatarBox_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceUserAvatarOrBoxReq Clone() {
      return new ReplaceUserAvatarOrBoxReq(this);
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 1;
    private int avatar_;
    /// <summary>
    ///头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Avatar {
      get { return avatar_; }
      set {
        avatar_ = value;
      }
    }

    /// <summary>Field number for the "avatar_box" field.</summary>
    public const int AvatarBoxFieldNumber = 2;
    private int avatarBox_;
    /// <summary>
    ///头像框
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AvatarBox {
      get { return avatarBox_; }
      set {
        avatarBox_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReplaceUserAvatarOrBoxReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReplaceUserAvatarOrBoxReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Avatar != other.Avatar) return false;
      if (AvatarBox != other.AvatarBox) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Avatar != 0) hash ^= Avatar.GetHashCode();
      if (AvatarBox != 0) hash ^= AvatarBox.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Avatar != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Avatar);
      }
      if (AvatarBox != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(AvatarBox);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Avatar != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Avatar);
      }
      if (AvatarBox != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(AvatarBox);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReplaceUserAvatarOrBoxReq other) {
      if (other == null) {
        return;
      }
      if (other.Avatar != 0) {
        Avatar = other.Avatar;
      }
      if (other.AvatarBox != 0) {
        AvatarBox = other.AvatarBox;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Avatar = input.ReadSInt32();
            break;
          }
          case 16: {
            AvatarBox = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReplaceUserAvatarOrBoxRes : pb::IMessage<ReplaceUserAvatarOrBoxRes> {
    private static readonly pb::MessageParser<ReplaceUserAvatarOrBoxRes> _parser = new pb::MessageParser<ReplaceUserAvatarOrBoxRes>(() => new ReplaceUserAvatarOrBoxRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReplaceUserAvatarOrBoxRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceUserAvatarOrBoxRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceUserAvatarOrBoxRes(ReplaceUserAvatarOrBoxRes other) : this() {
      ret_ = other.ret_;
      User = other.user_ != null ? other.User.Clone() : null;
      userElements_ = other.userElements_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceUserAvatarOrBoxRes Clone() {
      return new ReplaceUserAvatarOrBoxRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Com.Proto.UserPB user_;
    /// <summary>
    ///用户信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserPB User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "user_elements" field.</summary>
    public const int UserElementsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.UserElementPB> _repeated_userElements_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.UserElementPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserElementPB> userElements_ = new pbc::RepeatedField<global::Com.Proto.UserElementPB>();
    /// <summary>
    ///元素信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserElementPB> UserElements {
      get { return userElements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReplaceUserAvatarOrBoxRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReplaceUserAvatarOrBoxRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(User, other.User)) return false;
      if(!userElements_.Equals(other.userElements_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      hash ^= userElements_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      userElements_.WriteTo(output, _repeated_userElements_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      size += userElements_.CalculateSize(_repeated_userElements_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReplaceUserAvatarOrBoxRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Com.Proto.UserPB();
        }
        User.MergeFrom(other.User);
      }
      userElements_.Add(other.userElements_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (user_ == null) {
              user_ = new global::Com.Proto.UserPB();
            }
            input.ReadMessage(user_);
            break;
          }
          case 26: {
            userElements_.AddEntriesFrom(input, _repeated_userElements_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///领取用户额外信息奖励
  /// </summary>
  public sealed partial class ReceiveUserExtraAwardsReq : pb::IMessage<ReceiveUserExtraAwardsReq> {
    private static readonly pb::MessageParser<ReceiveUserExtraAwardsReq> _parser = new pb::MessageParser<ReceiveUserExtraAwardsReq>(() => new ReceiveUserExtraAwardsReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiveUserExtraAwardsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveUserExtraAwardsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveUserExtraAwardsReq(ReceiveUserExtraAwardsReq other) : this() {
      optionalActivityType_ = other.optionalActivityType_;
      Verified = other.verified_ != null ? other.Verified.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveUserExtraAwardsReq Clone() {
      return new ReceiveUserExtraAwardsReq(this);
    }

    /// <summary>Field number for the "optional_activity_type" field.</summary>
    public const int OptionalActivityTypeFieldNumber = 1;
    private global::OptionalActivityTypePB optionalActivityType_ = 0;
    /// <summary>
    ///目标活动领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::OptionalActivityTypePB OptionalActivityType {
      get { return optionalActivityType_; }
      set {
        optionalActivityType_ = value;
      }
    }

    /// <summary>Field number for the "verified" field.</summary>
    public const int VerifiedFieldNumber = 2;
    private global::Com.Proto.VerifiedInfoPB verified_;
    /// <summary>
    ///实名认证信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.VerifiedInfoPB Verified {
      get { return verified_; }
      set {
        verified_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiveUserExtraAwardsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiveUserExtraAwardsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OptionalActivityType != other.OptionalActivityType) return false;
      if (!object.Equals(Verified, other.Verified)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OptionalActivityType != 0) hash ^= OptionalActivityType.GetHashCode();
      if (verified_ != null) hash ^= Verified.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OptionalActivityType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OptionalActivityType);
      }
      if (verified_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Verified);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OptionalActivityType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OptionalActivityType);
      }
      if (verified_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Verified);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiveUserExtraAwardsReq other) {
      if (other == null) {
        return;
      }
      if (other.OptionalActivityType != 0) {
        OptionalActivityType = other.OptionalActivityType;
      }
      if (other.verified_ != null) {
        if (verified_ == null) {
          verified_ = new global::Com.Proto.VerifiedInfoPB();
        }
        Verified.MergeFrom(other.Verified);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            optionalActivityType_ = (global::OptionalActivityTypePB) input.ReadEnum();
            break;
          }
          case 18: {
            if (verified_ == null) {
              verified_ = new global::Com.Proto.VerifiedInfoPB();
            }
            input.ReadMessage(verified_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerifiedInfoPB : pb::IMessage<VerifiedInfoPB> {
    private static readonly pb::MessageParser<VerifiedInfoPB> _parser = new pb::MessageParser<VerifiedInfoPB>(() => new VerifiedInfoPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifiedInfoPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifiedInfoPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifiedInfoPB(VerifiedInfoPB other) : this() {
      account_ = other.account_;
      pwd_ = other.pwd_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifiedInfoPB Clone() {
      return new VerifiedInfoPB(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    /// <summary>
    ///登录账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pwd" field.</summary>
    public const int PwdFieldNumber = 2;
    private string pwd_ = "";
    /// <summary>
    ///登录密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pwd {
      get { return pwd_; }
      set {
        pwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifiedInfoPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifiedInfoPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Pwd != other.Pwd) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Pwd.Length != 0) hash ^= Pwd.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Pwd.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Pwd);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Pwd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pwd);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifiedInfoPB other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Pwd.Length != 0) {
        Pwd = other.Pwd;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Pwd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///领取用户额外信息奖励
  /// </summary>
  public sealed partial class ReceiveUserExtraAwardsRes : pb::IMessage<ReceiveUserExtraAwardsRes> {
    private static readonly pb::MessageParser<ReceiveUserExtraAwardsRes> _parser = new pb::MessageParser<ReceiveUserExtraAwardsRes>(() => new ReceiveUserExtraAwardsRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiveUserExtraAwardsRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerUserReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveUserExtraAwardsRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveUserExtraAwardsRes(ReceiveUserExtraAwardsRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      UserExtraInfo = other.userExtraInfo_ != null ? other.UserExtraInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveUserExtraAwardsRes Clone() {
      return new ReceiveUserExtraAwardsRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "user_extra_info" field.</summary>
    public const int UserExtraInfoFieldNumber = 3;
    private global::Com.Proto.UserExtraInfoPB userExtraInfo_;
    /// <summary>
    ///用户额外信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserExtraInfoPB UserExtraInfo {
      get { return userExtraInfo_; }
      set {
        userExtraInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiveUserExtraAwardsRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiveUserExtraAwardsRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if (!object.Equals(UserExtraInfo, other.UserExtraInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      if (userExtraInfo_ != null) hash ^= UserExtraInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      if (userExtraInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserExtraInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      if (userExtraInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserExtraInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiveUserExtraAwardsRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      if (other.userExtraInfo_ != null) {
        if (userExtraInfo_ == null) {
          userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
        }
        UserExtraInfo.MergeFrom(other.UserExtraInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26: {
            if (userExtraInfo_ == null) {
              userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
            }
            input.ReadMessage(userExtraInfo_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
