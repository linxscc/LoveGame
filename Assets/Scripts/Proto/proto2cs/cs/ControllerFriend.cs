// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller_friend.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from controller_friend.proto</summary>
  public static partial class ControllerFriendReflection {

    #region Descriptor
    /// <summary>File descriptor for controller_friend.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControllerFriendReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdjb250cm9sbGVyX2ZyaWVuZC5wcm90bxIJY29tLnByb3RvGgpiYXNlLnBy",
            "b3RvGhZiZWFuX3VzZXJfZnJpZW5kLnByb3RvGhViZWFuX3VzZXJfbW9uZXku",
            "cHJvdG8iYwoOVXNlckZyaWVuZHNSZXMSCwoDcmV0GAEgASgREi8KDHVzZXJf",
            "ZnJpZW5kcxgCIAMoCzIZLmNvbS5wcm90by5GcmllbmREZXRhaWxQQhITCgtk",
            "YWlseV9wb3dlchgDIAEoESIgCgtHZXRQb3dlclJlcRIRCglmcmllbmRfaWQY",
            "ASABKBEiXQoLR2V0UG93ZXJSZXMSCwoDcmV0GAEgASgREiwKC3VzZXJfZnJp",
            "ZW5kGAIgASgLMhcuY29tLnByb3RvLlVzZXJGcmllbmRQQhITCgtkYWlseV9w",
            "b3dlchgDIAEoESIkCg5HZXRQb3dlckFsbFJlcRISCgpmcmllbmRfaWRzGAEg",
            "AygRIkwKDkdldFBvd2VyQWxsUmVzEgsKA3JldBgBIAEoERItCgx1c2VyX2Zy",
            "aWVuZHMYAiADKAsyFy5jb20ucHJvdG8uVXNlckZyaWVuZFBCIiEKDFNlbmRQ",
            "b3dlclJlcRIRCglmcmllbmRfaWQYASABKBEijQEKDFNlbmRQb3dlclJlcxIL",
            "CgNyZXQYASABKBESLAoLdXNlcl9mcmllbmQYAiABKAsyFy5jb20ucHJvdG8u",
            "VXNlckZyaWVuZFBCEioKCnVzZXJfbW9uZXkYAyABKAsyFi5jb20ucHJvdG8u",
            "VXNlck1vbmV5UEISFgoOc2VuZFBvd2VyQ291bnQYBCABKBEiJQoPU2VuZEFs",
            "bFBvd2VyUmVxEhIKCmZyaWVuZF9pZHMYASADKBEikQEKD1NlbmRBbGxQb3dl",
            "clJlcxILCgNyZXQYASABKBESLQoMdXNlcl9mcmllbmRzGAIgAygLMhcuY29t",
            "LnByb3RvLlVzZXJGcmllbmRQQhIqCgp1c2VyX21vbmV5GAMgASgLMhYuY29t",
            "LnByb3RvLlVzZXJNb25leVBCEhYKDnNlbmRQb3dlckNvdW50GAQgASgRIh4K",
            "CURlbGV0ZVJlcRIRCglmcmllbmRfaWQYASABKBEiRgoJRGVsZXRlUmVzEgsK",
            "A3JldBgBIAEoERIsCgt1c2VyX2ZyaWVuZBgCIAEoCzIXLmNvbS5wcm90by5V",
            "c2VyRnJpZW5kUEIiHgoLQ29tbWVudHNSZXESDwoHcmVmcmVzaBgBIAEoESJh",
            "CgtDb21tZW50c1JlcxILCgNyZXQYASABKBESLwoMZnJpZW5kX2Jhc2VzGAIg",
            "AygLMhkuY29tLnByb3RvLkZyaWVuZEJhc2VJbmZvEhQKDHJlZnJlc2hfdGlt",
            "ZRgDIAEoAyIfCgpEb0FwcGx5UmVxEhEKCWZyaWVuZF9pZBgBIAEoESIsCgpE",
            "b0FwcGx5UmVzEgsKA3JldBgBIAEoERIRCglmcmllbmRfaWQYAiABKBEiSQoJ",
            "QXBwbHlzUmVzEgsKA3JldBgBIAEoERIvCgxmcmllbmRfYmFzZXMYAiADKAsy",
            "GS5jb20ucHJvdG8uRnJpZW5kQmFzZUluZm8iHQoIQWdyZWVSZXESEQoJZnJp",
            "ZW5kX2lkGAEgASgRIkcKCEFncmVlUmVzEgsKA3JldBgBIAEoERIuCgt1c2Vy",
            "X2ZyaWVuZBgCIAEoCzIZLmNvbS5wcm90by5GcmllbmREZXRhaWxQQiIeCglJ",
            "Z25vcmVSZXESEQoJZnJpZW5kX2lkGAEgASgRIisKCUlnbm9yZVJlcxILCgNy",
            "ZXQYASABKBESEQoJZnJpZW5kX2lkGAIgASgRIh4KCVNlYXJjaFJlcRIRCglm",
            "cmllbmRfaWQYASABKBEiSAoJU2VhcmNoUmVzEgsKA3JldBgBIAEoERIuCgtm",
            "cmllbmRfYmFzZRgCIAEoCzIZLmNvbS5wcm90by5GcmllbmRCYXNlSW5mb0I5",
            "Ch9uZXQuZ2FsYXNwb3J0cy5iaWdzdGFyLnByb3RvY29sQhZGcmllbmRDb250",
            "cm9sbGVyUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanUserFriendReflection.Descriptor, global::Com.Proto.BeanUserMoneyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserFriendsRes), global::Com.Proto.UserFriendsRes.Parser, new[]{ "Ret", "UserFriends", "DailyPower" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GetPowerReq), global::Com.Proto.GetPowerReq.Parser, new[]{ "FriendId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GetPowerRes), global::Com.Proto.GetPowerRes.Parser, new[]{ "Ret", "UserFriend", "DailyPower" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GetPowerAllReq), global::Com.Proto.GetPowerAllReq.Parser, new[]{ "FriendIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GetPowerAllRes), global::Com.Proto.GetPowerAllRes.Parser, new[]{ "Ret", "UserFriends" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.SendPowerReq), global::Com.Proto.SendPowerReq.Parser, new[]{ "FriendId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.SendPowerRes), global::Com.Proto.SendPowerRes.Parser, new[]{ "Ret", "UserFriend", "UserMoney", "SendPowerCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.SendAllPowerReq), global::Com.Proto.SendAllPowerReq.Parser, new[]{ "FriendIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.SendAllPowerRes), global::Com.Proto.SendAllPowerRes.Parser, new[]{ "Ret", "UserFriends", "UserMoney", "SendPowerCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.DeleteReq), global::Com.Proto.DeleteReq.Parser, new[]{ "FriendId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.DeleteRes), global::Com.Proto.DeleteRes.Parser, new[]{ "Ret", "UserFriend" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CommentsReq), global::Com.Proto.CommentsReq.Parser, new[]{ "Refresh" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CommentsRes), global::Com.Proto.CommentsRes.Parser, new[]{ "Ret", "FriendBases", "RefreshTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.DoApplyReq), global::Com.Proto.DoApplyReq.Parser, new[]{ "FriendId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.DoApplyRes), global::Com.Proto.DoApplyRes.Parser, new[]{ "Ret", "FriendId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ApplysRes), global::Com.Proto.ApplysRes.Parser, new[]{ "Ret", "FriendBases" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.AgreeReq), global::Com.Proto.AgreeReq.Parser, new[]{ "FriendId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.AgreeRes), global::Com.Proto.AgreeRes.Parser, new[]{ "Ret", "UserFriend" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.IgnoreReq), global::Com.Proto.IgnoreReq.Parser, new[]{ "FriendId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.IgnoreRes), global::Com.Proto.IgnoreRes.Parser, new[]{ "Ret", "FriendId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.SearchReq), global::Com.Proto.SearchReq.Parser, new[]{ "FriendId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.SearchRes), global::Com.Proto.SearchRes.Parser, new[]{ "Ret", "FriendBase" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///获取用户好友信息 friendC/friends
  /// </summary>
  public sealed partial class UserFriendsRes : pb::IMessage<UserFriendsRes> {
    private static readonly pb::MessageParser<UserFriendsRes> _parser = new pb::MessageParser<UserFriendsRes>(() => new UserFriendsRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserFriendsRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserFriendsRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserFriendsRes(UserFriendsRes other) : this() {
      ret_ = other.ret_;
      userFriends_ = other.userFriends_.Clone();
      dailyPower_ = other.dailyPower_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserFriendsRes Clone() {
      return new UserFriendsRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_friends" field.</summary>
    public const int UserFriendsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.FriendDetailPB> _repeated_userFriends_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.FriendDetailPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.FriendDetailPB> userFriends_ = new pbc::RepeatedField<global::Com.Proto.FriendDetailPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.FriendDetailPB> UserFriends {
      get { return userFriends_; }
    }

    /// <summary>Field number for the "daily_power" field.</summary>
    public const int DailyPowerFieldNumber = 3;
    private int dailyPower_;
    /// <summary>
    ///当天领取过的体力值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DailyPower {
      get { return dailyPower_; }
      set {
        dailyPower_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserFriendsRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserFriendsRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!userFriends_.Equals(other.userFriends_)) return false;
      if (DailyPower != other.DailyPower) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= userFriends_.GetHashCode();
      if (DailyPower != 0) hash ^= DailyPower.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      userFriends_.WriteTo(output, _repeated_userFriends_codec);
      if (DailyPower != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(DailyPower);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += userFriends_.CalculateSize(_repeated_userFriends_codec);
      if (DailyPower != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DailyPower);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserFriendsRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      userFriends_.Add(other.userFriends_);
      if (other.DailyPower != 0) {
        DailyPower = other.DailyPower;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            userFriends_.AddEntriesFrom(input, _repeated_userFriends_codec);
            break;
          }
          case 24: {
            DailyPower = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///领取体力 friendC/getPower
  /// </summary>
  public sealed partial class GetPowerReq : pb::IMessage<GetPowerReq> {
    private static readonly pb::MessageParser<GetPowerReq> _parser = new pb::MessageParser<GetPowerReq>(() => new GetPowerReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPowerReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerReq(GetPowerReq other) : this() {
      friendId_ = other.friendId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerReq Clone() {
      return new GetPowerReq(this);
    }

    /// <summary>Field number for the "friend_id" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    /// <summary>
    ///谁的
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPowerReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPowerReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(FriendId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FriendId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPowerReq other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            FriendId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetPowerRes : pb::IMessage<GetPowerRes> {
    private static readonly pb::MessageParser<GetPowerRes> _parser = new pb::MessageParser<GetPowerRes>(() => new GetPowerRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPowerRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerRes(GetPowerRes other) : this() {
      ret_ = other.ret_;
      UserFriend = other.userFriend_ != null ? other.UserFriend.Clone() : null;
      dailyPower_ = other.dailyPower_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerRes Clone() {
      return new GetPowerRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_friend" field.</summary>
    public const int UserFriendFieldNumber = 2;
    private global::Com.Proto.UserFriendPB userFriend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserFriendPB UserFriend {
      get { return userFriend_; }
      set {
        userFriend_ = value;
      }
    }

    /// <summary>Field number for the "daily_power" field.</summary>
    public const int DailyPowerFieldNumber = 3;
    private int dailyPower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DailyPower {
      get { return dailyPower_; }
      set {
        dailyPower_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPowerRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPowerRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserFriend, other.UserFriend)) return false;
      if (DailyPower != other.DailyPower) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userFriend_ != null) hash ^= UserFriend.GetHashCode();
      if (DailyPower != 0) hash ^= DailyPower.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userFriend_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserFriend);
      }
      if (DailyPower != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(DailyPower);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userFriend_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserFriend);
      }
      if (DailyPower != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DailyPower);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPowerRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userFriend_ != null) {
        if (userFriend_ == null) {
          userFriend_ = new global::Com.Proto.UserFriendPB();
        }
        UserFriend.MergeFrom(other.UserFriend);
      }
      if (other.DailyPower != 0) {
        DailyPower = other.DailyPower;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userFriend_ == null) {
              userFriend_ = new global::Com.Proto.UserFriendPB();
            }
            input.ReadMessage(userFriend_);
            break;
          }
          case 24: {
            DailyPower = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///一键领取体力 friendC/getPowerAll
  /// </summary>
  public sealed partial class GetPowerAllReq : pb::IMessage<GetPowerAllReq> {
    private static readonly pb::MessageParser<GetPowerAllReq> _parser = new pb::MessageParser<GetPowerAllReq>(() => new GetPowerAllReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPowerAllReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerAllReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerAllReq(GetPowerAllReq other) : this() {
      friendIds_ = other.friendIds_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerAllReq Clone() {
      return new GetPowerAllReq(this);
    }

    /// <summary>Field number for the "friend_ids" field.</summary>
    public const int FriendIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_friendIds_codec
        = pb::FieldCodec.ForSInt32(10);
    private readonly pbc::RepeatedField<int> friendIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///谁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FriendIds {
      get { return friendIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPowerAllReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPowerAllReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!friendIds_.Equals(other.friendIds_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= friendIds_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      friendIds_.WriteTo(output, _repeated_friendIds_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += friendIds_.CalculateSize(_repeated_friendIds_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPowerAllReq other) {
      if (other == null) {
        return;
      }
      friendIds_.Add(other.friendIds_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            friendIds_.AddEntriesFrom(input, _repeated_friendIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetPowerAllRes : pb::IMessage<GetPowerAllRes> {
    private static readonly pb::MessageParser<GetPowerAllRes> _parser = new pb::MessageParser<GetPowerAllRes>(() => new GetPowerAllRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPowerAllRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerAllRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerAllRes(GetPowerAllRes other) : this() {
      ret_ = other.ret_;
      userFriends_ = other.userFriends_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerAllRes Clone() {
      return new GetPowerAllRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_friends" field.</summary>
    public const int UserFriendsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.UserFriendPB> _repeated_userFriends_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.UserFriendPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserFriendPB> userFriends_ = new pbc::RepeatedField<global::Com.Proto.UserFriendPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserFriendPB> UserFriends {
      get { return userFriends_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPowerAllRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPowerAllRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!userFriends_.Equals(other.userFriends_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= userFriends_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      userFriends_.WriteTo(output, _repeated_userFriends_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += userFriends_.CalculateSize(_repeated_userFriends_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPowerAllRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      userFriends_.Add(other.userFriends_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            userFriends_.AddEntriesFrom(input, _repeated_userFriends_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///送体力 friendC/sendPower
  /// </summary>
  public sealed partial class SendPowerReq : pb::IMessage<SendPowerReq> {
    private static readonly pb::MessageParser<SendPowerReq> _parser = new pb::MessageParser<SendPowerReq>(() => new SendPowerReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendPowerReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendPowerReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendPowerReq(SendPowerReq other) : this() {
      friendId_ = other.friendId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendPowerReq Clone() {
      return new SendPowerReq(this);
    }

    /// <summary>Field number for the "friend_id" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    /// <summary>
    ///谁的
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendPowerReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendPowerReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(FriendId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FriendId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendPowerReq other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            FriendId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendPowerRes : pb::IMessage<SendPowerRes> {
    private static readonly pb::MessageParser<SendPowerRes> _parser = new pb::MessageParser<SendPowerRes>(() => new SendPowerRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendPowerRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendPowerRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendPowerRes(SendPowerRes other) : this() {
      ret_ = other.ret_;
      UserFriend = other.userFriend_ != null ? other.UserFriend.Clone() : null;
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
      sendPowerCount_ = other.sendPowerCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendPowerRes Clone() {
      return new SendPowerRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_friend" field.</summary>
    public const int UserFriendFieldNumber = 2;
    private global::Com.Proto.UserFriendPB userFriend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserFriendPB UserFriend {
      get { return userFriend_; }
      set {
        userFriend_ = value;
      }
    }

    /// <summary>Field number for the "user_money" field.</summary>
    public const int UserMoneyFieldNumber = 3;
    private global::Com.Proto.UserMoneyPB userMoney_;
    /// <summary>
    ///更新资源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    /// <summary>Field number for the "sendPowerCount" field.</summary>
    public const int SendPowerCountFieldNumber = 4;
    private int sendPowerCount_;
    /// <summary>
    ///赠送次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendPowerCount {
      get { return sendPowerCount_; }
      set {
        sendPowerCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendPowerRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendPowerRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserFriend, other.UserFriend)) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      if (SendPowerCount != other.SendPowerCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userFriend_ != null) hash ^= UserFriend.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      if (SendPowerCount != 0) hash ^= SendPowerCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userFriend_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserFriend);
      }
      if (userMoney_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserMoney);
      }
      if (SendPowerCount != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(SendPowerCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userFriend_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserFriend);
      }
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      if (SendPowerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SendPowerCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendPowerRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userFriend_ != null) {
        if (userFriend_ == null) {
          userFriend_ = new global::Com.Proto.UserFriendPB();
        }
        UserFriend.MergeFrom(other.UserFriend);
      }
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
      if (other.SendPowerCount != 0) {
        SendPowerCount = other.SendPowerCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userFriend_ == null) {
              userFriend_ = new global::Com.Proto.UserFriendPB();
            }
            input.ReadMessage(userFriend_);
            break;
          }
          case 26: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
          case 32: {
            SendPowerCount = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///送体力 friendC/sendAllPower
  /// </summary>
  public sealed partial class SendAllPowerReq : pb::IMessage<SendAllPowerReq> {
    private static readonly pb::MessageParser<SendAllPowerReq> _parser = new pb::MessageParser<SendAllPowerReq>(() => new SendAllPowerReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendAllPowerReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendAllPowerReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendAllPowerReq(SendAllPowerReq other) : this() {
      friendIds_ = other.friendIds_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendAllPowerReq Clone() {
      return new SendAllPowerReq(this);
    }

    /// <summary>Field number for the "friend_ids" field.</summary>
    public const int FriendIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_friendIds_codec
        = pb::FieldCodec.ForSInt32(10);
    private readonly pbc::RepeatedField<int> friendIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///谁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FriendIds {
      get { return friendIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendAllPowerReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendAllPowerReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!friendIds_.Equals(other.friendIds_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= friendIds_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      friendIds_.WriteTo(output, _repeated_friendIds_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += friendIds_.CalculateSize(_repeated_friendIds_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendAllPowerReq other) {
      if (other == null) {
        return;
      }
      friendIds_.Add(other.friendIds_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            friendIds_.AddEntriesFrom(input, _repeated_friendIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendAllPowerRes : pb::IMessage<SendAllPowerRes> {
    private static readonly pb::MessageParser<SendAllPowerRes> _parser = new pb::MessageParser<SendAllPowerRes>(() => new SendAllPowerRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendAllPowerRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendAllPowerRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendAllPowerRes(SendAllPowerRes other) : this() {
      ret_ = other.ret_;
      userFriends_ = other.userFriends_.Clone();
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
      sendPowerCount_ = other.sendPowerCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendAllPowerRes Clone() {
      return new SendAllPowerRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_friends" field.</summary>
    public const int UserFriendsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.UserFriendPB> _repeated_userFriends_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.UserFriendPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserFriendPB> userFriends_ = new pbc::RepeatedField<global::Com.Proto.UserFriendPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserFriendPB> UserFriends {
      get { return userFriends_; }
    }

    /// <summary>Field number for the "user_money" field.</summary>
    public const int UserMoneyFieldNumber = 3;
    private global::Com.Proto.UserMoneyPB userMoney_;
    /// <summary>
    ///更新资源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    /// <summary>Field number for the "sendPowerCount" field.</summary>
    public const int SendPowerCountFieldNumber = 4;
    private int sendPowerCount_;
    /// <summary>
    ///赠送次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendPowerCount {
      get { return sendPowerCount_; }
      set {
        sendPowerCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendAllPowerRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendAllPowerRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!userFriends_.Equals(other.userFriends_)) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      if (SendPowerCount != other.SendPowerCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= userFriends_.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      if (SendPowerCount != 0) hash ^= SendPowerCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      userFriends_.WriteTo(output, _repeated_userFriends_codec);
      if (userMoney_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserMoney);
      }
      if (SendPowerCount != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(SendPowerCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += userFriends_.CalculateSize(_repeated_userFriends_codec);
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      if (SendPowerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SendPowerCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendAllPowerRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      userFriends_.Add(other.userFriends_);
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
      if (other.SendPowerCount != 0) {
        SendPowerCount = other.SendPowerCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            userFriends_.AddEntriesFrom(input, _repeated_userFriends_codec);
            break;
          }
          case 26: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
          case 32: {
            SendPowerCount = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///删除好友 friendC/del
  /// </summary>
  public sealed partial class DeleteReq : pb::IMessage<DeleteReq> {
    private static readonly pb::MessageParser<DeleteReq> _parser = new pb::MessageParser<DeleteReq>(() => new DeleteReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteReq(DeleteReq other) : this() {
      friendId_ = other.friendId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteReq Clone() {
      return new DeleteReq(this);
    }

    /// <summary>Field number for the "friend_id" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    /// <summary>
    ///谁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(FriendId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FriendId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteReq other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            FriendId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRes : pb::IMessage<DeleteRes> {
    private static readonly pb::MessageParser<DeleteRes> _parser = new pb::MessageParser<DeleteRes>(() => new DeleteRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRes(DeleteRes other) : this() {
      ret_ = other.ret_;
      UserFriend = other.userFriend_ != null ? other.UserFriend.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRes Clone() {
      return new DeleteRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_friend" field.</summary>
    public const int UserFriendFieldNumber = 2;
    private global::Com.Proto.UserFriendPB userFriend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserFriendPB UserFriend {
      get { return userFriend_; }
      set {
        userFriend_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserFriend, other.UserFriend)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userFriend_ != null) hash ^= UserFriend.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userFriend_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserFriend);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userFriend_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserFriend);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userFriend_ != null) {
        if (userFriend_ == null) {
          userFriend_ = new global::Com.Proto.UserFriendPB();
        }
        UserFriend.MergeFrom(other.UserFriend);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userFriend_ == null) {
              userFriend_ = new global::Com.Proto.UserFriendPB();
            }
            input.ReadMessage(userFriend_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///获取好友推荐信息 friendC/comments
  /// </summary>
  public sealed partial class CommentsReq : pb::IMessage<CommentsReq> {
    private static readonly pb::MessageParser<CommentsReq> _parser = new pb::MessageParser<CommentsReq>(() => new CommentsReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommentsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentsReq(CommentsReq other) : this() {
      refresh_ = other.refresh_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentsReq Clone() {
      return new CommentsReq(this);
    }

    /// <summary>Field number for the "refresh" field.</summary>
    public const int RefreshFieldNumber = 1;
    private int refresh_;
    /// <summary>
    ///0只是获取1刷新
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Refresh {
      get { return refresh_; }
      set {
        refresh_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommentsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommentsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Refresh != other.Refresh) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Refresh != 0) hash ^= Refresh.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Refresh != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Refresh);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Refresh != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Refresh);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommentsReq other) {
      if (other == null) {
        return;
      }
      if (other.Refresh != 0) {
        Refresh = other.Refresh;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Refresh = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommentsRes : pb::IMessage<CommentsRes> {
    private static readonly pb::MessageParser<CommentsRes> _parser = new pb::MessageParser<CommentsRes>(() => new CommentsRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommentsRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentsRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentsRes(CommentsRes other) : this() {
      ret_ = other.ret_;
      friendBases_ = other.friendBases_.Clone();
      refreshTime_ = other.refreshTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentsRes Clone() {
      return new CommentsRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "friend_bases" field.</summary>
    public const int FriendBasesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.FriendBaseInfo> _repeated_friendBases_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.FriendBaseInfo.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.FriendBaseInfo> friendBases_ = new pbc::RepeatedField<global::Com.Proto.FriendBaseInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.FriendBaseInfo> FriendBases {
      get { return friendBases_; }
    }

    /// <summary>Field number for the "refresh_time" field.</summary>
    public const int RefreshTimeFieldNumber = 3;
    private long refreshTime_;
    /// <summary>
    ///上一次刷新的时间点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RefreshTime {
      get { return refreshTime_; }
      set {
        refreshTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommentsRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommentsRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!friendBases_.Equals(other.friendBases_)) return false;
      if (RefreshTime != other.RefreshTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= friendBases_.GetHashCode();
      if (RefreshTime != 0L) hash ^= RefreshTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      friendBases_.WriteTo(output, _repeated_friendBases_codec);
      if (RefreshTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RefreshTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += friendBases_.CalculateSize(_repeated_friendBases_codec);
      if (RefreshTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefreshTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommentsRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      friendBases_.Add(other.friendBases_);
      if (other.RefreshTime != 0L) {
        RefreshTime = other.RefreshTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            friendBases_.AddEntriesFrom(input, _repeated_friendBases_codec);
            break;
          }
          case 24: {
            RefreshTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///发起好友申请 friendC/doApply
  /// </summary>
  public sealed partial class DoApplyReq : pb::IMessage<DoApplyReq> {
    private static readonly pb::MessageParser<DoApplyReq> _parser = new pb::MessageParser<DoApplyReq>(() => new DoApplyReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DoApplyReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoApplyReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoApplyReq(DoApplyReq other) : this() {
      friendId_ = other.friendId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoApplyReq Clone() {
      return new DoApplyReq(this);
    }

    /// <summary>Field number for the "friend_id" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    /// <summary>
    ///谁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DoApplyReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DoApplyReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(FriendId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FriendId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DoApplyReq other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            FriendId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DoApplyRes : pb::IMessage<DoApplyRes> {
    private static readonly pb::MessageParser<DoApplyRes> _parser = new pb::MessageParser<DoApplyRes>(() => new DoApplyRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DoApplyRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoApplyRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoApplyRes(DoApplyRes other) : this() {
      ret_ = other.ret_;
      friendId_ = other.friendId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoApplyRes Clone() {
      return new DoApplyRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "friend_id" field.</summary>
    public const int FriendIdFieldNumber = 2;
    private int friendId_;
    /// <summary>
    ///谁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DoApplyRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DoApplyRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (FriendId != other.FriendId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (FriendId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(FriendId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FriendId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DoApplyRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 16: {
            FriendId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///获取好友申请信息 friendC/applys
  /// </summary>
  public sealed partial class ApplysRes : pb::IMessage<ApplysRes> {
    private static readonly pb::MessageParser<ApplysRes> _parser = new pb::MessageParser<ApplysRes>(() => new ApplysRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplysRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplysRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplysRes(ApplysRes other) : this() {
      ret_ = other.ret_;
      friendBases_ = other.friendBases_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplysRes Clone() {
      return new ApplysRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "friend_bases" field.</summary>
    public const int FriendBasesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.FriendBaseInfo> _repeated_friendBases_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.FriendBaseInfo.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.FriendBaseInfo> friendBases_ = new pbc::RepeatedField<global::Com.Proto.FriendBaseInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.FriendBaseInfo> FriendBases {
      get { return friendBases_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplysRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplysRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!friendBases_.Equals(other.friendBases_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= friendBases_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      friendBases_.WriteTo(output, _repeated_friendBases_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += friendBases_.CalculateSize(_repeated_friendBases_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplysRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      friendBases_.Add(other.friendBases_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            friendBases_.AddEntriesFrom(input, _repeated_friendBases_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///同意好友申请 friendC/agree
  /// </summary>
  public sealed partial class AgreeReq : pb::IMessage<AgreeReq> {
    private static readonly pb::MessageParser<AgreeReq> _parser = new pb::MessageParser<AgreeReq>(() => new AgreeReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AgreeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeReq(AgreeReq other) : this() {
      friendId_ = other.friendId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeReq Clone() {
      return new AgreeReq(this);
    }

    /// <summary>Field number for the "friend_id" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    /// <summary>
    ///谁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AgreeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AgreeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(FriendId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FriendId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AgreeReq other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            FriendId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AgreeRes : pb::IMessage<AgreeRes> {
    private static readonly pb::MessageParser<AgreeRes> _parser = new pb::MessageParser<AgreeRes>(() => new AgreeRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AgreeRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeRes(AgreeRes other) : this() {
      ret_ = other.ret_;
      UserFriend = other.userFriend_ != null ? other.UserFriend.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeRes Clone() {
      return new AgreeRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_friend" field.</summary>
    public const int UserFriendFieldNumber = 2;
    private global::Com.Proto.FriendDetailPB userFriend_;
    /// <summary>
    ///好友添加成功，就返回具体好友信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.FriendDetailPB UserFriend {
      get { return userFriend_; }
      set {
        userFriend_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AgreeRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AgreeRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserFriend, other.UserFriend)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userFriend_ != null) hash ^= UserFriend.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userFriend_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserFriend);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userFriend_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserFriend);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AgreeRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userFriend_ != null) {
        if (userFriend_ == null) {
          userFriend_ = new global::Com.Proto.FriendDetailPB();
        }
        UserFriend.MergeFrom(other.UserFriend);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userFriend_ == null) {
              userFriend_ = new global::Com.Proto.FriendDetailPB();
            }
            input.ReadMessage(userFriend_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///忽略好友申请 friendC/ignore
  /// </summary>
  public sealed partial class IgnoreReq : pb::IMessage<IgnoreReq> {
    private static readonly pb::MessageParser<IgnoreReq> _parser = new pb::MessageParser<IgnoreReq>(() => new IgnoreReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IgnoreReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IgnoreReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IgnoreReq(IgnoreReq other) : this() {
      friendId_ = other.friendId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IgnoreReq Clone() {
      return new IgnoreReq(this);
    }

    /// <summary>Field number for the "friend_id" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    /// <summary>
    ///谁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IgnoreReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IgnoreReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(FriendId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FriendId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IgnoreReq other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            FriendId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IgnoreRes : pb::IMessage<IgnoreRes> {
    private static readonly pb::MessageParser<IgnoreRes> _parser = new pb::MessageParser<IgnoreRes>(() => new IgnoreRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IgnoreRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IgnoreRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IgnoreRes(IgnoreRes other) : this() {
      ret_ = other.ret_;
      friendId_ = other.friendId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IgnoreRes Clone() {
      return new IgnoreRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "friend_id" field.</summary>
    public const int FriendIdFieldNumber = 2;
    private int friendId_;
    /// <summary>
    ///谁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IgnoreRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IgnoreRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (FriendId != other.FriendId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (FriendId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(FriendId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FriendId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IgnoreRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 16: {
            FriendId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///查找好友 friendC/search
  /// </summary>
  public sealed partial class SearchReq : pb::IMessage<SearchReq> {
    private static readonly pb::MessageParser<SearchReq> _parser = new pb::MessageParser<SearchReq>(() => new SearchReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchReq(SearchReq other) : this() {
      friendId_ = other.friendId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchReq Clone() {
      return new SearchReq(this);
    }

    /// <summary>Field number for the "friend_id" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private int friendId_;
    /// <summary>
    ///谁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendId {
      get { return friendId_; }
      set {
        friendId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId != 0) hash ^= FriendId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(FriendId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FriendId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchReq other) {
      if (other == null) {
        return;
      }
      if (other.FriendId != 0) {
        FriendId = other.FriendId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            FriendId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchRes : pb::IMessage<SearchRes> {
    private static readonly pb::MessageParser<SearchRes> _parser = new pb::MessageParser<SearchRes>(() => new SearchRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFriendReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRes(SearchRes other) : this() {
      ret_ = other.ret_;
      FriendBase = other.friendBase_ != null ? other.FriendBase.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRes Clone() {
      return new SearchRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "friend_base" field.</summary>
    public const int FriendBaseFieldNumber = 2;
    private global::Com.Proto.FriendBaseInfo friendBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.FriendBaseInfo FriendBase {
      get { return friendBase_; }
      set {
        friendBase_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(FriendBase, other.FriendBase)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (friendBase_ != null) hash ^= FriendBase.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (friendBase_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FriendBase);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (friendBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FriendBase);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.friendBase_ != null) {
        if (friendBase_ == null) {
          friendBase_ = new global::Com.Proto.FriendBaseInfo();
        }
        FriendBase.MergeFrom(other.FriendBase);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (friendBase_ == null) {
              friendBase_ = new global::Com.Proto.FriendBaseInfo();
            }
            input.ReadMessage(friendBase_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
