// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller_favorability.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from controller_favorability.proto</summary>
  public static partial class ControllerFavorabilityReflection {

    #region Descriptor
    /// <summary>File descriptor for controller_favorability.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControllerFavorabilityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1jb250cm9sbGVyX2Zhdm9yYWJpbGl0eS5wcm90bxIJY29tLnByb3RvGgpi",
            "YXNlLnByb3RvGh9iZWFuX2RyZXNzX3VwX3VubG9ja19ydWxlLnByb3RvGhxi",
            "ZWFuX2Zhdm9yYWJpbGl0eV9pdGVtLnByb3RvGhxiZWFuX3VzZXJfZmF2b3Jh",
            "YmlsaXR5LnByb3RvGiFiZWFuX3VzZXJfZmF2b3JhYmlsaXR5X2luZm8ucHJv",
            "dG8aImJlYW5fZmF2b3JhYmlsaXR5X2xldmVsX3J1bGUucHJvdG8aFGJlYW5f",
            "dXNlcl9pdGVtLnByb3RvGhViZWFuX3VzZXJfbW9uZXkucHJvdG8aHGJlYW5f",
            "c2NlbmVfdW5sb2NrX3J1bGUucHJvdG8inAIKE0Zhdm9yYWJpbGl0eVJ1bGVS",
            "ZXMSCwoDcmV0GAEgASgREjkKEmZhdm9yYWJpbGl0eV9pdGVtcxgCIAMoCzId",
            "LmNvbS5wcm90by5GYXZvcmFiaWxpdHlJdGVtUEISPQoVZHJlc3NfdXBfdW5s",
            "b2NrX3J1bGVzGAMgAygLMh4uY29tLnByb3RvLkRyZXNzVXBVbmxvY2tSdWxl",
            "UEISRAoYZmF2b3JhYmlsaXR5X2xldmVsX3J1bGVzGAQgAygLMiIuY29tLnBy",
            "b3RvLkZhdm9yYWJpbGl0eUxldmVsUnVsZVBCEjgKEnNjZW5lX3VubG9ja19y",
            "dWxlcxgFIAMoCzIcLmNvbS5wcm90by5TY2VuZVVubG9ja1J1bGVQQiKfAQoT",
            "RmF2b3JhYmlsaXR5SW5mb1JlcxILCgNyZXQYASABKBESOAoRdXNlcl9mYXZv",
            "cmFiaWxpdHkYAiADKAsyHS5jb20ucHJvdG8uVXNlckZhdm9yYWJpbGl0eVBC",
            "EkEKFnVzZXJfZmF2b3JhYmlsaXR5X2luZm8YAyABKAsyIS5jb20ucHJvdG8u",
            "VXNlckZhdm9yYWJpbGl0eUluZm9QQiIpCgxUb3VjaFJvbGVSZXESGQoGcGxh",
            "eWVyGAEgASgOMgkuUGxheWVyUEIimAEKDFRvdWNoUm9sZVJlcxILCgNyZXQY",
            "ASABKBESOAoRdXNlcl9mYXZvcmFiaWxpdHkYAiABKAsyHS5jb20ucHJvdG8u",
            "VXNlckZhdm9yYWJpbGl0eVBCEkEKFnVzZXJfZmF2b3JhYmlsaXR5X2luZm8Y",
            "AyABKAsyIS5jb20ucHJvdG8uVXNlckZhdm9yYWJpbGl0eUluZm9QQiJWChtV",
            "cGdyYWRlRmF2b3JhYmlsaXR5TGV2ZWxSZXESGQoGcGxheWVyGAEgASgOMgku",
            "UGxheWVyUEISDwoHaXRlbV9pZBgCIAEoERILCgNudW0YAyABKBEijgEKG1Vw",
            "Z3JhZGVGYXZvcmFiaWxpdHlMZXZlbFJlcxILCgNyZXQYASABKBESOAoRdXNl",
            "cl9mYXZvcmFiaWxpdHkYAiABKAsyHS5jb20ucHJvdG8uVXNlckZhdm9yYWJp",
            "bGl0eVBCEigKCXVzZXJfaXRlbRgDIAEoCzIVLmNvbS5wcm90by5Vc2VySXRl",
            "bVBCIjkKCkRyZXNzVXBSZXESGQoGcGxheWVyGAEgASgOMgkuUGxheWVyUEIS",
            "EAoIaXRlbV9pZHMYAiADKBEiqgEKCkRyZXNzVXBSZXMSCwoDcmV0GAEgASgR",
            "EjgKEXVzZXJfZmF2b3JhYmlsaXR5GAIgASgLMh0uY29tLnByb3RvLlVzZXJG",
            "YXZvcmFiaWxpdHlQQhIpCgp1c2VyX2l0ZW1zGAMgAygLMhUuY29tLnByb3Rv",
            "LlVzZXJJdGVtUEISKgoKdXNlcl9tb25leRgEIAEoCzIWLmNvbS5wcm90by5V",
            "c2VyTW9uZXlQQkI/Ch9uZXQuZ2FsYXNwb3J0cy5iaWdzdGFyLnByb3RvY29s",
            "QhxGYXZvcmFiaWxpdHlDb250cm9sbGVyUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanDressUpUnlockRuleReflection.Descriptor, global::Com.Proto.BeanFavorabilityItemReflection.Descriptor, global::Com.Proto.BeanUserFavorabilityReflection.Descriptor, global::Com.Proto.BeanUserFavorabilityInfoReflection.Descriptor, global::Com.Proto.BeanFavorabilityLevelRuleReflection.Descriptor, global::Com.Proto.BeanUserItemReflection.Descriptor, global::Com.Proto.BeanUserMoneyReflection.Descriptor, global::Com.Proto.BeanSceneUnlockRuleReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.FavorabilityRuleRes), global::Com.Proto.FavorabilityRuleRes.Parser, new[]{ "Ret", "FavorabilityItems", "DressUpUnlockRules", "FavorabilityLevelRules", "SceneUnlockRules" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.FavorabilityInfoRes), global::Com.Proto.FavorabilityInfoRes.Parser, new[]{ "Ret", "UserFavorability", "UserFavorabilityInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.TouchRoleReq), global::Com.Proto.TouchRoleReq.Parser, new[]{ "Player" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.TouchRoleRes), global::Com.Proto.TouchRoleRes.Parser, new[]{ "Ret", "UserFavorability", "UserFavorabilityInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UpgradeFavorabilityLevelReq), global::Com.Proto.UpgradeFavorabilityLevelReq.Parser, new[]{ "Player", "ItemId", "Num" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UpgradeFavorabilityLevelRes), global::Com.Proto.UpgradeFavorabilityLevelRes.Parser, new[]{ "Ret", "UserFavorability", "UserItem" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.DressUpReq), global::Com.Proto.DressUpReq.Parser, new[]{ "Player", "ItemIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.DressUpRes), global::Com.Proto.DressUpRes.Parser, new[]{ "Ret", "UserFavorability", "UserItems", "UserMoney" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///好感度有关规则
  /// </summary>
  public sealed partial class FavorabilityRuleRes : pb::IMessage<FavorabilityRuleRes> {
    private static readonly pb::MessageParser<FavorabilityRuleRes> _parser = new pb::MessageParser<FavorabilityRuleRes>(() => new FavorabilityRuleRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FavorabilityRuleRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFavorabilityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FavorabilityRuleRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FavorabilityRuleRes(FavorabilityRuleRes other) : this() {
      ret_ = other.ret_;
      favorabilityItems_ = other.favorabilityItems_.Clone();
      dressUpUnlockRules_ = other.dressUpUnlockRules_.Clone();
      favorabilityLevelRules_ = other.favorabilityLevelRules_.Clone();
      sceneUnlockRules_ = other.sceneUnlockRules_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FavorabilityRuleRes Clone() {
      return new FavorabilityRuleRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "favorability_items" field.</summary>
    public const int FavorabilityItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.FavorabilityItemPB> _repeated_favorabilityItems_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.FavorabilityItemPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.FavorabilityItemPB> favorabilityItems_ = new pbc::RepeatedField<global::Com.Proto.FavorabilityItemPB>();
    /// <summary>
    ///好感度升级道具信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.FavorabilityItemPB> FavorabilityItems {
      get { return favorabilityItems_; }
    }

    /// <summary>Field number for the "dress_up_unlock_rules" field.</summary>
    public const int DressUpUnlockRulesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.DressUpUnlockRulePB> _repeated_dressUpUnlockRules_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.DressUpUnlockRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.DressUpUnlockRulePB> dressUpUnlockRules_ = new pbc::RepeatedField<global::Com.Proto.DressUpUnlockRulePB>();
    /// <summary>
    ///换装服饰信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.DressUpUnlockRulePB> DressUpUnlockRules {
      get { return dressUpUnlockRules_; }
    }

    /// <summary>Field number for the "favorability_level_rules" field.</summary>
    public const int FavorabilityLevelRulesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.FavorabilityLevelRulePB> _repeated_favorabilityLevelRules_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.FavorabilityLevelRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.FavorabilityLevelRulePB> favorabilityLevelRules_ = new pbc::RepeatedField<global::Com.Proto.FavorabilityLevelRulePB>();
    /// <summary>
    ///好感度等级规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.FavorabilityLevelRulePB> FavorabilityLevelRules {
      get { return favorabilityLevelRules_; }
    }

    /// <summary>Field number for the "scene_unlock_rules" field.</summary>
    public const int SceneUnlockRulesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Com.Proto.SceneUnlockRulePB> _repeated_sceneUnlockRules_codec
        = pb::FieldCodec.ForMessage(42, global::Com.Proto.SceneUnlockRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.SceneUnlockRulePB> sceneUnlockRules_ = new pbc::RepeatedField<global::Com.Proto.SceneUnlockRulePB>();
    /// <summary>
    ///好感度事件规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.SceneUnlockRulePB> SceneUnlockRules {
      get { return sceneUnlockRules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FavorabilityRuleRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FavorabilityRuleRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!favorabilityItems_.Equals(other.favorabilityItems_)) return false;
      if(!dressUpUnlockRules_.Equals(other.dressUpUnlockRules_)) return false;
      if(!favorabilityLevelRules_.Equals(other.favorabilityLevelRules_)) return false;
      if(!sceneUnlockRules_.Equals(other.sceneUnlockRules_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= favorabilityItems_.GetHashCode();
      hash ^= dressUpUnlockRules_.GetHashCode();
      hash ^= favorabilityLevelRules_.GetHashCode();
      hash ^= sceneUnlockRules_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      favorabilityItems_.WriteTo(output, _repeated_favorabilityItems_codec);
      dressUpUnlockRules_.WriteTo(output, _repeated_dressUpUnlockRules_codec);
      favorabilityLevelRules_.WriteTo(output, _repeated_favorabilityLevelRules_codec);
      sceneUnlockRules_.WriteTo(output, _repeated_sceneUnlockRules_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += favorabilityItems_.CalculateSize(_repeated_favorabilityItems_codec);
      size += dressUpUnlockRules_.CalculateSize(_repeated_dressUpUnlockRules_codec);
      size += favorabilityLevelRules_.CalculateSize(_repeated_favorabilityLevelRules_codec);
      size += sceneUnlockRules_.CalculateSize(_repeated_sceneUnlockRules_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FavorabilityRuleRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      favorabilityItems_.Add(other.favorabilityItems_);
      dressUpUnlockRules_.Add(other.dressUpUnlockRules_);
      favorabilityLevelRules_.Add(other.favorabilityLevelRules_);
      sceneUnlockRules_.Add(other.sceneUnlockRules_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            favorabilityItems_.AddEntriesFrom(input, _repeated_favorabilityItems_codec);
            break;
          }
          case 26: {
            dressUpUnlockRules_.AddEntriesFrom(input, _repeated_dressUpUnlockRules_codec);
            break;
          }
          case 34: {
            favorabilityLevelRules_.AddEntriesFrom(input, _repeated_favorabilityLevelRules_codec);
            break;
          }
          case 42: {
            sceneUnlockRules_.AddEntriesFrom(input, _repeated_sceneUnlockRules_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///好感度有关信息
  /// </summary>
  public sealed partial class FavorabilityInfoRes : pb::IMessage<FavorabilityInfoRes> {
    private static readonly pb::MessageParser<FavorabilityInfoRes> _parser = new pb::MessageParser<FavorabilityInfoRes>(() => new FavorabilityInfoRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FavorabilityInfoRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFavorabilityReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FavorabilityInfoRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FavorabilityInfoRes(FavorabilityInfoRes other) : this() {
      ret_ = other.ret_;
      userFavorability_ = other.userFavorability_.Clone();
      UserFavorabilityInfo = other.userFavorabilityInfo_ != null ? other.UserFavorabilityInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FavorabilityInfoRes Clone() {
      return new FavorabilityInfoRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_favorability" field.</summary>
    public const int UserFavorabilityFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.UserFavorabilityPB> _repeated_userFavorability_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.UserFavorabilityPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserFavorabilityPB> userFavorability_ = new pbc::RepeatedField<global::Com.Proto.UserFavorabilityPB>();
    /// <summary>
    ///玩家角色好感度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserFavorabilityPB> UserFavorability {
      get { return userFavorability_; }
    }

    /// <summary>Field number for the "user_favorability_info" field.</summary>
    public const int UserFavorabilityInfoFieldNumber = 3;
    private global::Com.Proto.UserFavorabilityInfoPB userFavorabilityInfo_;
    /// <summary>
    ///玩家角色好感度信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserFavorabilityInfoPB UserFavorabilityInfo {
      get { return userFavorabilityInfo_; }
      set {
        userFavorabilityInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FavorabilityInfoRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FavorabilityInfoRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!userFavorability_.Equals(other.userFavorability_)) return false;
      if (!object.Equals(UserFavorabilityInfo, other.UserFavorabilityInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= userFavorability_.GetHashCode();
      if (userFavorabilityInfo_ != null) hash ^= UserFavorabilityInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      userFavorability_.WriteTo(output, _repeated_userFavorability_codec);
      if (userFavorabilityInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserFavorabilityInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += userFavorability_.CalculateSize(_repeated_userFavorability_codec);
      if (userFavorabilityInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserFavorabilityInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FavorabilityInfoRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      userFavorability_.Add(other.userFavorability_);
      if (other.userFavorabilityInfo_ != null) {
        if (userFavorabilityInfo_ == null) {
          userFavorabilityInfo_ = new global::Com.Proto.UserFavorabilityInfoPB();
        }
        UserFavorabilityInfo.MergeFrom(other.UserFavorabilityInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            userFavorability_.AddEntriesFrom(input, _repeated_userFavorability_codec);
            break;
          }
          case 26: {
            if (userFavorabilityInfo_ == null) {
              userFavorabilityInfo_ = new global::Com.Proto.UserFavorabilityInfoPB();
            }
            input.ReadMessage(userFavorabilityInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///触摸版娘 请求包
  /// </summary>
  public sealed partial class TouchRoleReq : pb::IMessage<TouchRoleReq> {
    private static readonly pb::MessageParser<TouchRoleReq> _parser = new pb::MessageParser<TouchRoleReq>(() => new TouchRoleReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TouchRoleReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFavorabilityReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TouchRoleReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TouchRoleReq(TouchRoleReq other) : this() {
      player_ = other.player_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TouchRoleReq Clone() {
      return new TouchRoleReq(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::PlayerPB player_ = 0;
    /// <summary>
    ///主角ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PlayerPB Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TouchRoleReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TouchRoleReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Player != other.Player) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Player != 0) hash ^= Player.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Player != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Player);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Player != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Player);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TouchRoleReq other) {
      if (other == null) {
        return;
      }
      if (other.Player != 0) {
        Player = other.Player;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            player_ = (global::PlayerPB) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///触摸版娘回包
  /// </summary>
  public sealed partial class TouchRoleRes : pb::IMessage<TouchRoleRes> {
    private static readonly pb::MessageParser<TouchRoleRes> _parser = new pb::MessageParser<TouchRoleRes>(() => new TouchRoleRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TouchRoleRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFavorabilityReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TouchRoleRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TouchRoleRes(TouchRoleRes other) : this() {
      ret_ = other.ret_;
      UserFavorability = other.userFavorability_ != null ? other.UserFavorability.Clone() : null;
      UserFavorabilityInfo = other.userFavorabilityInfo_ != null ? other.UserFavorabilityInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TouchRoleRes Clone() {
      return new TouchRoleRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_favorability" field.</summary>
    public const int UserFavorabilityFieldNumber = 2;
    private global::Com.Proto.UserFavorabilityPB userFavorability_;
    /// <summary>
    ///玩家角色好感度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserFavorabilityPB UserFavorability {
      get { return userFavorability_; }
      set {
        userFavorability_ = value;
      }
    }

    /// <summary>Field number for the "user_favorability_info" field.</summary>
    public const int UserFavorabilityInfoFieldNumber = 3;
    private global::Com.Proto.UserFavorabilityInfoPB userFavorabilityInfo_;
    /// <summary>
    ///玩家角色好感度信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserFavorabilityInfoPB UserFavorabilityInfo {
      get { return userFavorabilityInfo_; }
      set {
        userFavorabilityInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TouchRoleRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TouchRoleRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserFavorability, other.UserFavorability)) return false;
      if (!object.Equals(UserFavorabilityInfo, other.UserFavorabilityInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userFavorability_ != null) hash ^= UserFavorability.GetHashCode();
      if (userFavorabilityInfo_ != null) hash ^= UserFavorabilityInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userFavorability_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserFavorability);
      }
      if (userFavorabilityInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserFavorabilityInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userFavorability_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserFavorability);
      }
      if (userFavorabilityInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserFavorabilityInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TouchRoleRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userFavorability_ != null) {
        if (userFavorability_ == null) {
          userFavorability_ = new global::Com.Proto.UserFavorabilityPB();
        }
        UserFavorability.MergeFrom(other.UserFavorability);
      }
      if (other.userFavorabilityInfo_ != null) {
        if (userFavorabilityInfo_ == null) {
          userFavorabilityInfo_ = new global::Com.Proto.UserFavorabilityInfoPB();
        }
        UserFavorabilityInfo.MergeFrom(other.UserFavorabilityInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userFavorability_ == null) {
              userFavorability_ = new global::Com.Proto.UserFavorabilityPB();
            }
            input.ReadMessage(userFavorability_);
            break;
          }
          case 26: {
            if (userFavorabilityInfo_ == null) {
              userFavorabilityInfo_ = new global::Com.Proto.UserFavorabilityInfoPB();
            }
            input.ReadMessage(userFavorabilityInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///升级好感度 请求包
  /// </summary>
  public sealed partial class UpgradeFavorabilityLevelReq : pb::IMessage<UpgradeFavorabilityLevelReq> {
    private static readonly pb::MessageParser<UpgradeFavorabilityLevelReq> _parser = new pb::MessageParser<UpgradeFavorabilityLevelReq>(() => new UpgradeFavorabilityLevelReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpgradeFavorabilityLevelReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFavorabilityReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeFavorabilityLevelReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeFavorabilityLevelReq(UpgradeFavorabilityLevelReq other) : this() {
      player_ = other.player_;
      itemId_ = other.itemId_;
      num_ = other.num_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeFavorabilityLevelReq Clone() {
      return new UpgradeFavorabilityLevelReq(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::PlayerPB player_ = 0;
    /// <summary>
    ///主角ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PlayerPB Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    /// <summary>
    ///道具ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 3;
    private int num_;
    /// <summary>
    ///数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpgradeFavorabilityLevelReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpgradeFavorabilityLevelReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Player != other.Player) return false;
      if (ItemId != other.ItemId) return false;
      if (Num != other.Num) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Player != 0) hash ^= Player.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Player != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Player);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(ItemId);
      }
      if (Num != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Num);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Player != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Player);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ItemId);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Num);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpgradeFavorabilityLevelReq other) {
      if (other == null) {
        return;
      }
      if (other.Player != 0) {
        Player = other.Player;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            player_ = (global::PlayerPB) input.ReadEnum();
            break;
          }
          case 16: {
            ItemId = input.ReadSInt32();
            break;
          }
          case 24: {
            Num = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///升级好感度 回包
  /// </summary>
  public sealed partial class UpgradeFavorabilityLevelRes : pb::IMessage<UpgradeFavorabilityLevelRes> {
    private static readonly pb::MessageParser<UpgradeFavorabilityLevelRes> _parser = new pb::MessageParser<UpgradeFavorabilityLevelRes>(() => new UpgradeFavorabilityLevelRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpgradeFavorabilityLevelRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFavorabilityReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeFavorabilityLevelRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeFavorabilityLevelRes(UpgradeFavorabilityLevelRes other) : this() {
      ret_ = other.ret_;
      UserFavorability = other.userFavorability_ != null ? other.UserFavorability.Clone() : null;
      UserItem = other.userItem_ != null ? other.UserItem.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeFavorabilityLevelRes Clone() {
      return new UpgradeFavorabilityLevelRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_favorability" field.</summary>
    public const int UserFavorabilityFieldNumber = 2;
    private global::Com.Proto.UserFavorabilityPB userFavorability_;
    /// <summary>
    ///玩家角色好感度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserFavorabilityPB UserFavorability {
      get { return userFavorability_; }
      set {
        userFavorability_ = value;
      }
    }

    /// <summary>Field number for the "user_item" field.</summary>
    public const int UserItemFieldNumber = 3;
    private global::Com.Proto.UserItemPB userItem_;
    /// <summary>
    ///道具信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserItemPB UserItem {
      get { return userItem_; }
      set {
        userItem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpgradeFavorabilityLevelRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpgradeFavorabilityLevelRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserFavorability, other.UserFavorability)) return false;
      if (!object.Equals(UserItem, other.UserItem)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userFavorability_ != null) hash ^= UserFavorability.GetHashCode();
      if (userItem_ != null) hash ^= UserItem.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userFavorability_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserFavorability);
      }
      if (userItem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserItem);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userFavorability_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserFavorability);
      }
      if (userItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserItem);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpgradeFavorabilityLevelRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userFavorability_ != null) {
        if (userFavorability_ == null) {
          userFavorability_ = new global::Com.Proto.UserFavorabilityPB();
        }
        UserFavorability.MergeFrom(other.UserFavorability);
      }
      if (other.userItem_ != null) {
        if (userItem_ == null) {
          userItem_ = new global::Com.Proto.UserItemPB();
        }
        UserItem.MergeFrom(other.UserItem);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userFavorability_ == null) {
              userFavorability_ = new global::Com.Proto.UserFavorabilityPB();
            }
            input.ReadMessage(userFavorability_);
            break;
          }
          case 26: {
            if (userItem_ == null) {
              userItem_ = new global::Com.Proto.UserItemPB();
            }
            input.ReadMessage(userItem_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///换装 请求包
  /// </summary>
  public sealed partial class DressUpReq : pb::IMessage<DressUpReq> {
    private static readonly pb::MessageParser<DressUpReq> _parser = new pb::MessageParser<DressUpReq>(() => new DressUpReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DressUpReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFavorabilityReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DressUpReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DressUpReq(DressUpReq other) : this() {
      player_ = other.player_;
      itemIds_ = other.itemIds_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DressUpReq Clone() {
      return new DressUpReq(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::PlayerPB player_ = 0;
    /// <summary>
    ///主角ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PlayerPB Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "item_ids" field.</summary>
    public const int ItemIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_itemIds_codec
        = pb::FieldCodec.ForSInt32(18);
    private readonly pbc::RepeatedField<int> itemIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///道具ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ItemIds {
      get { return itemIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DressUpReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DressUpReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Player != other.Player) return false;
      if(!itemIds_.Equals(other.itemIds_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Player != 0) hash ^= Player.GetHashCode();
      hash ^= itemIds_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Player != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Player);
      }
      itemIds_.WriteTo(output, _repeated_itemIds_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Player != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Player);
      }
      size += itemIds_.CalculateSize(_repeated_itemIds_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DressUpReq other) {
      if (other == null) {
        return;
      }
      if (other.Player != 0) {
        Player = other.Player;
      }
      itemIds_.Add(other.itemIds_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            player_ = (global::PlayerPB) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            itemIds_.AddEntriesFrom(input, _repeated_itemIds_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///换装 回包
  /// </summary>
  public sealed partial class DressUpRes : pb::IMessage<DressUpRes> {
    private static readonly pb::MessageParser<DressUpRes> _parser = new pb::MessageParser<DressUpRes>(() => new DressUpRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DressUpRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerFavorabilityReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DressUpRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DressUpRes(DressUpRes other) : this() {
      ret_ = other.ret_;
      UserFavorability = other.userFavorability_ != null ? other.UserFavorability.Clone() : null;
      userItems_ = other.userItems_.Clone();
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DressUpRes Clone() {
      return new DressUpRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_favorability" field.</summary>
    public const int UserFavorabilityFieldNumber = 2;
    private global::Com.Proto.UserFavorabilityPB userFavorability_;
    /// <summary>
    ///玩家角色好感度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserFavorabilityPB UserFavorability {
      get { return userFavorability_; }
      set {
        userFavorability_ = value;
      }
    }

    /// <summary>Field number for the "user_items" field.</summary>
    public const int UserItemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.UserItemPB> _repeated_userItems_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.UserItemPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserItemPB> userItems_ = new pbc::RepeatedField<global::Com.Proto.UserItemPB>();
    /// <summary>
    ///道具信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserItemPB> UserItems {
      get { return userItems_; }
    }

    /// <summary>Field number for the "user_money" field.</summary>
    public const int UserMoneyFieldNumber = 4;
    private global::Com.Proto.UserMoneyPB userMoney_;
    /// <summary>
    ///用户金钱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DressUpRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DressUpRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserFavorability, other.UserFavorability)) return false;
      if(!userItems_.Equals(other.userItems_)) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userFavorability_ != null) hash ^= UserFavorability.GetHashCode();
      hash ^= userItems_.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userFavorability_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserFavorability);
      }
      userItems_.WriteTo(output, _repeated_userItems_codec);
      if (userMoney_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UserMoney);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userFavorability_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserFavorability);
      }
      size += userItems_.CalculateSize(_repeated_userItems_codec);
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DressUpRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userFavorability_ != null) {
        if (userFavorability_ == null) {
          userFavorability_ = new global::Com.Proto.UserFavorabilityPB();
        }
        UserFavorability.MergeFrom(other.UserFavorability);
      }
      userItems_.Add(other.userItems_);
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userFavorability_ == null) {
              userFavorability_ = new global::Com.Proto.UserFavorabilityPB();
            }
            input.ReadMessage(userFavorability_);
            break;
          }
          case 26: {
            userItems_.AddEntriesFrom(input, _repeated_userItems_codec);
            break;
          }
          case 34: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
