// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller_card_memories.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from controller_card_memories.proto</summary>
  public static partial class ControllerCardMemoriesReflection {

    #region Descriptor
    /// <summary>File descriptor for controller_card_memories.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControllerCardMemoriesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5jb250cm9sbGVyX2NhcmRfbWVtb3JpZXMucHJvdG8SCWNvbS5wcm90bxoK",
            "YmFzZS5wcm90bxolYmVhbl9jYXJkX21lbW9yaWVzX2NvbnN1bWVfcnVsZS5w",
            "cm90bxoiYmVhbl91c2VyX2NhcmRfbWVtb3JpZXNfaW5mby5wcm90bxoVYmVh",
            "bl91c2VyX3Bvd2VyLnByb3RvGhRiZWFuX3VzZXJfY2FyZC5wcm90bxoVYmVh",
            "bl91c2VyX21vbmV5LnByb3RvGhBiZWFuX2F3YXJkLnByb3RvGiBiZWFuX3Vz",
            "ZXJfbWVtb3JpZXNfbWlzc2lvbi5wcm90bxogYmVhbl9jYXJkX21lbW9yaWVz",
            "X21pc3Npb24ucHJvdG8aFGJlYW5fdXNlcl9pdGVtLnByb3RvIq0BChNDYXJk",
            "TWVtb3JpZXNSdWxlUmVzEgsKA3JldBgBIAEoERJIChpjYXJkX21lbW9yaWVz",
            "X2NvbnN1bWVfcnVsZRgCIAMoCzIkLmNvbS5wcm90by5DYXJkTWVtb3JpZXND",
            "b25zdW1lUnVsZVBCEj8KFWNhcmRfbWVtb3JpZXNfbWlzc2lvbhgDIAMoCzIg",
            "LmNvbS5wcm90by5DYXJkTWVtb3JpZXNNaXNzaW9uUEIiTgoVQnV5TWVtb3Jp",
            "ZXNDb25zdW1lUmVxEiQKBHR5cGUYASABKA4yFi5NZW1vcmllc0NvbnN1bWVU",
            "eXBlUEISDwoHY2FyZF9pZBgCIAEoESKUAgoVQnV5TWVtb3JpZXNDb25zdW1l",
            "UmVzEgsKA3JldBgBIAEoERJCChd1c2VyX2NhcmRfbWVtb3JpZXNfaW5mbxgC",
            "IAEoCzIhLmNvbS5wcm90by5Vc2VyQ2FyZE1lbW9yaWVzSW5mb1BCEigKCXVz",
            "ZXJfY2FyZBgDIAEoCzIVLmNvbS5wcm90by5Vc2VyQ2FyZFBCEioKCnVzZXJf",
            "cG93ZXIYBCABKAsyFi5jb20ucHJvdG8uVXNlclBvd2VyUEISKgoKdXNlcl9t",
            "b25leRgFIAEoCzIWLmNvbS5wcm90by5Vc2VyTW9uZXlQQhIoCgl1c2VyX2l0",
            "ZW0YBiABKAsyFS5jb20ucHJvdG8uVXNlckl0ZW1QQiL3AQoTQ2FyZE1lbW9y",
            "aWVzSW5mb1JlcxILCgNyZXQYASABKBESQgoXdXNlcl9jYXJkX21lbW9yaWVz",
            "X2luZm8YAiABKAsyIS5jb20ucHJvdG8uVXNlckNhcmRNZW1vcmllc0luZm9Q",
            "QhIqCgp1c2VyX3Bvd2VyGAMgASgLMhYuY29tLnByb3RvLlVzZXJQb3dlclBC",
            "EkAKFnVzZXJfbWVtbW9yaWVzX21pc3Npb24YBCABKAsyIC5jb20ucHJvdG8u",
            "VXNlck1lbW9yaWVzTWlzc2lvblBCEiEKBWF3YXJkGAUgAygLMhIuY29tLnBy",
            "b3RvLkF3YXJkUEIiQgoYQ2hhbGxlbmdlQ2FyZE1lbW9yaWVzUmVxEg8KB2Nh",
            "cmRfaWQYASABKBESFQoNY2hhbGxlbmdlX251bRgCIAEoESKQAgoYQ2hhbGxl",
            "bmdlQ2FyZE1lbW9yaWVzUmVzEgsKA3JldBgBIAEoERJCChd1c2VyX2NhcmRf",
            "bWVtb3JpZXNfaW5mbxgCIAEoCzIhLmNvbS5wcm90by5Vc2VyQ2FyZE1lbW9y",
            "aWVzSW5mb1BCEioKCnVzZXJfcG93ZXIYAyABKAsyFi5jb20ucHJvdG8uVXNl",
            "clBvd2VyUEISKgoKdXNlcl9tb25leRgEIAEoCzIWLmNvbS5wcm90by5Vc2Vy",
            "TW9uZXlQQhIhCgVhd2FyZBgFIAMoCzISLmNvbS5wcm90by5Bd2FyZFBCEigK",
            "CXVzZXJfY2FyZBgGIAEoCzIVLmNvbS5wcm90by5Vc2VyQ2FyZFBCIukBCh1D",
            "YXJkTWVtb3JpZXNNaXNzaW9uUmVjZWl2ZVJlcxILCgNyZXQYASABKBESKgoK",
            "dXNlcl9wb3dlchgCIAEoCzIWLmNvbS5wcm90by5Vc2VyUG93ZXJQQhIqCgp1",
            "c2VyX21vbmV5GAMgASgLMhYuY29tLnByb3RvLlVzZXJNb25leVBCEiEKBWF3",
            "YXJkGAQgAygLMhIuY29tLnByb3RvLkF3YXJkUEISQAoWdXNlcl9tZW1tb3Jp",
            "ZXNfbWlzc2lvbhgFIAEoCzIgLmNvbS5wcm90by5Vc2VyTWVtb3JpZXNNaXNz",
            "aW9uUEIiMwodQ2FyZE1lbW9yaWVzTWlzc2lvblJlY2VpdmVSZXESEgoKbWlz",
            "c2lvbl9pZBgBIAEoEUI/Ch9uZXQuZ2FsYXNwb3J0cy5iaWdzdGFyLnByb3Rv",
            "Y29sQhxDYXJkTWVtb3JpZXNDb250cm9sbGVyUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanCardMemoriesConsumeRuleReflection.Descriptor, global::Com.Proto.BeanUserCardMemoriesInfoReflection.Descriptor, global::Com.Proto.BeanUserPowerReflection.Descriptor, global::Com.Proto.BeanUserCardReflection.Descriptor, global::Com.Proto.BeanUserMoneyReflection.Descriptor, global::Com.Proto.BeanAwardReflection.Descriptor, global::Com.Proto.BeanUserMemoriesMissionReflection.Descriptor, global::Com.Proto.BeanCardMemoriesMissionReflection.Descriptor, global::Com.Proto.BeanUserItemReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CardMemoriesRuleRes), global::Com.Proto.CardMemoriesRuleRes.Parser, new[]{ "Ret", "CardMemoriesConsumeRule", "CardMemoriesMission" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.BuyMemoriesConsumeReq), global::Com.Proto.BuyMemoriesConsumeReq.Parser, new[]{ "Type", "CardId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.BuyMemoriesConsumeRes), global::Com.Proto.BuyMemoriesConsumeRes.Parser, new[]{ "Ret", "UserCardMemoriesInfo", "UserCard", "UserPower", "UserMoney", "UserItem" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CardMemoriesInfoRes), global::Com.Proto.CardMemoriesInfoRes.Parser, new[]{ "Ret", "UserCardMemoriesInfo", "UserPower", "UserMemmoriesMission", "Award" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ChallengeCardMemoriesReq), global::Com.Proto.ChallengeCardMemoriesReq.Parser, new[]{ "CardId", "ChallengeNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ChallengeCardMemoriesRes), global::Com.Proto.ChallengeCardMemoriesRes.Parser, new[]{ "Ret", "UserCardMemoriesInfo", "UserPower", "UserMoney", "Award", "UserCard" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CardMemoriesMissionReceiveRes), global::Com.Proto.CardMemoriesMissionReceiveRes.Parser, new[]{ "Ret", "UserPower", "UserMoney", "Award", "UserMemmoriesMission" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CardMemoriesMissionReceiveReq), global::Com.Proto.CardMemoriesMissionReceiveReq.Parser, new[]{ "MissionId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///星缘回忆规则回包
  /// </summary>
  public sealed partial class CardMemoriesRuleRes : pb::IMessage<CardMemoriesRuleRes> {
    private static readonly pb::MessageParser<CardMemoriesRuleRes> _parser = new pb::MessageParser<CardMemoriesRuleRes>(() => new CardMemoriesRuleRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardMemoriesRuleRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerCardMemoriesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardMemoriesRuleRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardMemoriesRuleRes(CardMemoriesRuleRes other) : this() {
      ret_ = other.ret_;
      cardMemoriesConsumeRule_ = other.cardMemoriesConsumeRule_.Clone();
      cardMemoriesMission_ = other.cardMemoriesMission_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardMemoriesRuleRes Clone() {
      return new CardMemoriesRuleRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "card_memories_consume_rule" field.</summary>
    public const int CardMemoriesConsumeRuleFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.CardMemoriesConsumeRulePB> _repeated_cardMemoriesConsumeRule_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.CardMemoriesConsumeRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.CardMemoriesConsumeRulePB> cardMemoriesConsumeRule_ = new pbc::RepeatedField<global::Com.Proto.CardMemoriesConsumeRulePB>();
    /// <summary>
    ///星缘回忆消耗规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.CardMemoriesConsumeRulePB> CardMemoriesConsumeRule {
      get { return cardMemoriesConsumeRule_; }
    }

    /// <summary>Field number for the "card_memories_mission" field.</summary>
    public const int CardMemoriesMissionFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.CardMemoriesMissionPB> _repeated_cardMemoriesMission_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.CardMemoriesMissionPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.CardMemoriesMissionPB> cardMemoriesMission_ = new pbc::RepeatedField<global::Com.Proto.CardMemoriesMissionPB>();
    /// <summary>
    ///星缘回忆任务规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.CardMemoriesMissionPB> CardMemoriesMission {
      get { return cardMemoriesMission_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardMemoriesRuleRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardMemoriesRuleRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!cardMemoriesConsumeRule_.Equals(other.cardMemoriesConsumeRule_)) return false;
      if(!cardMemoriesMission_.Equals(other.cardMemoriesMission_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= cardMemoriesConsumeRule_.GetHashCode();
      hash ^= cardMemoriesMission_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      cardMemoriesConsumeRule_.WriteTo(output, _repeated_cardMemoriesConsumeRule_codec);
      cardMemoriesMission_.WriteTo(output, _repeated_cardMemoriesMission_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += cardMemoriesConsumeRule_.CalculateSize(_repeated_cardMemoriesConsumeRule_codec);
      size += cardMemoriesMission_.CalculateSize(_repeated_cardMemoriesMission_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardMemoriesRuleRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      cardMemoriesConsumeRule_.Add(other.cardMemoriesConsumeRule_);
      cardMemoriesMission_.Add(other.cardMemoriesMission_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            cardMemoriesConsumeRule_.AddEntriesFrom(input, _repeated_cardMemoriesConsumeRule_codec);
            break;
          }
          case 26: {
            cardMemoriesMission_.AddEntriesFrom(input, _repeated_cardMemoriesMission_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///星缘回忆购买请求包
  /// </summary>
  public sealed partial class BuyMemoriesConsumeReq : pb::IMessage<BuyMemoriesConsumeReq> {
    private static readonly pb::MessageParser<BuyMemoriesConsumeReq> _parser = new pb::MessageParser<BuyMemoriesConsumeReq>(() => new BuyMemoriesConsumeReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuyMemoriesConsumeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerCardMemoriesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyMemoriesConsumeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyMemoriesConsumeReq(BuyMemoriesConsumeReq other) : this() {
      type_ = other.type_;
      cardId_ = other.cardId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyMemoriesConsumeReq Clone() {
      return new BuyMemoriesConsumeReq(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::MemoriesConsumeTypePB type_ = 0;
    /// <summary>
    ///购买类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MemoriesConsumeTypePB Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "card_id" field.</summary>
    public const int CardIdFieldNumber = 2;
    private int cardId_;
    /// <summary>
    ///卡片ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuyMemoriesConsumeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuyMemoriesConsumeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (CardId != other.CardId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (CardId != 0) hash ^= CardId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (CardId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(CardId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CardId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuyMemoriesConsumeReq other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            type_ = (global::MemoriesConsumeTypePB) input.ReadEnum();
            break;
          }
          case 16: {
            CardId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///星缘回忆购买请求包
  /// </summary>
  public sealed partial class BuyMemoriesConsumeRes : pb::IMessage<BuyMemoriesConsumeRes> {
    private static readonly pb::MessageParser<BuyMemoriesConsumeRes> _parser = new pb::MessageParser<BuyMemoriesConsumeRes>(() => new BuyMemoriesConsumeRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuyMemoriesConsumeRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerCardMemoriesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyMemoriesConsumeRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyMemoriesConsumeRes(BuyMemoriesConsumeRes other) : this() {
      ret_ = other.ret_;
      UserCardMemoriesInfo = other.userCardMemoriesInfo_ != null ? other.UserCardMemoriesInfo.Clone() : null;
      UserCard = other.userCard_ != null ? other.UserCard.Clone() : null;
      UserPower = other.userPower_ != null ? other.UserPower.Clone() : null;
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
      UserItem = other.userItem_ != null ? other.UserItem.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyMemoriesConsumeRes Clone() {
      return new BuyMemoriesConsumeRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_card_memories_info" field.</summary>
    public const int UserCardMemoriesInfoFieldNumber = 2;
    private global::Com.Proto.UserCardMemoriesInfoPB userCardMemoriesInfo_;
    /// <summary>
    ///星缘回忆信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserCardMemoriesInfoPB UserCardMemoriesInfo {
      get { return userCardMemoriesInfo_; }
      set {
        userCardMemoriesInfo_ = value;
      }
    }

    /// <summary>Field number for the "user_card" field.</summary>
    public const int UserCardFieldNumber = 3;
    private global::Com.Proto.UserCardPB userCard_;
    /// <summary>
    ///卡牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserCardPB UserCard {
      get { return userCard_; }
      set {
        userCard_ = value;
      }
    }

    /// <summary>Field number for the "user_power" field.</summary>
    public const int UserPowerFieldNumber = 4;
    private global::Com.Proto.UserPowerPB userPower_;
    /// <summary>
    ///体力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserPowerPB UserPower {
      get { return userPower_; }
      set {
        userPower_ = value;
      }
    }

    /// <summary>Field number for the "user_money" field.</summary>
    public const int UserMoneyFieldNumber = 5;
    private global::Com.Proto.UserMoneyPB userMoney_;
    /// <summary>
    ///USER Money
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    /// <summary>Field number for the "user_item" field.</summary>
    public const int UserItemFieldNumber = 6;
    private global::Com.Proto.UserItemPB userItem_;
    /// <summary>
    ///USER Money
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserItemPB UserItem {
      get { return userItem_; }
      set {
        userItem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuyMemoriesConsumeRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuyMemoriesConsumeRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserCardMemoriesInfo, other.UserCardMemoriesInfo)) return false;
      if (!object.Equals(UserCard, other.UserCard)) return false;
      if (!object.Equals(UserPower, other.UserPower)) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      if (!object.Equals(UserItem, other.UserItem)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userCardMemoriesInfo_ != null) hash ^= UserCardMemoriesInfo.GetHashCode();
      if (userCard_ != null) hash ^= UserCard.GetHashCode();
      if (userPower_ != null) hash ^= UserPower.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      if (userItem_ != null) hash ^= UserItem.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userCardMemoriesInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserCardMemoriesInfo);
      }
      if (userCard_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserCard);
      }
      if (userPower_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UserPower);
      }
      if (userMoney_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UserMoney);
      }
      if (userItem_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UserItem);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userCardMemoriesInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserCardMemoriesInfo);
      }
      if (userCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserCard);
      }
      if (userPower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserPower);
      }
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      if (userItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserItem);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuyMemoriesConsumeRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userCardMemoriesInfo_ != null) {
        if (userCardMemoriesInfo_ == null) {
          userCardMemoriesInfo_ = new global::Com.Proto.UserCardMemoriesInfoPB();
        }
        UserCardMemoriesInfo.MergeFrom(other.UserCardMemoriesInfo);
      }
      if (other.userCard_ != null) {
        if (userCard_ == null) {
          userCard_ = new global::Com.Proto.UserCardPB();
        }
        UserCard.MergeFrom(other.UserCard);
      }
      if (other.userPower_ != null) {
        if (userPower_ == null) {
          userPower_ = new global::Com.Proto.UserPowerPB();
        }
        UserPower.MergeFrom(other.UserPower);
      }
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
      if (other.userItem_ != null) {
        if (userItem_ == null) {
          userItem_ = new global::Com.Proto.UserItemPB();
        }
        UserItem.MergeFrom(other.UserItem);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userCardMemoriesInfo_ == null) {
              userCardMemoriesInfo_ = new global::Com.Proto.UserCardMemoriesInfoPB();
            }
            input.ReadMessage(userCardMemoriesInfo_);
            break;
          }
          case 26: {
            if (userCard_ == null) {
              userCard_ = new global::Com.Proto.UserCardPB();
            }
            input.ReadMessage(userCard_);
            break;
          }
          case 34: {
            if (userPower_ == null) {
              userPower_ = new global::Com.Proto.UserPowerPB();
            }
            input.ReadMessage(userPower_);
            break;
          }
          case 42: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
          case 50: {
            if (userItem_ == null) {
              userItem_ = new global::Com.Proto.UserItemPB();
            }
            input.ReadMessage(userItem_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///星缘回忆信息回包
  /// </summary>
  public sealed partial class CardMemoriesInfoRes : pb::IMessage<CardMemoriesInfoRes> {
    private static readonly pb::MessageParser<CardMemoriesInfoRes> _parser = new pb::MessageParser<CardMemoriesInfoRes>(() => new CardMemoriesInfoRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardMemoriesInfoRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerCardMemoriesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardMemoriesInfoRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardMemoriesInfoRes(CardMemoriesInfoRes other) : this() {
      ret_ = other.ret_;
      UserCardMemoriesInfo = other.userCardMemoriesInfo_ != null ? other.UserCardMemoriesInfo.Clone() : null;
      UserPower = other.userPower_ != null ? other.UserPower.Clone() : null;
      UserMemmoriesMission = other.userMemmoriesMission_ != null ? other.UserMemmoriesMission.Clone() : null;
      award_ = other.award_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardMemoriesInfoRes Clone() {
      return new CardMemoriesInfoRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_card_memories_info" field.</summary>
    public const int UserCardMemoriesInfoFieldNumber = 2;
    private global::Com.Proto.UserCardMemoriesInfoPB userCardMemoriesInfo_;
    /// <summary>
    ///星缘回忆信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserCardMemoriesInfoPB UserCardMemoriesInfo {
      get { return userCardMemoriesInfo_; }
      set {
        userCardMemoriesInfo_ = value;
      }
    }

    /// <summary>Field number for the "user_power" field.</summary>
    public const int UserPowerFieldNumber = 3;
    private global::Com.Proto.UserPowerPB userPower_;
    /// <summary>
    ///体力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserPowerPB UserPower {
      get { return userPower_; }
      set {
        userPower_ = value;
      }
    }

    /// <summary>Field number for the "user_memmories_mission" field.</summary>
    public const int UserMemmoriesMissionFieldNumber = 4;
    private global::Com.Proto.UserMemoriesMissionPB userMemmoriesMission_;
    /// <summary>
    ///任务
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMemoriesMissionPB UserMemmoriesMission {
      get { return userMemmoriesMission_; }
      set {
        userMemmoriesMission_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_award_codec
        = pb::FieldCodec.ForMessage(42, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> award_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///任务奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Award {
      get { return award_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardMemoriesInfoRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardMemoriesInfoRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserCardMemoriesInfo, other.UserCardMemoriesInfo)) return false;
      if (!object.Equals(UserPower, other.UserPower)) return false;
      if (!object.Equals(UserMemmoriesMission, other.UserMemmoriesMission)) return false;
      if(!award_.Equals(other.award_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userCardMemoriesInfo_ != null) hash ^= UserCardMemoriesInfo.GetHashCode();
      if (userPower_ != null) hash ^= UserPower.GetHashCode();
      if (userMemmoriesMission_ != null) hash ^= UserMemmoriesMission.GetHashCode();
      hash ^= award_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userCardMemoriesInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserCardMemoriesInfo);
      }
      if (userPower_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserPower);
      }
      if (userMemmoriesMission_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UserMemmoriesMission);
      }
      award_.WriteTo(output, _repeated_award_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userCardMemoriesInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserCardMemoriesInfo);
      }
      if (userPower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserPower);
      }
      if (userMemmoriesMission_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMemmoriesMission);
      }
      size += award_.CalculateSize(_repeated_award_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardMemoriesInfoRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userCardMemoriesInfo_ != null) {
        if (userCardMemoriesInfo_ == null) {
          userCardMemoriesInfo_ = new global::Com.Proto.UserCardMemoriesInfoPB();
        }
        UserCardMemoriesInfo.MergeFrom(other.UserCardMemoriesInfo);
      }
      if (other.userPower_ != null) {
        if (userPower_ == null) {
          userPower_ = new global::Com.Proto.UserPowerPB();
        }
        UserPower.MergeFrom(other.UserPower);
      }
      if (other.userMemmoriesMission_ != null) {
        if (userMemmoriesMission_ == null) {
          userMemmoriesMission_ = new global::Com.Proto.UserMemoriesMissionPB();
        }
        UserMemmoriesMission.MergeFrom(other.UserMemmoriesMission);
      }
      award_.Add(other.award_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userCardMemoriesInfo_ == null) {
              userCardMemoriesInfo_ = new global::Com.Proto.UserCardMemoriesInfoPB();
            }
            input.ReadMessage(userCardMemoriesInfo_);
            break;
          }
          case 26: {
            if (userPower_ == null) {
              userPower_ = new global::Com.Proto.UserPowerPB();
            }
            input.ReadMessage(userPower_);
            break;
          }
          case 34: {
            if (userMemmoriesMission_ == null) {
              userMemmoriesMission_ = new global::Com.Proto.UserMemoriesMissionPB();
            }
            input.ReadMessage(userMemmoriesMission_);
            break;
          }
          case 42: {
            award_.AddEntriesFrom(input, _repeated_award_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///星缘回忆挑战请求包
  /// </summary>
  public sealed partial class ChallengeCardMemoriesReq : pb::IMessage<ChallengeCardMemoriesReq> {
    private static readonly pb::MessageParser<ChallengeCardMemoriesReq> _parser = new pb::MessageParser<ChallengeCardMemoriesReq>(() => new ChallengeCardMemoriesReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChallengeCardMemoriesReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerCardMemoriesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeCardMemoriesReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeCardMemoriesReq(ChallengeCardMemoriesReq other) : this() {
      cardId_ = other.cardId_;
      challengeNum_ = other.challengeNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeCardMemoriesReq Clone() {
      return new ChallengeCardMemoriesReq(this);
    }

    /// <summary>Field number for the "card_id" field.</summary>
    public const int CardIdFieldNumber = 1;
    private int cardId_;
    /// <summary>
    ///卡牌ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "challenge_num" field.</summary>
    public const int ChallengeNumFieldNumber = 2;
    private int challengeNum_;
    /// <summary>
    ///挑战次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChallengeNum {
      get { return challengeNum_; }
      set {
        challengeNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChallengeCardMemoriesReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChallengeCardMemoriesReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CardId != other.CardId) return false;
      if (ChallengeNum != other.ChallengeNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (ChallengeNum != 0) hash ^= ChallengeNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CardId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(CardId);
      }
      if (ChallengeNum != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(ChallengeNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CardId);
      }
      if (ChallengeNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ChallengeNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChallengeCardMemoriesReq other) {
      if (other == null) {
        return;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      if (other.ChallengeNum != 0) {
        ChallengeNum = other.ChallengeNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CardId = input.ReadSInt32();
            break;
          }
          case 16: {
            ChallengeNum = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///星缘回忆挑战回包
  /// </summary>
  public sealed partial class ChallengeCardMemoriesRes : pb::IMessage<ChallengeCardMemoriesRes> {
    private static readonly pb::MessageParser<ChallengeCardMemoriesRes> _parser = new pb::MessageParser<ChallengeCardMemoriesRes>(() => new ChallengeCardMemoriesRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChallengeCardMemoriesRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerCardMemoriesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeCardMemoriesRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeCardMemoriesRes(ChallengeCardMemoriesRes other) : this() {
      ret_ = other.ret_;
      UserCardMemoriesInfo = other.userCardMemoriesInfo_ != null ? other.UserCardMemoriesInfo.Clone() : null;
      UserPower = other.userPower_ != null ? other.UserPower.Clone() : null;
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
      award_ = other.award_.Clone();
      UserCard = other.userCard_ != null ? other.UserCard.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeCardMemoriesRes Clone() {
      return new ChallengeCardMemoriesRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_card_memories_info" field.</summary>
    public const int UserCardMemoriesInfoFieldNumber = 2;
    private global::Com.Proto.UserCardMemoriesInfoPB userCardMemoriesInfo_;
    /// <summary>
    ///星缘回忆信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserCardMemoriesInfoPB UserCardMemoriesInfo {
      get { return userCardMemoriesInfo_; }
      set {
        userCardMemoriesInfo_ = value;
      }
    }

    /// <summary>Field number for the "user_power" field.</summary>
    public const int UserPowerFieldNumber = 3;
    private global::Com.Proto.UserPowerPB userPower_;
    /// <summary>
    ///体力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserPowerPB UserPower {
      get { return userPower_; }
      set {
        userPower_ = value;
      }
    }

    /// <summary>Field number for the "user_money" field.</summary>
    public const int UserMoneyFieldNumber = 4;
    private global::Com.Proto.UserMoneyPB userMoney_;
    /// <summary>
    ///USER Money
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_award_codec
        = pb::FieldCodec.ForMessage(42, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> award_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///挑战结果奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Award {
      get { return award_; }
    }

    /// <summary>Field number for the "user_card" field.</summary>
    public const int UserCardFieldNumber = 6;
    private global::Com.Proto.UserCardPB userCard_;
    /// <summary>
    ///卡牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserCardPB UserCard {
      get { return userCard_; }
      set {
        userCard_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChallengeCardMemoriesRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChallengeCardMemoriesRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserCardMemoriesInfo, other.UserCardMemoriesInfo)) return false;
      if (!object.Equals(UserPower, other.UserPower)) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      if(!award_.Equals(other.award_)) return false;
      if (!object.Equals(UserCard, other.UserCard)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userCardMemoriesInfo_ != null) hash ^= UserCardMemoriesInfo.GetHashCode();
      if (userPower_ != null) hash ^= UserPower.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      hash ^= award_.GetHashCode();
      if (userCard_ != null) hash ^= UserCard.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userCardMemoriesInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserCardMemoriesInfo);
      }
      if (userPower_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserPower);
      }
      if (userMoney_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UserMoney);
      }
      award_.WriteTo(output, _repeated_award_codec);
      if (userCard_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UserCard);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userCardMemoriesInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserCardMemoriesInfo);
      }
      if (userPower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserPower);
      }
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      size += award_.CalculateSize(_repeated_award_codec);
      if (userCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserCard);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChallengeCardMemoriesRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userCardMemoriesInfo_ != null) {
        if (userCardMemoriesInfo_ == null) {
          userCardMemoriesInfo_ = new global::Com.Proto.UserCardMemoriesInfoPB();
        }
        UserCardMemoriesInfo.MergeFrom(other.UserCardMemoriesInfo);
      }
      if (other.userPower_ != null) {
        if (userPower_ == null) {
          userPower_ = new global::Com.Proto.UserPowerPB();
        }
        UserPower.MergeFrom(other.UserPower);
      }
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
      award_.Add(other.award_);
      if (other.userCard_ != null) {
        if (userCard_ == null) {
          userCard_ = new global::Com.Proto.UserCardPB();
        }
        UserCard.MergeFrom(other.UserCard);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userCardMemoriesInfo_ == null) {
              userCardMemoriesInfo_ = new global::Com.Proto.UserCardMemoriesInfoPB();
            }
            input.ReadMessage(userCardMemoriesInfo_);
            break;
          }
          case 26: {
            if (userPower_ == null) {
              userPower_ = new global::Com.Proto.UserPowerPB();
            }
            input.ReadMessage(userPower_);
            break;
          }
          case 34: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
          case 42: {
            award_.AddEntriesFrom(input, _repeated_award_codec);
            break;
          }
          case 50: {
            if (userCard_ == null) {
              userCard_ = new global::Com.Proto.UserCardPB();
            }
            input.ReadMessage(userCard_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///星缘回忆领取任务奖励回包
  /// </summary>
  public sealed partial class CardMemoriesMissionReceiveRes : pb::IMessage<CardMemoriesMissionReceiveRes> {
    private static readonly pb::MessageParser<CardMemoriesMissionReceiveRes> _parser = new pb::MessageParser<CardMemoriesMissionReceiveRes>(() => new CardMemoriesMissionReceiveRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardMemoriesMissionReceiveRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerCardMemoriesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardMemoriesMissionReceiveRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardMemoriesMissionReceiveRes(CardMemoriesMissionReceiveRes other) : this() {
      ret_ = other.ret_;
      UserPower = other.userPower_ != null ? other.UserPower.Clone() : null;
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
      award_ = other.award_.Clone();
      UserMemmoriesMission = other.userMemmoriesMission_ != null ? other.UserMemmoriesMission.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardMemoriesMissionReceiveRes Clone() {
      return new CardMemoriesMissionReceiveRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_power" field.</summary>
    public const int UserPowerFieldNumber = 2;
    private global::Com.Proto.UserPowerPB userPower_;
    /// <summary>
    ///体力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserPowerPB UserPower {
      get { return userPower_; }
      set {
        userPower_ = value;
      }
    }

    /// <summary>Field number for the "user_money" field.</summary>
    public const int UserMoneyFieldNumber = 3;
    private global::Com.Proto.UserMoneyPB userMoney_;
    /// <summary>
    ///USER Money
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_award_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> award_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///挑战结果奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Award {
      get { return award_; }
    }

    /// <summary>Field number for the "user_memmories_mission" field.</summary>
    public const int UserMemmoriesMissionFieldNumber = 5;
    private global::Com.Proto.UserMemoriesMissionPB userMemmoriesMission_;
    /// <summary>
    ///任务
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMemoriesMissionPB UserMemmoriesMission {
      get { return userMemmoriesMission_; }
      set {
        userMemmoriesMission_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardMemoriesMissionReceiveRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardMemoriesMissionReceiveRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserPower, other.UserPower)) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      if(!award_.Equals(other.award_)) return false;
      if (!object.Equals(UserMemmoriesMission, other.UserMemmoriesMission)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userPower_ != null) hash ^= UserPower.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      hash ^= award_.GetHashCode();
      if (userMemmoriesMission_ != null) hash ^= UserMemmoriesMission.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userPower_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserPower);
      }
      if (userMoney_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserMoney);
      }
      award_.WriteTo(output, _repeated_award_codec);
      if (userMemmoriesMission_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UserMemmoriesMission);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userPower_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserPower);
      }
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      size += award_.CalculateSize(_repeated_award_codec);
      if (userMemmoriesMission_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMemmoriesMission);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardMemoriesMissionReceiveRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userPower_ != null) {
        if (userPower_ == null) {
          userPower_ = new global::Com.Proto.UserPowerPB();
        }
        UserPower.MergeFrom(other.UserPower);
      }
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
      award_.Add(other.award_);
      if (other.userMemmoriesMission_ != null) {
        if (userMemmoriesMission_ == null) {
          userMemmoriesMission_ = new global::Com.Proto.UserMemoriesMissionPB();
        }
        UserMemmoriesMission.MergeFrom(other.UserMemmoriesMission);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userPower_ == null) {
              userPower_ = new global::Com.Proto.UserPowerPB();
            }
            input.ReadMessage(userPower_);
            break;
          }
          case 26: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
          case 34: {
            award_.AddEntriesFrom(input, _repeated_award_codec);
            break;
          }
          case 42: {
            if (userMemmoriesMission_ == null) {
              userMemmoriesMission_ = new global::Com.Proto.UserMemoriesMissionPB();
            }
            input.ReadMessage(userMemmoriesMission_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///星缘回忆领取任务奖励请求包
  /// </summary>
  public sealed partial class CardMemoriesMissionReceiveReq : pb::IMessage<CardMemoriesMissionReceiveReq> {
    private static readonly pb::MessageParser<CardMemoriesMissionReceiveReq> _parser = new pb::MessageParser<CardMemoriesMissionReceiveReq>(() => new CardMemoriesMissionReceiveReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardMemoriesMissionReceiveReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerCardMemoriesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardMemoriesMissionReceiveReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardMemoriesMissionReceiveReq(CardMemoriesMissionReceiveReq other) : this() {
      missionId_ = other.missionId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardMemoriesMissionReceiveReq Clone() {
      return new CardMemoriesMissionReceiveReq(this);
    }

    /// <summary>Field number for the "mission_id" field.</summary>
    public const int MissionIdFieldNumber = 1;
    private int missionId_;
    /// <summary>
    ///任务Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MissionId {
      get { return missionId_; }
      set {
        missionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardMemoriesMissionReceiveReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardMemoriesMissionReceiveReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MissionId != other.MissionId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MissionId != 0) hash ^= MissionId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MissionId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(MissionId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MissionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MissionId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardMemoriesMissionReceiveReq other) {
      if (other == null) {
        return;
      }
      if (other.MissionId != 0) {
        MissionId = other.MissionId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MissionId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
