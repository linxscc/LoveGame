// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_activity_capsule_rule.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_activity_capsule_rule.proto</summary>
  public static partial class BeanActivityCapsuleRuleReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_activity_capsule_rule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanActivityCapsuleRuleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBiZWFuX2FjdGl2aXR5X2NhcHN1bGVfcnVsZS5wcm90bxIJY29tLnByb3Rv",
            "GgpiYXNlLnByb3RvGhBiZWFuX2F3YXJkLnByb3RvGhZiZWFuX2xldmVsX2V4",
            "dHJhLnByb3RvGiBiZWFuX2FjdGl2aXR5X2hvbGlkYXlfcnVsZS5wcm90byKk",
            "AQoVQWN0aXZpdHlDYXBzdWxlUnVsZVBCEhMKC2FjdGl2aXR5X2lkGAEgASgR",
            "EkIKGGFjdGl2aXR5X2NhcHN1bGVfaXRlbV9QQhgCIAMoCzIgLmNvbS5wcm90",
            "by5BY3Rpdml0eUNhcHN1bGVJdGVtUEISMgoQY29uc3VtZV9pdGVtc19QQhgD",
            "IAMoCzIYLmNvbS5wcm90by5Db25zdW1lSXRlbVBCIkkKFUFjdGl2aXR5Q2Fw",
            "c3VsZUl0ZW1QQhIKCgJpZBgBIAEoERIkCghhd2FyZF9QQhgCIAEoCzISLmNv",
            "bS5wcm90by5Bd2FyZFBCIlMKDUNvbnN1bWVJdGVtUEISEgoKZHJhd19jb3Vu",
            "dBgBIAEoERIuCg9jb25zdW1lX2l0ZW1fUEIYAiABKAsyFS5jb20ucHJvdG8u",
            "RHJvcEl0ZW1QQkI8Ch9uZXQuZ2FsYXNwb3J0cy5iaWdzdGFyLnByb3RvY29s",
            "QhlBY3Rpdml0eUNhcHN1bGVSdWxlUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanAwardReflection.Descriptor, global::Com.Proto.BeanLevelExtraReflection.Descriptor, global::Com.Proto.BeanActivityHolidayRuleReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ActivityCapsuleRulePB), global::Com.Proto.ActivityCapsuleRulePB.Parser, new[]{ "ActivityId", "ActivityCapsuleItemPB", "ConsumeItemsPB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ActivityCapsuleItemPB), global::Com.Proto.ActivityCapsuleItemPB.Parser, new[]{ "Id", "AwardPB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ConsumeItemPB), global::Com.Proto.ConsumeItemPB.Parser, new[]{ "DrawCount", "ConsumeItemPB_" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ActivityCapsuleRulePB : pb::IMessage<ActivityCapsuleRulePB> {
    private static readonly pb::MessageParser<ActivityCapsuleRulePB> _parser = new pb::MessageParser<ActivityCapsuleRulePB>(() => new ActivityCapsuleRulePB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityCapsuleRulePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanActivityCapsuleRuleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityCapsuleRulePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityCapsuleRulePB(ActivityCapsuleRulePB other) : this() {
      activityId_ = other.activityId_;
      activityCapsuleItemPB_ = other.activityCapsuleItemPB_.Clone();
      consumeItemsPB_ = other.consumeItemsPB_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityCapsuleRulePB Clone() {
      return new ActivityCapsuleRulePB(this);
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 1;
    private int activityId_;
    /// <summary>
    ///活动ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    /// <summary>Field number for the "activity_capsule_item_PB" field.</summary>
    public const int ActivityCapsuleItemPBFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.ActivityCapsuleItemPB> _repeated_activityCapsuleItemPB_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.ActivityCapsuleItemPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ActivityCapsuleItemPB> activityCapsuleItemPB_ = new pbc::RepeatedField<global::Com.Proto.ActivityCapsuleItemPB>();
    /// <summary>
    ///九宫格奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ActivityCapsuleItemPB> ActivityCapsuleItemPB {
      get { return activityCapsuleItemPB_; }
    }

    /// <summary>Field number for the "consume_items_PB" field.</summary>
    public const int ConsumeItemsPBFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.ConsumeItemPB> _repeated_consumeItemsPB_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.ConsumeItemPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ConsumeItemPB> consumeItemsPB_ = new pbc::RepeatedField<global::Com.Proto.ConsumeItemPB>();
    /// <summary>
    ///消耗物品列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ConsumeItemPB> ConsumeItemsPB {
      get { return consumeItemsPB_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityCapsuleRulePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityCapsuleRulePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityId != other.ActivityId) return false;
      if(!activityCapsuleItemPB_.Equals(other.activityCapsuleItemPB_)) return false;
      if(!consumeItemsPB_.Equals(other.consumeItemsPB_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      hash ^= activityCapsuleItemPB_.GetHashCode();
      hash ^= consumeItemsPB_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(ActivityId);
      }
      activityCapsuleItemPB_.WriteTo(output, _repeated_activityCapsuleItemPB_codec);
      consumeItemsPB_.WriteTo(output, _repeated_consumeItemsPB_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActivityId);
      }
      size += activityCapsuleItemPB_.CalculateSize(_repeated_activityCapsuleItemPB_codec);
      size += consumeItemsPB_.CalculateSize(_repeated_consumeItemsPB_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityCapsuleRulePB other) {
      if (other == null) {
        return;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
      activityCapsuleItemPB_.Add(other.activityCapsuleItemPB_);
      consumeItemsPB_.Add(other.consumeItemsPB_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ActivityId = input.ReadSInt32();
            break;
          }
          case 18: {
            activityCapsuleItemPB_.AddEntriesFrom(input, _repeated_activityCapsuleItemPB_codec);
            break;
          }
          case 26: {
            consumeItemsPB_.AddEntriesFrom(input, _repeated_consumeItemsPB_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityCapsuleItemPB : pb::IMessage<ActivityCapsuleItemPB> {
    private static readonly pb::MessageParser<ActivityCapsuleItemPB> _parser = new pb::MessageParser<ActivityCapsuleItemPB>(() => new ActivityCapsuleItemPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityCapsuleItemPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanActivityCapsuleRuleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityCapsuleItemPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityCapsuleItemPB(ActivityCapsuleItemPB other) : this() {
      id_ = other.id_;
      AwardPB = other.awardPB_ != null ? other.AwardPB.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityCapsuleItemPB Clone() {
      return new ActivityCapsuleItemPB(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///序号ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "award_PB" field.</summary>
    public const int AwardPBFieldNumber = 2;
    private global::Com.Proto.AwardPB awardPB_;
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.AwardPB AwardPB {
      get { return awardPB_; }
      set {
        awardPB_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityCapsuleItemPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityCapsuleItemPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(AwardPB, other.AwardPB)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (awardPB_ != null) hash ^= AwardPB.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
      if (awardPB_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AwardPB);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Id);
      }
      if (awardPB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AwardPB);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityCapsuleItemPB other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.awardPB_ != null) {
        if (awardPB_ == null) {
          awardPB_ = new global::Com.Proto.AwardPB();
        }
        AwardPB.MergeFrom(other.AwardPB);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
          case 18: {
            if (awardPB_ == null) {
              awardPB_ = new global::Com.Proto.AwardPB();
            }
            input.ReadMessage(awardPB_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConsumeItemPB : pb::IMessage<ConsumeItemPB> {
    private static readonly pb::MessageParser<ConsumeItemPB> _parser = new pb::MessageParser<ConsumeItemPB>(() => new ConsumeItemPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConsumeItemPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanActivityCapsuleRuleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsumeItemPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsumeItemPB(ConsumeItemPB other) : this() {
      drawCount_ = other.drawCount_;
      ConsumeItemPB_ = other.consumeItemPB_ != null ? other.ConsumeItemPB_.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsumeItemPB Clone() {
      return new ConsumeItemPB(this);
    }

    /// <summary>Field number for the "draw_count" field.</summary>
    public const int DrawCountFieldNumber = 1;
    private int drawCount_;
    /// <summary>
    ///抽取次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DrawCount {
      get { return drawCount_; }
      set {
        drawCount_ = value;
      }
    }

    /// <summary>Field number for the "consume_item_PB" field.</summary>
    public const int ConsumeItemPB_FieldNumber = 2;
    private global::Com.Proto.DropItemPB consumeItemPB_;
    /// <summary>
    ///消耗物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.DropItemPB ConsumeItemPB_ {
      get { return consumeItemPB_; }
      set {
        consumeItemPB_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConsumeItemPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConsumeItemPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DrawCount != other.DrawCount) return false;
      if (!object.Equals(ConsumeItemPB_, other.ConsumeItemPB_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DrawCount != 0) hash ^= DrawCount.GetHashCode();
      if (consumeItemPB_ != null) hash ^= ConsumeItemPB_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DrawCount != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(DrawCount);
      }
      if (consumeItemPB_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConsumeItemPB_);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DrawCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DrawCount);
      }
      if (consumeItemPB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConsumeItemPB_);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConsumeItemPB other) {
      if (other == null) {
        return;
      }
      if (other.DrawCount != 0) {
        DrawCount = other.DrawCount;
      }
      if (other.consumeItemPB_ != null) {
        if (consumeItemPB_ == null) {
          consumeItemPB_ = new global::Com.Proto.DropItemPB();
        }
        ConsumeItemPB_.MergeFrom(other.ConsumeItemPB_);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            DrawCount = input.ReadSInt32();
            break;
          }
          case 18: {
            if (consumeItemPB_ == null) {
              consumeItemPB_ = new global::Com.Proto.DropItemPB();
            }
            input.ReadMessage(consumeItemPB_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
