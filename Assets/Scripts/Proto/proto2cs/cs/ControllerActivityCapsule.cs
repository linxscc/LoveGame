// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller_activity_capsule.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from controller_activity_capsule.proto</summary>
  public static partial class ControllerActivityCapsuleReflection {

    #region Descriptor
    /// <summary>File descriptor for controller_activity_capsule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControllerActivityCapsuleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFjb250cm9sbGVyX2FjdGl2aXR5X2NhcHN1bGUucHJvdG8SCWNvbS5wcm90",
            "bxoKYmFzZS5wcm90bxojYmVhbl91c2VyX2FjdGl2aXR5X2xldmVsX2luZm8u",
            "cHJvdG8aIGJlYW5fYWN0aXZpdHlfY2Fwc3VsZV9ydWxlLnByb3RvGhRiZWFu",
            "X3VzZXJfaXRlbS5wcm90bxoVYmVhbl91c2VyX21vbmV5LnByb3RvGhBiZWFu",
            "X2F3YXJkLnByb3RvGh1iZWFuX2FjdGl2aXR5X3Bsb3RfcnVsZS5wcm90bxol",
            "YmVhbl91c2VyX2FjdGl2aXR5X2NhcHN1bGVfaW5mby5wcm90byJnChRBY3Rp",
            "dml0eUNhcHN1bGVSdWxlcxILCgNyZXQYASABKBESQgoYYWN0aXZpdHlfY2Fw",
            "c3VsZV9ydWxlX1BCGAIgAygLMiAuY29tLnByb3RvLkFjdGl2aXR5Q2Fwc3Vs",
            "ZVJ1bGVQQiIwChlHZXRVc2VyQWN0aXZpdHlDYXBzdWxlUmVxEhMKC2FjdGl2",
            "aXR5X2lkGAEgASgRInUKGUdldFVzZXJBY3Rpdml0eUNhcHN1bGVSZXMSCwoD",
            "cmV0GAEgASgREksKHXVzZXJfYWN0aXZpdHlfY2Fwc3VsZV9pbmZvX1BCGAIg",
            "ASgLMiQuY29tLnByb3RvLlVzZXJBY3Rpdml0eUNhcHN1bGVJbmZvUEIiOAoQ",
            "V2F0Y2hpbmdEcmFtYVJlcRITCgthY3Rpdml0eV9pZBgBIAEoERIPCgdwbG90",
            "X2lkGAIgASgJIl0KEFdhdGNoaW5nRHJhbWFSZXMSCwoDcmV0GAEgASgREjwK",
            "FWFjdGl2aXR5X3Bsb3RfcnVsZV9QQhgCIAEoCzIdLmNvbS5wcm90by5BY3Rp",
            "dml0eVBsb3RSdWxlUEIiOQoRV2F0Y2hPdmVyRHJhbWFSZXESEwoLYWN0aXZp",
            "dHlfaWQYASABKBESDwoHcGxvdF9pZBgCIAEoCSIgChFXYXRjaE92ZXJEcmFt",
            "YVJlcxILCgNyZXQYASABKBEiIwoMRHJhd0F3YXJkUmVxEhMKC2FjdGl2aXR5",
            "X2lkGAEgASgRIlcKDERyYXdBd2FyZFJlcxILCgNyZXQYASABKBESEAoIYXdh",
            "cmRfaWQYAiABKBESKAoJdXNlcl9JdGVtGAMgASgLMhUuY29tLnByb3RvLlVz",
            "ZXJJdGVtUEJCQgofbmV0LmdhbGFzcG9ydHMuYmlnc3Rhci5wcm90b2NvbEIf",
            "QWN0aXZpdHlDYXBzdWxlQ29udHJvbGxlclByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanUserActivityLevelInfoReflection.Descriptor, global::Com.Proto.BeanActivityCapsuleRuleReflection.Descriptor, global::Com.Proto.BeanUserItemReflection.Descriptor, global::Com.Proto.BeanUserMoneyReflection.Descriptor, global::Com.Proto.BeanAwardReflection.Descriptor, global::Com.Proto.BeanActivityPlotRuleReflection.Descriptor, global::Com.Proto.BeanUserActivityCapsuleInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ActivityCapsuleRules), global::Com.Proto.ActivityCapsuleRules.Parser, new[]{ "Ret", "ActivityCapsuleRulePB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GetUserActivityCapsuleReq), global::Com.Proto.GetUserActivityCapsuleReq.Parser, new[]{ "ActivityId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GetUserActivityCapsuleRes), global::Com.Proto.GetUserActivityCapsuleRes.Parser, new[]{ "Ret", "UserActivityCapsuleInfoPB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WatchingDramaReq), global::Com.Proto.WatchingDramaReq.Parser, new[]{ "ActivityId", "PlotId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WatchingDramaRes), global::Com.Proto.WatchingDramaRes.Parser, new[]{ "Ret", "ActivityPlotRulePB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WatchOverDramaReq), global::Com.Proto.WatchOverDramaReq.Parser, new[]{ "ActivityId", "PlotId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WatchOverDramaRes), global::Com.Proto.WatchOverDramaRes.Parser, new[]{ "Ret" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.DrawAwardReq), global::Com.Proto.DrawAwardReq.Parser, new[]{ "ActivityId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.DrawAwardRes), global::Com.Proto.DrawAwardRes.Parser, new[]{ "Ret", "AwardId", "UserItem" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///规则  activityCapsuleC/rules
  /// </summary>
  public sealed partial class ActivityCapsuleRules : pb::IMessage<ActivityCapsuleRules> {
    private static readonly pb::MessageParser<ActivityCapsuleRules> _parser = new pb::MessageParser<ActivityCapsuleRules>(() => new ActivityCapsuleRules());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityCapsuleRules> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityCapsuleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityCapsuleRules() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityCapsuleRules(ActivityCapsuleRules other) : this() {
      ret_ = other.ret_;
      activityCapsuleRulePB_ = other.activityCapsuleRulePB_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityCapsuleRules Clone() {
      return new ActivityCapsuleRules(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "activity_capsule_rule_PB" field.</summary>
    public const int ActivityCapsuleRulePBFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.ActivityCapsuleRulePB> _repeated_activityCapsuleRulePB_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.ActivityCapsuleRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ActivityCapsuleRulePB> activityCapsuleRulePB_ = new pbc::RepeatedField<global::Com.Proto.ActivityCapsuleRulePB>();
    /// <summary>
    ///抽奖池
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ActivityCapsuleRulePB> ActivityCapsuleRulePB {
      get { return activityCapsuleRulePB_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityCapsuleRules);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityCapsuleRules other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!activityCapsuleRulePB_.Equals(other.activityCapsuleRulePB_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= activityCapsuleRulePB_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      activityCapsuleRulePB_.WriteTo(output, _repeated_activityCapsuleRulePB_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += activityCapsuleRulePB_.CalculateSize(_repeated_activityCapsuleRulePB_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityCapsuleRules other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      activityCapsuleRulePB_.Add(other.activityCapsuleRulePB_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            activityCapsuleRulePB_.AddEntriesFrom(input, _repeated_activityCapsuleRulePB_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///获取扭蛋活动信息 activityCapsuleC/getActivityInfo
  /// </summary>
  public sealed partial class GetUserActivityCapsuleReq : pb::IMessage<GetUserActivityCapsuleReq> {
    private static readonly pb::MessageParser<GetUserActivityCapsuleReq> _parser = new pb::MessageParser<GetUserActivityCapsuleReq>(() => new GetUserActivityCapsuleReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserActivityCapsuleReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityCapsuleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserActivityCapsuleReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserActivityCapsuleReq(GetUserActivityCapsuleReq other) : this() {
      activityId_ = other.activityId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserActivityCapsuleReq Clone() {
      return new GetUserActivityCapsuleReq(this);
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 1;
    private int activityId_;
    /// <summary>
    ///活动ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserActivityCapsuleReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserActivityCapsuleReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityId != other.ActivityId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(ActivityId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActivityId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserActivityCapsuleReq other) {
      if (other == null) {
        return;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ActivityId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUserActivityCapsuleRes : pb::IMessage<GetUserActivityCapsuleRes> {
    private static readonly pb::MessageParser<GetUserActivityCapsuleRes> _parser = new pb::MessageParser<GetUserActivityCapsuleRes>(() => new GetUserActivityCapsuleRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserActivityCapsuleRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityCapsuleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserActivityCapsuleRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserActivityCapsuleRes(GetUserActivityCapsuleRes other) : this() {
      ret_ = other.ret_;
      UserActivityCapsuleInfoPB = other.userActivityCapsuleInfoPB_ != null ? other.UserActivityCapsuleInfoPB.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserActivityCapsuleRes Clone() {
      return new GetUserActivityCapsuleRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_activity_capsule_info_PB" field.</summary>
    public const int UserActivityCapsuleInfoPBFieldNumber = 2;
    private global::Com.Proto.UserActivityCapsuleInfoPB userActivityCapsuleInfoPB_;
    /// <summary>
    ///玩家扭蛋活动信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserActivityCapsuleInfoPB UserActivityCapsuleInfoPB {
      get { return userActivityCapsuleInfoPB_; }
      set {
        userActivityCapsuleInfoPB_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserActivityCapsuleRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserActivityCapsuleRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserActivityCapsuleInfoPB, other.UserActivityCapsuleInfoPB)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userActivityCapsuleInfoPB_ != null) hash ^= UserActivityCapsuleInfoPB.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userActivityCapsuleInfoPB_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserActivityCapsuleInfoPB);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userActivityCapsuleInfoPB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserActivityCapsuleInfoPB);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserActivityCapsuleRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userActivityCapsuleInfoPB_ != null) {
        if (userActivityCapsuleInfoPB_ == null) {
          userActivityCapsuleInfoPB_ = new global::Com.Proto.UserActivityCapsuleInfoPB();
        }
        UserActivityCapsuleInfoPB.MergeFrom(other.UserActivityCapsuleInfoPB);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userActivityCapsuleInfoPB_ == null) {
              userActivityCapsuleInfoPB_ = new global::Com.Proto.UserActivityCapsuleInfoPB();
            }
            input.ReadMessage(userActivityCapsuleInfoPB_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///查看情景剧 activityCapsuleC/watchingDrama
  /// </summary>
  public sealed partial class WatchingDramaReq : pb::IMessage<WatchingDramaReq> {
    private static readonly pb::MessageParser<WatchingDramaReq> _parser = new pb::MessageParser<WatchingDramaReq>(() => new WatchingDramaReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WatchingDramaReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityCapsuleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchingDramaReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchingDramaReq(WatchingDramaReq other) : this() {
      activityId_ = other.activityId_;
      plotId_ = other.plotId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchingDramaReq Clone() {
      return new WatchingDramaReq(this);
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 1;
    private int activityId_;
    /// <summary>
    ///活动ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    /// <summary>Field number for the "plot_id" field.</summary>
    public const int PlotIdFieldNumber = 2;
    private string plotId_ = "";
    /// <summary>
    ///情景ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlotId {
      get { return plotId_; }
      set {
        plotId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WatchingDramaReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WatchingDramaReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityId != other.ActivityId) return false;
      if (PlotId != other.PlotId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      if (PlotId.Length != 0) hash ^= PlotId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(ActivityId);
      }
      if (PlotId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlotId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActivityId);
      }
      if (PlotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlotId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WatchingDramaReq other) {
      if (other == null) {
        return;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.PlotId.Length != 0) {
        PlotId = other.PlotId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ActivityId = input.ReadSInt32();
            break;
          }
          case 18: {
            PlotId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WatchingDramaRes : pb::IMessage<WatchingDramaRes> {
    private static readonly pb::MessageParser<WatchingDramaRes> _parser = new pb::MessageParser<WatchingDramaRes>(() => new WatchingDramaRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WatchingDramaRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityCapsuleReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchingDramaRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchingDramaRes(WatchingDramaRes other) : this() {
      ret_ = other.ret_;
      ActivityPlotRulePB = other.activityPlotRulePB_ != null ? other.ActivityPlotRulePB.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchingDramaRes Clone() {
      return new WatchingDramaRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "activity_plot_rule_PB" field.</summary>
    public const int ActivityPlotRulePBFieldNumber = 2;
    private global::Com.Proto.ActivityPlotRulePB activityPlotRulePB_;
    /// <summary>
    ///情景数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.ActivityPlotRulePB ActivityPlotRulePB {
      get { return activityPlotRulePB_; }
      set {
        activityPlotRulePB_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WatchingDramaRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WatchingDramaRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(ActivityPlotRulePB, other.ActivityPlotRulePB)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (activityPlotRulePB_ != null) hash ^= ActivityPlotRulePB.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (activityPlotRulePB_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ActivityPlotRulePB);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (activityPlotRulePB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivityPlotRulePB);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WatchingDramaRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.activityPlotRulePB_ != null) {
        if (activityPlotRulePB_ == null) {
          activityPlotRulePB_ = new global::Com.Proto.ActivityPlotRulePB();
        }
        ActivityPlotRulePB.MergeFrom(other.ActivityPlotRulePB);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (activityPlotRulePB_ == null) {
              activityPlotRulePB_ = new global::Com.Proto.ActivityPlotRulePB();
            }
            input.ReadMessage(activityPlotRulePB_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///看完情景剧 activityCapsuleC/watchOverDrama
  /// </summary>
  public sealed partial class WatchOverDramaReq : pb::IMessage<WatchOverDramaReq> {
    private static readonly pb::MessageParser<WatchOverDramaReq> _parser = new pb::MessageParser<WatchOverDramaReq>(() => new WatchOverDramaReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WatchOverDramaReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityCapsuleReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchOverDramaReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchOverDramaReq(WatchOverDramaReq other) : this() {
      activityId_ = other.activityId_;
      plotId_ = other.plotId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchOverDramaReq Clone() {
      return new WatchOverDramaReq(this);
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 1;
    private int activityId_;
    /// <summary>
    ///活动ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    /// <summary>Field number for the "plot_id" field.</summary>
    public const int PlotIdFieldNumber = 2;
    private string plotId_ = "";
    /// <summary>
    ///情景ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlotId {
      get { return plotId_; }
      set {
        plotId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WatchOverDramaReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WatchOverDramaReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityId != other.ActivityId) return false;
      if (PlotId != other.PlotId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      if (PlotId.Length != 0) hash ^= PlotId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(ActivityId);
      }
      if (PlotId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlotId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActivityId);
      }
      if (PlotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlotId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WatchOverDramaReq other) {
      if (other == null) {
        return;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.PlotId.Length != 0) {
        PlotId = other.PlotId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ActivityId = input.ReadSInt32();
            break;
          }
          case 18: {
            PlotId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WatchOverDramaRes : pb::IMessage<WatchOverDramaRes> {
    private static readonly pb::MessageParser<WatchOverDramaRes> _parser = new pb::MessageParser<WatchOverDramaRes>(() => new WatchOverDramaRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WatchOverDramaRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityCapsuleReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchOverDramaRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchOverDramaRes(WatchOverDramaRes other) : this() {
      ret_ = other.ret_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchOverDramaRes Clone() {
      return new WatchOverDramaRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WatchOverDramaRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WatchOverDramaRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WatchOverDramaRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///抽奖   activityCapsuleC/drawAward
  /// </summary>
  public sealed partial class DrawAwardReq : pb::IMessage<DrawAwardReq> {
    private static readonly pb::MessageParser<DrawAwardReq> _parser = new pb::MessageParser<DrawAwardReq>(() => new DrawAwardReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DrawAwardReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityCapsuleReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawAwardReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawAwardReq(DrawAwardReq other) : this() {
      activityId_ = other.activityId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawAwardReq Clone() {
      return new DrawAwardReq(this);
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 1;
    private int activityId_;
    /// <summary>
    ///活动ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DrawAwardReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DrawAwardReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityId != other.ActivityId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(ActivityId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActivityId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DrawAwardReq other) {
      if (other == null) {
        return;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ActivityId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DrawAwardRes : pb::IMessage<DrawAwardRes> {
    private static readonly pb::MessageParser<DrawAwardRes> _parser = new pb::MessageParser<DrawAwardRes>(() => new DrawAwardRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DrawAwardRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityCapsuleReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawAwardRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawAwardRes(DrawAwardRes other) : this() {
      ret_ = other.ret_;
      awardId_ = other.awardId_;
      UserItem = other.userItem_ != null ? other.UserItem.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawAwardRes Clone() {
      return new DrawAwardRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "award_id" field.</summary>
    public const int AwardIdFieldNumber = 2;
    private int awardId_;
    /// <summary>
    ///奖励列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AwardId {
      get { return awardId_; }
      set {
        awardId_ = value;
      }
    }

    /// <summary>Field number for the "user_Item" field.</summary>
    public const int UserItemFieldNumber = 3;
    private global::Com.Proto.UserItemPB userItem_;
    /// <summary>
    ///道具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserItemPB UserItem {
      get { return userItem_; }
      set {
        userItem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DrawAwardRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DrawAwardRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (AwardId != other.AwardId) return false;
      if (!object.Equals(UserItem, other.UserItem)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (AwardId != 0) hash ^= AwardId.GetHashCode();
      if (userItem_ != null) hash ^= UserItem.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (AwardId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(AwardId);
      }
      if (userItem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserItem);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (AwardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(AwardId);
      }
      if (userItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserItem);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DrawAwardRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.AwardId != 0) {
        AwardId = other.AwardId;
      }
      if (other.userItem_ != null) {
        if (userItem_ == null) {
          userItem_ = new global::Com.Proto.UserItemPB();
        }
        UserItem.MergeFrom(other.UserItem);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 16: {
            AwardId = input.ReadSInt32();
            break;
          }
          case 26: {
            if (userItem_ == null) {
              userItem_ = new global::Com.Proto.UserItemPB();
            }
            input.ReadMessage(userItem_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
