// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_trigger_goal.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_trigger_goal.proto</summary>
  public static partial class BeanTriggerGoalReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_trigger_goal.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanTriggerGoalReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdiZWFuX3RyaWdnZXJfZ29hbC5wcm90bxIJY29tLnByb3RvGgpiYXNlLnBy",
            "b3RvIp8BCg1UcmlnZ2VyR29hbFBCEjcKEXRyaWdnZXJfZ29hbF90eXBlGAEg",
            "ASgOMhwuY29tLnByb3RvLlRyaWdnZXJHb2FsVHlwZVBCEhkKBmNyZWRpdBgC",
            "IAEoDjIJLkNyZWRpdFBCEg4KBmZpbmlzaBgDIAEoERIWCg5wcm9ncmVzc19j",
            "b3ZlchgEIAEoERISCgpsc3Nfb3JfZ3RyGAUgASgRKtsBChFUcmlnZ2VyR29h",
            "bFR5cGVQQhIPCgtEUkFXX0NSRURJVBAAEhAKDEVYUEVORF9QT1dFUhABEhAK",
            "DENVUlJFTlRfT1dFUhACEhUKEUNBUkRfTUVNT1JJRVNfTlVNEAMSGwoXUkVT",
            "RVRfQ0FSRF9NRU1PUklFU19OVU0QBBIWChJTVEFSX0NBUkRfRFJBV19OVU0Q",
            "BRIOCgpHRU1fQ1JFRElUEAYSEQoNR09MRF9EUkFXX05VTRAHEgwKCEdPTERf",
            "TlVNEAgSFAoQREVQQVJUTUVOVF9MRVZFTBAJQjQKH25ldC5nYWxhc3BvcnRz",
            "LmJpZ3N0YXIucHJvdG9jb2xCEVRyaWdnZXJHb2FsUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Com.Proto.TriggerGoalTypePB), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.TriggerGoalPB), global::Com.Proto.TriggerGoalPB.Parser, new[]{ "TriggerGoalType", "Credit", "Finish", "ProgressCover", "LssOrGtr" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TriggerGoalTypePB {
    /// <summary>
    ///抽卡评级
    /// </summary>
    [pbr::OriginalName("DRAW_CREDIT")] DrawCredit = 0,
    /// <summary>
    ///消耗体力
    /// </summary>
    [pbr::OriginalName("EXPEND_POWER")] ExpendPower = 1,
    /// <summary>
    ///当前体力
    /// </summary>
    [pbr::OriginalName("CURRENT_OWER")] CurrentOwer = 2,
    /// <summary>
    ///回忆次数
    /// </summary>
    [pbr::OriginalName("CARD_MEMORIES_NUM")] CardMemoriesNum = 3,
    /// <summary>
    ///重置回忆次数
    /// </summary>
    [pbr::OriginalName("RESET_CARD_MEMORIES_NUM")] ResetCardMemoriesNum = 4,
    /// <summary>
    ///星卡抽卡次数
    /// </summary>
    [pbr::OriginalName("STAR_CARD_DRAW_NUM")] StarCardDrawNum = 5,
    /// <summary>
    ///星卡数量
    /// </summary>
    [pbr::OriginalName("GEM_CREDIT")] GemCredit = 6,
    /// <summary>
    ///金币抽卡次数
    /// </summary>
    [pbr::OriginalName("GOLD_DRAW_NUM")] GoldDrawNum = 7,
    /// <summary>
    ///金币数量
    /// </summary>
    [pbr::OriginalName("GOLD_NUM")] GoldNum = 8,
    /// <summary>
    ///应援会等级
    /// </summary>
    [pbr::OriginalName("DEPARTMENT_LEVEL")] DepartmentLevel = 9,
  }

  #endregion

  #region Messages
  /// <summary>
  ///TriggerGoalPB TriggerGoal
  /// </summary>
  public sealed partial class TriggerGoalPB : pb::IMessage<TriggerGoalPB> {
    private static readonly pb::MessageParser<TriggerGoalPB> _parser = new pb::MessageParser<TriggerGoalPB>(() => new TriggerGoalPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TriggerGoalPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanTriggerGoalReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerGoalPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerGoalPB(TriggerGoalPB other) : this() {
      triggerGoalType_ = other.triggerGoalType_;
      credit_ = other.credit_;
      finish_ = other.finish_;
      progressCover_ = other.progressCover_;
      lssOrGtr_ = other.lssOrGtr_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerGoalPB Clone() {
      return new TriggerGoalPB(this);
    }

    /// <summary>Field number for the "trigger_goal_type" field.</summary>
    public const int TriggerGoalTypeFieldNumber = 1;
    private global::Com.Proto.TriggerGoalTypePB triggerGoalType_ = 0;
    /// <summary>
    ///触发条件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.TriggerGoalTypePB TriggerGoalType {
      get { return triggerGoalType_; }
      set {
        triggerGoalType_ = value;
      }
    }

    /// <summary>Field number for the "credit" field.</summary>
    public const int CreditFieldNumber = 2;
    private global::CreditPB credit_ = 0;
    /// <summary>
    ///评级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CreditPB Credit {
      get { return credit_; }
      set {
        credit_ = value;
      }
    }

    /// <summary>Field number for the "finish" field.</summary>
    public const int FinishFieldNumber = 3;
    private int finish_;
    /// <summary>
    ///完成数值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Finish {
      get { return finish_; }
      set {
        finish_ = value;
      }
    }

    /// <summary>Field number for the "progress_cover" field.</summary>
    public const int ProgressCoverFieldNumber = 4;
    private int progressCover_;
    /// <summary>
    ///覆盖还是累加（0累加，1覆盖）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProgressCover {
      get { return progressCover_; }
      set {
        progressCover_ = value;
      }
    }

    /// <summary>Field number for the "lss_or_gtr" field.</summary>
    public const int LssOrGtrFieldNumber = 5;
    private int lssOrGtr_;
    /// <summary>
    ///大于或者小于(0大于，1小于)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LssOrGtr {
      get { return lssOrGtr_; }
      set {
        lssOrGtr_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TriggerGoalPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TriggerGoalPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TriggerGoalType != other.TriggerGoalType) return false;
      if (Credit != other.Credit) return false;
      if (Finish != other.Finish) return false;
      if (ProgressCover != other.ProgressCover) return false;
      if (LssOrGtr != other.LssOrGtr) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TriggerGoalType != 0) hash ^= TriggerGoalType.GetHashCode();
      if (Credit != 0) hash ^= Credit.GetHashCode();
      if (Finish != 0) hash ^= Finish.GetHashCode();
      if (ProgressCover != 0) hash ^= ProgressCover.GetHashCode();
      if (LssOrGtr != 0) hash ^= LssOrGtr.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TriggerGoalType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TriggerGoalType);
      }
      if (Credit != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Credit);
      }
      if (Finish != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Finish);
      }
      if (ProgressCover != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(ProgressCover);
      }
      if (LssOrGtr != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(LssOrGtr);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TriggerGoalType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TriggerGoalType);
      }
      if (Credit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Credit);
      }
      if (Finish != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Finish);
      }
      if (ProgressCover != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ProgressCover);
      }
      if (LssOrGtr != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(LssOrGtr);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TriggerGoalPB other) {
      if (other == null) {
        return;
      }
      if (other.TriggerGoalType != 0) {
        TriggerGoalType = other.TriggerGoalType;
      }
      if (other.Credit != 0) {
        Credit = other.Credit;
      }
      if (other.Finish != 0) {
        Finish = other.Finish;
      }
      if (other.ProgressCover != 0) {
        ProgressCover = other.ProgressCover;
      }
      if (other.LssOrGtr != 0) {
        LssOrGtr = other.LssOrGtr;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            triggerGoalType_ = (global::Com.Proto.TriggerGoalTypePB) input.ReadEnum();
            break;
          }
          case 16: {
            credit_ = (global::CreditPB) input.ReadEnum();
            break;
          }
          case 24: {
            Finish = input.ReadSInt32();
            break;
          }
          case 32: {
            ProgressCover = input.ReadSInt32();
            break;
          }
          case 40: {
            LssOrGtr = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
