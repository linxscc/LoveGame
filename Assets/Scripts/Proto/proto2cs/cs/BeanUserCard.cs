// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_user_card.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_user_card.proto</summary>
  public static partial class BeanUserCardReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_user_card.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanUserCardReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRiZWFuX3VzZXJfY2FyZC5wcm90bxIJY29tLnByb3RvGgpiYXNlLnByb3Rv",
            "IsMBCgpVc2VyQ2FyZFBCEg8KB3VzZXJfaWQYASABKBESDwoHY2FyZF9pZBgC",
            "IAEoERILCgNudW0YAyABKBESDQoFbGV2ZWwYBCABKBESCwoDZXhwGAUgASgR",
            "EhUKBHN0YXIYBiABKA4yBy5TdGFyUEISHwoJZXZvbHV0aW9uGAcgASgOMgwu",
            "RXZvbHV0aW9uUEISHAoGdXNlRXZvGAggASgOMgwuRXZvbHV0aW9uUEISFAoM",
            "bWVtb3JpZXNfbnVtGAkgASgRIjAKEFVzZXJDYXJkU2ltcGxlUEISDwoHY2Fy",
            "ZF9pZBgBIAEoERILCgNudW0YAiABKBFCMQofbmV0LmdhbGFzcG9ydHMuYmln",
            "c3Rhci5wcm90b2NvbEIOVXNlckNhcmRQcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserCardPB), global::Com.Proto.UserCardPB.Parser, new[]{ "UserId", "CardId", "Num", "Level", "Exp", "Star", "Evolution", "UseEvo", "MemoriesNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserCardSimplePB), global::Com.Proto.UserCardSimplePB.Parser, new[]{ "CardId", "Num" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///UserCardPB UserCard
  /// </summary>
  public sealed partial class UserCardPB : pb::IMessage<UserCardPB> {
    private static readonly pb::MessageParser<UserCardPB> _parser = new pb::MessageParser<UserCardPB>(() => new UserCardPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserCardPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanUserCardReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCardPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCardPB(UserCardPB other) : this() {
      userId_ = other.userId_;
      cardId_ = other.cardId_;
      num_ = other.num_;
      level_ = other.level_;
      exp_ = other.exp_;
      star_ = other.star_;
      evolution_ = other.evolution_;
      useEvo_ = other.useEvo_;
      memoriesNum_ = other.memoriesNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCardPB Clone() {
      return new UserCardPB(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "card_id" field.</summary>
    public const int CardIdFieldNumber = 2;
    private int cardId_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 3;
    private int num_;
    /// <summary>
    ///数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 4;
    private int level_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 5;
    private int exp_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "star" field.</summary>
    public const int StarFieldNumber = 6;
    private global::StarPB star_ = 0;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::StarPB Star {
      get { return star_; }
      set {
        star_ = value;
      }
    }

    /// <summary>Field number for the "evolution" field.</summary>
    public const int EvolutionFieldNumber = 7;
    private global::EvolutionPB evolution_ = 0;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EvolutionPB Evolution {
      get { return evolution_; }
      set {
        evolution_ = value;
      }
    }

    /// <summary>Field number for the "useEvo" field.</summary>
    public const int UseEvoFieldNumber = 8;
    private global::EvolutionPB useEvo_ = 0;
    /// <summary>
    ///展示选择形态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EvolutionPB UseEvo {
      get { return useEvo_; }
      set {
        useEvo_ = value;
      }
    }

    /// <summary>Field number for the "memories_num" field.</summary>
    public const int MemoriesNumFieldNumber = 9;
    private int memoriesNum_;
    /// <summary>
    ///星缘回忆次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MemoriesNum {
      get { return memoriesNum_; }
      set {
        memoriesNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserCardPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserCardPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (CardId != other.CardId) return false;
      if (Num != other.Num) return false;
      if (Level != other.Level) return false;
      if (Exp != other.Exp) return false;
      if (Star != other.Star) return false;
      if (Evolution != other.Evolution) return false;
      if (UseEvo != other.UseEvo) return false;
      if (MemoriesNum != other.MemoriesNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (Star != 0) hash ^= Star.GetHashCode();
      if (Evolution != 0) hash ^= Evolution.GetHashCode();
      if (UseEvo != 0) hash ^= UseEvo.GetHashCode();
      if (MemoriesNum != 0) hash ^= MemoriesNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(UserId);
      }
      if (CardId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(CardId);
      }
      if (Num != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Num);
      }
      if (Level != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(Level);
      }
      if (Exp != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(Exp);
      }
      if (Star != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Star);
      }
      if (Evolution != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Evolution);
      }
      if (UseEvo != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) UseEvo);
      }
      if (MemoriesNum != 0) {
        output.WriteRawTag(72);
        output.WriteSInt32(MemoriesNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CardId);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Num);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Level);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Exp);
      }
      if (Star != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Star);
      }
      if (Evolution != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Evolution);
      }
      if (UseEvo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UseEvo);
      }
      if (MemoriesNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MemoriesNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserCardPB other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      if (other.Star != 0) {
        Star = other.Star;
      }
      if (other.Evolution != 0) {
        Evolution = other.Evolution;
      }
      if (other.UseEvo != 0) {
        UseEvo = other.UseEvo;
      }
      if (other.MemoriesNum != 0) {
        MemoriesNum = other.MemoriesNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadSInt32();
            break;
          }
          case 16: {
            CardId = input.ReadSInt32();
            break;
          }
          case 24: {
            Num = input.ReadSInt32();
            break;
          }
          case 32: {
            Level = input.ReadSInt32();
            break;
          }
          case 40: {
            Exp = input.ReadSInt32();
            break;
          }
          case 48: {
            star_ = (global::StarPB) input.ReadEnum();
            break;
          }
          case 56: {
            evolution_ = (global::EvolutionPB) input.ReadEnum();
            break;
          }
          case 64: {
            useEvo_ = (global::EvolutionPB) input.ReadEnum();
            break;
          }
          case 72: {
            MemoriesNum = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserCardSimplePB : pb::IMessage<UserCardSimplePB> {
    private static readonly pb::MessageParser<UserCardSimplePB> _parser = new pb::MessageParser<UserCardSimplePB>(() => new UserCardSimplePB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserCardSimplePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanUserCardReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCardSimplePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCardSimplePB(UserCardSimplePB other) : this() {
      cardId_ = other.cardId_;
      num_ = other.num_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCardSimplePB Clone() {
      return new UserCardSimplePB(this);
    }

    /// <summary>Field number for the "card_id" field.</summary>
    public const int CardIdFieldNumber = 1;
    private int cardId_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private int num_;
    /// <summary>
    ///数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserCardSimplePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserCardSimplePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CardId != other.CardId) return false;
      if (Num != other.Num) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CardId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(CardId);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(Num);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CardId);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Num);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserCardSimplePB other) {
      if (other == null) {
        return;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CardId = input.ReadSInt32();
            break;
          }
          case 16: {
            Num = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
