// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_card_memories_mission.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_card_memories_mission.proto</summary>
  public static partial class BeanCardMemoriesMissionReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_card_memories_mission.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanCardMemoriesMissionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBiZWFuX2NhcmRfbWVtb3JpZXNfbWlzc2lvbi5wcm90bxIJY29tLnByb3Rv",
            "GgpiYXNlLnByb3RvGhBiZWFuX2F3YXJkLnByb3RvInkKFUNhcmRNZW1vcmll",
            "c01pc3Npb25QQhISCgptaXNzaW9uX2lkGAEgASgREhMKC2l0ZW1fcmFuZG9t",
            "GAIgASgREiEKBWF3YXJkGAMgAygLMhIuY29tLnByb3RvLkF3YXJkUEISFAoM",
            "bWlzc2lvbl9kZXNjGAQgASgJQjwKH25ldC5nYWxhc3BvcnRzLmJpZ3N0YXIu",
            "cHJvdG9jb2xCGUNhcmRNZW1vcmllc01pc3Npb25Qcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanAwardReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CardMemoriesMissionPB), global::Com.Proto.CardMemoriesMissionPB.Parser, new[]{ "MissionId", "ItemRandom", "Award", "MissionDesc" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///CardMemoriesMissionPB CardMemoriesMissionPB
  /// </summary>
  public sealed partial class CardMemoriesMissionPB : pb::IMessage<CardMemoriesMissionPB> {
    private static readonly pb::MessageParser<CardMemoriesMissionPB> _parser = new pb::MessageParser<CardMemoriesMissionPB>(() => new CardMemoriesMissionPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardMemoriesMissionPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanCardMemoriesMissionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardMemoriesMissionPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardMemoriesMissionPB(CardMemoriesMissionPB other) : this() {
      missionId_ = other.missionId_;
      itemRandom_ = other.itemRandom_;
      award_ = other.award_.Clone();
      missionDesc_ = other.missionDesc_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardMemoriesMissionPB Clone() {
      return new CardMemoriesMissionPB(this);
    }

    /// <summary>Field number for the "mission_id" field.</summary>
    public const int MissionIdFieldNumber = 1;
    private int missionId_;
    /// <summary>
    ///任务ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MissionId {
      get { return missionId_; }
      set {
        missionId_ = value;
      }
    }

    /// <summary>Field number for the "item_random" field.</summary>
    public const int ItemRandomFieldNumber = 2;
    private int itemRandom_;
    /// <summary>
    ///是否存在随机道具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemRandom {
      get { return itemRandom_; }
      set {
        itemRandom_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_award_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> award_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Award {
      get { return award_; }
    }

    /// <summary>Field number for the "mission_desc" field.</summary>
    public const int MissionDescFieldNumber = 4;
    private string missionDesc_ = "";
    /// <summary>
    ///任务描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MissionDesc {
      get { return missionDesc_; }
      set {
        missionDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardMemoriesMissionPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardMemoriesMissionPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MissionId != other.MissionId) return false;
      if (ItemRandom != other.ItemRandom) return false;
      if(!award_.Equals(other.award_)) return false;
      if (MissionDesc != other.MissionDesc) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MissionId != 0) hash ^= MissionId.GetHashCode();
      if (ItemRandom != 0) hash ^= ItemRandom.GetHashCode();
      hash ^= award_.GetHashCode();
      if (MissionDesc.Length != 0) hash ^= MissionDesc.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MissionId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(MissionId);
      }
      if (ItemRandom != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(ItemRandom);
      }
      award_.WriteTo(output, _repeated_award_codec);
      if (MissionDesc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MissionDesc);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MissionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MissionId);
      }
      if (ItemRandom != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ItemRandom);
      }
      size += award_.CalculateSize(_repeated_award_codec);
      if (MissionDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MissionDesc);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardMemoriesMissionPB other) {
      if (other == null) {
        return;
      }
      if (other.MissionId != 0) {
        MissionId = other.MissionId;
      }
      if (other.ItemRandom != 0) {
        ItemRandom = other.ItemRandom;
      }
      award_.Add(other.award_);
      if (other.MissionDesc.Length != 0) {
        MissionDesc = other.MissionDesc;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MissionId = input.ReadSInt32();
            break;
          }
          case 16: {
            ItemRandom = input.ReadSInt32();
            break;
          }
          case 26: {
            award_.AddEntriesFrom(input, _repeated_award_codec);
            break;
          }
          case 34: {
            MissionDesc = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
