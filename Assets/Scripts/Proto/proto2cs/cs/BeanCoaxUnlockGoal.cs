// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_coax_unlock_goal.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_coax_unlock_goal.proto</summary>
  public static partial class BeanCoaxUnlockGoalReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_coax_unlock_goal.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanCoaxUnlockGoalReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtiZWFuX2NvYXhfdW5sb2NrX2dvYWwucHJvdG8SCWNvbS5wcm90bxoKYmFz",
            "ZS5wcm90byJJChBDb2F4VW5sb2NrUnVsZVBCEgsKA2dlbRgBIAEoERIXCg91",
            "bmxvY2tfbG92ZV9udW0YAiABKBESDwoHd2VpZ2h0cxgDIAEoEUI3Ch9uZXQu",
            "Z2FsYXNwb3J0cy5iaWdzdGFyLnByb3RvY29sQhRDb2F4VW5sb2NrR29hbFBy",
            "b3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CoaxUnlockRulePB), global::Com.Proto.CoaxUnlockRulePB.Parser, new[]{ "Gem", "UnlockLoveNum", "Weights" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///UnlockGoalPB UnlockGoal
  /// </summary>
  public sealed partial class CoaxUnlockRulePB : pb::IMessage<CoaxUnlockRulePB> {
    private static readonly pb::MessageParser<CoaxUnlockRulePB> _parser = new pb::MessageParser<CoaxUnlockRulePB>(() => new CoaxUnlockRulePB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CoaxUnlockRulePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanCoaxUnlockGoalReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoaxUnlockRulePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoaxUnlockRulePB(CoaxUnlockRulePB other) : this() {
      gem_ = other.gem_;
      unlockLoveNum_ = other.unlockLoveNum_;
      weights_ = other.weights_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoaxUnlockRulePB Clone() {
      return new CoaxUnlockRulePB(this);
    }

    /// <summary>Field number for the "gem" field.</summary>
    public const int GemFieldNumber = 1;
    private int gem_;
    /// <summary>
    ///宝石数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gem {
      get { return gem_; }
      set {
        gem_ = value;
      }
    }

    /// <summary>Field number for the "unlock_love_num" field.</summary>
    public const int UnlockLoveNumFieldNumber = 2;
    private int unlockLoveNum_;
    /// <summary>
    ///恋爱剧情解锁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnlockLoveNum {
      get { return unlockLoveNum_; }
      set {
        unlockLoveNum_ = value;
      }
    }

    /// <summary>Field number for the "weights" field.</summary>
    public const int WeightsFieldNumber = 3;
    private int weights_;
    /// <summary>
    ///条件权重（1最小）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Weights {
      get { return weights_; }
      set {
        weights_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CoaxUnlockRulePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CoaxUnlockRulePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gem != other.Gem) return false;
      if (UnlockLoveNum != other.UnlockLoveNum) return false;
      if (Weights != other.Weights) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gem != 0) hash ^= Gem.GetHashCode();
      if (UnlockLoveNum != 0) hash ^= UnlockLoveNum.GetHashCode();
      if (Weights != 0) hash ^= Weights.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gem != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Gem);
      }
      if (UnlockLoveNum != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(UnlockLoveNum);
      }
      if (Weights != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Weights);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gem != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Gem);
      }
      if (UnlockLoveNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UnlockLoveNum);
      }
      if (Weights != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Weights);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CoaxUnlockRulePB other) {
      if (other == null) {
        return;
      }
      if (other.Gem != 0) {
        Gem = other.Gem;
      }
      if (other.UnlockLoveNum != 0) {
        UnlockLoveNum = other.UnlockLoveNum;
      }
      if (other.Weights != 0) {
        Weights = other.Weights;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Gem = input.ReadSInt32();
            break;
          }
          case 16: {
            UnlockLoveNum = input.ReadSInt32();
            break;
          }
          case 24: {
            Weights = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
