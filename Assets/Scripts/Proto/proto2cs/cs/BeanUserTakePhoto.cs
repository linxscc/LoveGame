// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_user_take_photo.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_user_take_photo.proto</summary>
  public static partial class BeanUserTakePhotoReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_user_take_photo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanUserTakePhotoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpiZWFuX3VzZXJfdGFrZV9waG90by5wcm90bxIJY29tLnByb3RvIjwKE1Vz",
            "ZXJUYWtlUGhvdG9JbmZvUEISEgoKdGFrZV9jb3VudBgBIAEoERIRCglidXlf",
            "Y291bnQYAiABKBFCNgofbmV0LmdhbGFzcG9ydHMuYmlnc3Rhci5wcm90b2Nv",
            "bEITVXNlclRha2VQaG90b1Byb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserTakePhotoInfoPB), global::Com.Proto.UserTakePhotoInfoPB.Parser, new[]{ "TakeCount", "BuyCount" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UserTakePhotoInfoPB : pb::IMessage<UserTakePhotoInfoPB> {
    private static readonly pb::MessageParser<UserTakePhotoInfoPB> _parser = new pb::MessageParser<UserTakePhotoInfoPB>(() => new UserTakePhotoInfoPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserTakePhotoInfoPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanUserTakePhotoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTakePhotoInfoPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTakePhotoInfoPB(UserTakePhotoInfoPB other) : this() {
      takeCount_ = other.takeCount_;
      buyCount_ = other.buyCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTakePhotoInfoPB Clone() {
      return new UserTakePhotoInfoPB(this);
    }

    /// <summary>Field number for the "take_count" field.</summary>
    public const int TakeCountFieldNumber = 1;
    private int takeCount_;
    /// <summary>
    ///拍照次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TakeCount {
      get { return takeCount_; }
      set {
        takeCount_ = value;
      }
    }

    /// <summary>Field number for the "buy_count" field.</summary>
    public const int BuyCountFieldNumber = 2;
    private int buyCount_;
    /// <summary>
    ///购买次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuyCount {
      get { return buyCount_; }
      set {
        buyCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserTakePhotoInfoPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserTakePhotoInfoPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TakeCount != other.TakeCount) return false;
      if (BuyCount != other.BuyCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TakeCount != 0) hash ^= TakeCount.GetHashCode();
      if (BuyCount != 0) hash ^= BuyCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TakeCount != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(TakeCount);
      }
      if (BuyCount != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(BuyCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TakeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(TakeCount);
      }
      if (BuyCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(BuyCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserTakePhotoInfoPB other) {
      if (other == null) {
        return;
      }
      if (other.TakeCount != 0) {
        TakeCount = other.TakeCount;
      }
      if (other.BuyCount != 0) {
        BuyCount = other.BuyCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            TakeCount = input.ReadSInt32();
            break;
          }
          case 16: {
            BuyCount = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
