// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_card_star_up_rule.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_card_star_up_rule.proto</summary>
  public static partial class BeanCardStarUpRuleReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_card_star_up_rule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanCardStarUpRuleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxiZWFuX2NhcmRfc3Rhcl91cF9ydWxlLnByb3RvEgljb20ucHJvdG8aCmJh",
            "c2UucHJvdG8ixQEKEENhcmRTdGFyVXBSdWxlUEISDwoHY2FyZF9pZBgBIAEo",
            "ERIVCgRzdGFyGAIgASgOMgcuU3RhclBCEjkKB2NvbnN1bWUYAyADKAsyKC5j",
            "b20ucHJvdG8uQ2FyZFN0YXJVcFJ1bGVQQi5Db25zdW1lRW50cnkSDAoEZ29s",
            "ZBgEIAEoERIQCghzY2VuZUlkcxgFIAMoERouCgxDb25zdW1lRW50cnkSCwoD",
            "a2V5GAEgASgREg0KBXZhbHVlGAIgASgROgI4AUI3Ch9uZXQuZ2FsYXNwb3J0",
            "cy5iaWdzdGFyLnByb3RvY29sQhRDYXJkU3RhclVwUnVsZVByb3Rvc2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CardStarUpRulePB), global::Com.Proto.CardStarUpRulePB.Parser, new[]{ "CardId", "Star", "Consume", "Gold", "SceneIds" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///CardStarUpRulePB CardStarUpRule
  /// </summary>
  public sealed partial class CardStarUpRulePB : pb::IMessage<CardStarUpRulePB> {
    private static readonly pb::MessageParser<CardStarUpRulePB> _parser = new pb::MessageParser<CardStarUpRulePB>(() => new CardStarUpRulePB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardStarUpRulePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanCardStarUpRuleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardStarUpRulePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardStarUpRulePB(CardStarUpRulePB other) : this() {
      cardId_ = other.cardId_;
      star_ = other.star_;
      consume_ = other.consume_.Clone();
      gold_ = other.gold_;
      sceneIds_ = other.sceneIds_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardStarUpRulePB Clone() {
      return new CardStarUpRulePB(this);
    }

    /// <summary>Field number for the "card_id" field.</summary>
    public const int CardIdFieldNumber = 1;
    private int cardId_;
    /// <summary>
    ///card_id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "star" field.</summary>
    public const int StarFieldNumber = 2;
    private global::StarPB star_ = 0;
    /// <summary>
    ///level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::StarPB Star {
      get { return star_; }
      set {
        star_ = value;
      }
    }

    /// <summary>Field number for the "consume" field.</summary>
    public const int ConsumeFieldNumber = 3;
    private static readonly pbc::MapField<int, int>.Codec _map_consume_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForSInt32(8), pb::FieldCodec.ForSInt32(16), 26);
    private readonly pbc::MapField<int, int> consume_ = new pbc::MapField<int, int>();
    /// <summary>
    ///消耗道具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> Consume {
      get { return consume_; }
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 4;
    private int gold_;
    /// <summary>
    ///消耗的金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    /// <summary>Field number for the "sceneIds" field.</summary>
    public const int SceneIdsFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_sceneIds_codec
        = pb::FieldCodec.ForSInt32(42);
    private readonly pbc::RepeatedField<int> sceneIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///升级到该星级的时候触发的手机ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> SceneIds {
      get { return sceneIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardStarUpRulePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardStarUpRulePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CardId != other.CardId) return false;
      if (Star != other.Star) return false;
      if (!Consume.Equals(other.Consume)) return false;
      if (Gold != other.Gold) return false;
      if(!sceneIds_.Equals(other.sceneIds_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (Star != 0) hash ^= Star.GetHashCode();
      hash ^= Consume.GetHashCode();
      if (Gold != 0) hash ^= Gold.GetHashCode();
      hash ^= sceneIds_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CardId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(CardId);
      }
      if (Star != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Star);
      }
      consume_.WriteTo(output, _map_consume_codec);
      if (Gold != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(Gold);
      }
      sceneIds_.WriteTo(output, _repeated_sceneIds_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CardId);
      }
      if (Star != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Star);
      }
      size += consume_.CalculateSize(_map_consume_codec);
      if (Gold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Gold);
      }
      size += sceneIds_.CalculateSize(_repeated_sceneIds_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardStarUpRulePB other) {
      if (other == null) {
        return;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      if (other.Star != 0) {
        Star = other.Star;
      }
      consume_.Add(other.consume_);
      if (other.Gold != 0) {
        Gold = other.Gold;
      }
      sceneIds_.Add(other.sceneIds_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CardId = input.ReadSInt32();
            break;
          }
          case 16: {
            star_ = (global::StarPB) input.ReadEnum();
            break;
          }
          case 26: {
            consume_.AddEntriesFrom(input, _map_consume_codec);
            break;
          }
          case 32: {
            Gold = input.ReadSInt32();
            break;
          }
          case 42:
          case 40: {
            sceneIds_.AddEntriesFrom(input, _repeated_sceneIds_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
