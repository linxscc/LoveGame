// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller_recharge.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from controller_recharge.proto</summary>
  public static partial class ControllerRechargeReflection {

    #region Descriptor
    /// <summary>File descriptor for controller_recharge.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControllerRechargeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chljb250cm9sbGVyX3JlY2hhcmdlLnByb3RvEgljb20ucHJvdG8aCmJhc2Uu",
            "cHJvdG8aGWJlYW5fY29tbW9kaXR5X2luZm8ucHJvdG8aEGJlYW5fYXdhcmQu",
            "cHJvdG8aGWJlYW5fZmlyc3RfcmVjaGFyZ2UucHJvdG8aGmJlYW5fdXNlcl9l",
            "eHRyYV9pbmZvLnByb3RvGhxiZWFuX3VzZXJfYnV5X3JtYl9tYWxsLnByb3Rv",
            "GhpiZWFuX3VzZXJfbW9udGhfY2FyZC5wcm90byJTChBDb21tb2RpdHlJbmZv",
            "UmVzEgsKA3JldBgBIAEoERIyCg5jb21tb2RpdHlfaW5mbxgCIAMoCzIaLmNv",
            "bS5wcm90by5Db21tb2RpdHlJbmZvUEIiHwoQQ29tbW9kaXR5SW5mb1JlcRIL",
            "CgN0YWcYASABKAkipQIKDkNyZWF0ZU9yZGVyUmVxEg4KBm9yaWdpbhgBIAEo",
            "CRIPCgdjaGFubmVsGAIgASgJEhQKDGNvbW1vZGl0eV9pZBgDIAEoERIeCgR0",
            "eXBlGAQgASgOMhAuQ29tbW9kaXR5VHlwZVBCEhAKCHBheV90eXBlGAUgASgR",
            "EhMKC2Vudmlyb25tZW50GAYgASgREg4KBnBhcmFtcxgHIAEoCRISCgpzZGtW",
            "ZXJzaW9uGAggASgJEg8KB3ZlcnNpb24YCSABKAkSDQoFZXh0cmEYCiABKAkS",
            "CwoDdGFnGAsgASgJEjMKD3RyaWdnZXJfZ2lmdF9pZBgMIAEoCzIaLmNvbS5w",
            "cm90by5UcmlnZ2VyR2lmdElkUGISDwoHaXNDbG9zZRgNIAEoESLEAQoOQ3Jl",
            "YXRlT3JkZXJSZXMSCwoDcmV0GAEgASgREhAKCG9yZGVyX2lkGAIgASgJEgwK",
            "BHRpbWUYAyABKBISPAoKZXh0cmFfaW5mbxgEIAMoCzIoLmNvbS5wcm90by5D",
            "cmVhdGVPcmRlclJlcy5FeHRyYUluZm9FbnRyeRIVCg10b3RhbFJlY2hhcmdl",
            "GAUgASgSGjAKDkV4dHJhSW5mb0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1",
            "ZRgCIAEoCToCOAEiQgoOQ2hlY2tPcmRlclJlcXMSMAoOQ2hlY2tPcmRlclJl",
            "cXMYASADKAsyGC5jb20ucHJvdG8uQ2hlY2tPcmRlclJlcSLOAgoNQ2hlY2tP",
            "cmRlclJlcRIQCghvcmRlcl9pZBgBIAEoCRIOCgZvcmlnaW4YAiABKAkSDwoH",
            "Y2hhbm5lbBgDIAEoCRIeCgR0eXBlGAQgASgOMhAuQ29tbW9kaXR5VHlwZVBC",
            "EhAKCHBheV90eXBlGAUgASgREhIKCnNka1ZlcnNpb24YBiABKAkSDwoHdmVy",
            "c2lvbhgHIAEoCRIOCgZwYXJhbXMYCCABKAkSDwoHZXh0SW5mbxgJIAEoCRIT",
            "CgtlbnZpcm9ubWVudBgKIAEoERI7ChJjaGVja190cmFuc2FjdGlvbnMYCyAD",
            "KAsyHy5jb20ucHJvdG8uQ2hlY2tUcmFuc2FjdGlvbklkUEISCwoDdGFnGAwg",
            "ASgJEjMKD3RyaWdnZXJfZ2lmdF9pZBgNIAEoCzIaLmNvbS5wcm90by5Ucmln",
            "Z2VyR2lmdElkUGIi9gIKDkNoZWNrT3JkZXJSZXNzEgsKA3JldBgBIAEoERIw",
            "Cg5DaGVja09yZGVyUmVzcxgCIAMoCzIYLmNvbS5wcm90by5DaGVja09yZGVy",
            "UmVzEiIKBmF3YXJkcxgDIAMoCzISLmNvbS5wcm90by5Bd2FyZFBCEjMKD2Zp",
            "cnN0X3JlY2hhcmdlcxgEIAMoCzIaLmNvbS5wcm90by5GaXJzdFJlY2hhcmdl",
            "UEISMwoPdXNlcl9leHRyYV9pbmZvGAUgASgLMhouY29tLnByb3RvLlVzZXJF",
            "eHRyYUluZm9QQhIzCg91c2VyX21vbnRoX2NhcmQYBiABKAsyGi5jb20ucHJv",
            "dG8uVXNlck1vbnRoQ2FyZFBCEhYKDnRyYW5zYWN0aW9uX2lkGAcgAygJEhIK",
            "CnRyaWdnZXJfaWQYCCADKBISNgoRdXNlcl9idXlfcm1iX21hbGwYCSADKAsy",
            "Gy5jb20ucHJvdG8uVXNlckJ1eVJtYk1hbGxQQiKbAQoNQ2hlY2tPcmRlclJl",
            "cxILCgNyZXQYASABKBESEAoIb3JkZXJfaWQYAiABKAkSHgoGc3RhdHVzGAMg",
            "ASgOMg4uT3JkZXJTdGF0dXNQQhIOCgZhbW91bnQYBCABKAESDQoFZXh0cmEY",
            "BSABKAkSFAoMY29tbW9kaXR5X2lkGAYgASgREhYKDnRyYW5zYWN0aW9uX2lk",
            "GAcgASgJIocBCghDaGVja1JlcRIPCgdvcmRlcklkGAEgASgJEg8KB3BheVR5",
            "cGUYAiABKBESDgoGcGFyYW1zGAMgASgJEg8KB2V4dEluZm8YBCABKAkSEwoL",
            "ZW52aXJvbm1lbnQYBSABKBESEgoKc2RrVmVyc2lvbhgGIAEoCRIPCgd2ZXJz",
            "aW9uGAcgASgJIusBChRDaGVja1RyYW5zYWN0aW9uSWRQQhIWCg50cmFuc2Fj",
            "dGlvbl9pZBgBIAEoCRISCgpwcm9kdWN0X2lkGAIgASgJEhQKDGNvbW1vZGl0",
            "eV9pZBgDIAEoERIeCgR0eXBlGAQgASgOMhAuQ29tbW9kaXR5VHlwZVBCEg0K",
            "BWV4dHJhGAUgASgJEhIKCnBheV9zdGF0dXMYBiABKAkSGQoRb3JkZXJfY3Jl",
            "YXRlX3RpbWUYByABKBISMwoPdHJpZ2dlcl9naWZ0X2lkGAggASgLMhouY29t",
            "LnByb3RvLlRyaWdnZXJHaWZ0SWRQYiIdCg9UcmlnZ2VyR2lmdElkUGISCgoC",
            "aWQYASABKBIiUwoMVHhCYWxhbmNlUmVxEg4KBmdhbWVJZBgBIAEoERISCgpz",
            "ZGtWZXJzaW9uGAIgASgJEg8KB3ZlcnNpb24YAyABKAkSDgoGcGFyYW1zGAQg",
            "ASgJIiwKDFR4QmFsYW5jZVJlcxILCgNyZXQYASABKBESDwoHYmFsYW5jZRgC",
            "IAEoAUI7Ch9uZXQuZ2FsYXNwb3J0cy5zb2NjZXIzLnByb3RvY29sQhhSZWNo",
            "YXJnZUNvbnRyb2xsZXJQcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanCommodityInfoReflection.Descriptor, global::Com.Proto.BeanAwardReflection.Descriptor, global::Com.Proto.BeanFirstRechargeReflection.Descriptor, global::Com.Proto.BeanUserExtraInfoReflection.Descriptor, global::Com.Proto.BeanUserBuyRmbMallReflection.Descriptor, global::Com.Proto.BeanUserMonthCardReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CommodityInfoRes), global::Com.Proto.CommodityInfoRes.Parser, new[]{ "Ret", "CommodityInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CommodityInfoReq), global::Com.Proto.CommodityInfoReq.Parser, new[]{ "Tag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CreateOrderReq), global::Com.Proto.CreateOrderReq.Parser, new[]{ "Origin", "Channel", "CommodityId", "Type", "PayType", "Environment", "Params", "SdkVersion", "Version", "Extra", "Tag", "TriggerGiftId", "IsClose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CreateOrderRes), global::Com.Proto.CreateOrderRes.Parser, new[]{ "Ret", "OrderId", "Time", "ExtraInfo", "TotalRecharge" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CheckOrderReqs), global::Com.Proto.CheckOrderReqs.Parser, new[]{ "CheckOrderReqs_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CheckOrderReq), global::Com.Proto.CheckOrderReq.Parser, new[]{ "OrderId", "Origin", "Channel", "Type", "PayType", "SdkVersion", "Version", "Params", "ExtInfo", "Environment", "CheckTransactions", "Tag", "TriggerGiftId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CheckOrderRess), global::Com.Proto.CheckOrderRess.Parser, new[]{ "Ret", "CheckOrderRess_", "Awards", "FirstRecharges", "UserExtraInfo", "UserMonthCard", "TransactionId", "TriggerId", "UserBuyRmbMall" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CheckOrderRes), global::Com.Proto.CheckOrderRes.Parser, new[]{ "Ret", "OrderId", "Status", "Amount", "Extra", "CommodityId", "TransactionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CheckReq), global::Com.Proto.CheckReq.Parser, new[]{ "OrderId", "PayType", "Params", "ExtInfo", "Environment", "SdkVersion", "Version" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CheckTransactionIdPB), global::Com.Proto.CheckTransactionIdPB.Parser, new[]{ "TransactionId", "ProductId", "CommodityId", "Type", "Extra", "PayStatus", "OrderCreateTime", "TriggerGiftId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.TriggerGiftIdPb), global::Com.Proto.TriggerGiftIdPb.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.TxBalanceReq), global::Com.Proto.TxBalanceReq.Parser, new[]{ "GameId", "SdkVersion", "Version", "Params" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.TxBalanceRes), global::Com.Proto.TxBalanceRes.Parser, new[]{ "Ret", "Balance" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///返回产品详细信息
  /// </summary>
  public sealed partial class CommodityInfoRes : pb::IMessage<CommodityInfoRes> {
    private static readonly pb::MessageParser<CommodityInfoRes> _parser = new pb::MessageParser<CommodityInfoRes>(() => new CommodityInfoRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommodityInfoRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerRechargeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommodityInfoRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommodityInfoRes(CommodityInfoRes other) : this() {
      ret_ = other.ret_;
      commodityInfo_ = other.commodityInfo_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommodityInfoRes Clone() {
      return new CommodityInfoRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///返回状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "commodity_info" field.</summary>
    public const int CommodityInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.CommodityInfoPB> _repeated_commodityInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.CommodityInfoPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.CommodityInfoPB> commodityInfo_ = new pbc::RepeatedField<global::Com.Proto.CommodityInfoPB>();
    /// <summary>
    ///商品信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.CommodityInfoPB> CommodityInfo {
      get { return commodityInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommodityInfoRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommodityInfoRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!commodityInfo_.Equals(other.commodityInfo_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= commodityInfo_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      commodityInfo_.WriteTo(output, _repeated_commodityInfo_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += commodityInfo_.CalculateSize(_repeated_commodityInfo_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommodityInfoRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      commodityInfo_.Add(other.commodityInfo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            commodityInfo_.AddEntriesFrom(input, _repeated_commodityInfo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommodityInfoReq : pb::IMessage<CommodityInfoReq> {
    private static readonly pb::MessageParser<CommodityInfoReq> _parser = new pb::MessageParser<CommodityInfoReq>(() => new CommodityInfoReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommodityInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerRechargeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommodityInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommodityInfoReq(CommodityInfoReq other) : this() {
      tag_ = other.tag_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommodityInfoReq Clone() {
      return new CommodityInfoReq(this);
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 1;
    private string tag_ = "";
    /// <summary>
    ///标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommodityInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommodityInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tag != other.Tag) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tag.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tag);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommodityInfoReq other) {
      if (other == null) {
        return;
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Tag = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///创建订单请求
  /// </summary>
  public sealed partial class CreateOrderReq : pb::IMessage<CreateOrderReq> {
    private static readonly pb::MessageParser<CreateOrderReq> _parser = new pb::MessageParser<CreateOrderReq>(() => new CreateOrderReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateOrderReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerRechargeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrderReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrderReq(CreateOrderReq other) : this() {
      origin_ = other.origin_;
      channel_ = other.channel_;
      commodityId_ = other.commodityId_;
      type_ = other.type_;
      payType_ = other.payType_;
      environment_ = other.environment_;
      params_ = other.params_;
      sdkVersion_ = other.sdkVersion_;
      version_ = other.version_;
      extra_ = other.extra_;
      tag_ = other.tag_;
      TriggerGiftId = other.triggerGiftId_ != null ? other.TriggerGiftId.Clone() : null;
      isClose_ = other.isClose_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrderReq Clone() {
      return new CreateOrderReq(this);
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 1;
    private string origin_ = "";
    /// <summary>
    ///[必填]目标渠道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Origin {
      get { return origin_; }
      set {
        origin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private string channel_ = "";
    /// <summary>
    ///[必填]原始渠道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commodity_id" field.</summary>
    public const int CommodityIdFieldNumber = 3;
    private int commodityId_;
    /// <summary>
    ///[必填]商品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CommodityId {
      get { return commodityId_; }
      set {
        commodityId_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::CommodityTypePB type_ = 0;
    /// <summary>
    /// [必填] 0宝石， 1月卡 2 礼包 3 福利
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CommodityTypePB Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "pay_type" field.</summary>
    public const int PayTypeFieldNumber = 5;
    private int payType_;
    /// <summary>
    /// [非必填]支付类型 ：NoDefined = 999999,None = 0,AliPay = 1004,WechatPay = 1009,MyCard = 1010,GooglePlay = 888, ApplePay = 889
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PayType {
      get { return payType_; }
      set {
        payType_ = value;
      }
    }

    /// <summary>Field number for the "environment" field.</summary>
    public const int EnvironmentFieldNumber = 6;
    private int environment_;
    /// <summary>
    ///[非必填]环境[0-沙箱，1-正式,此字段仅内网有效,线上默认1,若无沙盒默认线上]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Environment {
      get { return environment_; }
      set {
        environment_ = value;
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 7;
    private string params_ = "";
    /// <summary>
    ///[非必填]创单参数(可String【当只有一个参数的时候】,可JSON格式,bean由pay-bean提供)，eg:webTX（token,openKey,pf,pfKey参数）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Params {
      get { return params_; }
      set {
        params_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sdkVersion" field.</summary>
    public const int SdkVersionFieldNumber = 8;
    private string sdkVersion_ = "";
    /// <summary>
    ///[必填]sdk版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SdkVersion {
      get { return sdkVersion_; }
      set {
        sdkVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 9;
    private string version_ = "";
    /// <summary>
    ///[必填]版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extra" field.</summary>
    public const int ExtraFieldNumber = 10;
    private string extra_ = "";
    /// <summary>
    ///[非必填]渠道extra（当渠道为自营时，该字段可区分认为是混服Andoird或自营IOS）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Extra {
      get { return extra_; }
      set {
        extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 11;
    private string tag_ = "";
    /// <summary>
    ///标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger_gift_id" field.</summary>
    public const int TriggerGiftIdFieldNumber = 12;
    private global::Com.Proto.TriggerGiftIdPb triggerGiftId_;
    /// <summary>
    ///玩家触发礼包Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.TriggerGiftIdPb TriggerGiftId {
      get { return triggerGiftId_; }
      set {
        triggerGiftId_ = value;
      }
    }

    /// <summary>Field number for the "isClose" field.</summary>
    public const int IsCloseFieldNumber = 13;
    private int isClose_;
    /// <summary>
    ///支付验证开关0开启（默认）1关闭2是新用户开启，老用户关闭
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsClose {
      get { return isClose_; }
      set {
        isClose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateOrderReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateOrderReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Origin != other.Origin) return false;
      if (Channel != other.Channel) return false;
      if (CommodityId != other.CommodityId) return false;
      if (Type != other.Type) return false;
      if (PayType != other.PayType) return false;
      if (Environment != other.Environment) return false;
      if (Params != other.Params) return false;
      if (SdkVersion != other.SdkVersion) return false;
      if (Version != other.Version) return false;
      if (Extra != other.Extra) return false;
      if (Tag != other.Tag) return false;
      if (!object.Equals(TriggerGiftId, other.TriggerGiftId)) return false;
      if (IsClose != other.IsClose) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Origin.Length != 0) hash ^= Origin.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (CommodityId != 0) hash ^= CommodityId.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (PayType != 0) hash ^= PayType.GetHashCode();
      if (Environment != 0) hash ^= Environment.GetHashCode();
      if (Params.Length != 0) hash ^= Params.GetHashCode();
      if (SdkVersion.Length != 0) hash ^= SdkVersion.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Extra.Length != 0) hash ^= Extra.GetHashCode();
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (triggerGiftId_ != null) hash ^= TriggerGiftId.GetHashCode();
      if (IsClose != 0) hash ^= IsClose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Origin.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Origin);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Channel);
      }
      if (CommodityId != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(CommodityId);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (PayType != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(PayType);
      }
      if (Environment != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(Environment);
      }
      if (Params.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Params);
      }
      if (SdkVersion.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(SdkVersion);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Version);
      }
      if (Extra.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Extra);
      }
      if (Tag.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Tag);
      }
      if (triggerGiftId_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(TriggerGiftId);
      }
      if (IsClose != 0) {
        output.WriteRawTag(104);
        output.WriteSInt32(IsClose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Origin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Origin);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (CommodityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CommodityId);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (PayType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(PayType);
      }
      if (Environment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Environment);
      }
      if (Params.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Params);
      }
      if (SdkVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SdkVersion);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Extra.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Extra);
      }
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (triggerGiftId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TriggerGiftId);
      }
      if (IsClose != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(IsClose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateOrderReq other) {
      if (other == null) {
        return;
      }
      if (other.Origin.Length != 0) {
        Origin = other.Origin;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.CommodityId != 0) {
        CommodityId = other.CommodityId;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.PayType != 0) {
        PayType = other.PayType;
      }
      if (other.Environment != 0) {
        Environment = other.Environment;
      }
      if (other.Params.Length != 0) {
        Params = other.Params;
      }
      if (other.SdkVersion.Length != 0) {
        SdkVersion = other.SdkVersion;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Extra.Length != 0) {
        Extra = other.Extra;
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      if (other.triggerGiftId_ != null) {
        if (triggerGiftId_ == null) {
          triggerGiftId_ = new global::Com.Proto.TriggerGiftIdPb();
        }
        TriggerGiftId.MergeFrom(other.TriggerGiftId);
      }
      if (other.IsClose != 0) {
        IsClose = other.IsClose;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Origin = input.ReadString();
            break;
          }
          case 18: {
            Channel = input.ReadString();
            break;
          }
          case 24: {
            CommodityId = input.ReadSInt32();
            break;
          }
          case 32: {
            type_ = (global::CommodityTypePB) input.ReadEnum();
            break;
          }
          case 40: {
            PayType = input.ReadSInt32();
            break;
          }
          case 48: {
            Environment = input.ReadSInt32();
            break;
          }
          case 58: {
            Params = input.ReadString();
            break;
          }
          case 66: {
            SdkVersion = input.ReadString();
            break;
          }
          case 74: {
            Version = input.ReadString();
            break;
          }
          case 82: {
            Extra = input.ReadString();
            break;
          }
          case 90: {
            Tag = input.ReadString();
            break;
          }
          case 98: {
            if (triggerGiftId_ == null) {
              triggerGiftId_ = new global::Com.Proto.TriggerGiftIdPb();
            }
            input.ReadMessage(triggerGiftId_);
            break;
          }
          case 104: {
            IsClose = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///创建订单回包
  /// </summary>
  public sealed partial class CreateOrderRes : pb::IMessage<CreateOrderRes> {
    private static readonly pb::MessageParser<CreateOrderRes> _parser = new pb::MessageParser<CreateOrderRes>(() => new CreateOrderRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateOrderRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerRechargeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrderRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrderRes(CreateOrderRes other) : this() {
      ret_ = other.ret_;
      orderId_ = other.orderId_;
      time_ = other.time_;
      extraInfo_ = other.extraInfo_.Clone();
      totalRecharge_ = other.totalRecharge_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrderRes Clone() {
      return new CreateOrderRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///返回状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 2;
    private string orderId_ = "";
    /// <summary>
    ///订单ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderId {
      get { return orderId_; }
      set {
        orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private long time_;
    /// <summary>
    ///创建订单 时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "extra_info" field.</summary>
    public const int ExtraInfoFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_extraInfo_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> extraInfo_ = new pbc::MapField<string, string>();
    /// <summary>
    ///微信 需要的一些 额外信息，partnerid ,noncestr,prepay_id,appid,timstamp 这些等信息。
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> ExtraInfo {
      get { return extraInfo_; }
    }

    /// <summary>Field number for the "totalRecharge" field.</summary>
    public const int TotalRechargeFieldNumber = 5;
    private long totalRecharge_;
    /// <summary>
    ///充值总金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalRecharge {
      get { return totalRecharge_; }
      set {
        totalRecharge_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateOrderRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateOrderRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (OrderId != other.OrderId) return false;
      if (Time != other.Time) return false;
      if (!ExtraInfo.Equals(other.ExtraInfo)) return false;
      if (TotalRecharge != other.TotalRecharge) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (OrderId.Length != 0) hash ^= OrderId.GetHashCode();
      if (Time != 0L) hash ^= Time.GetHashCode();
      hash ^= ExtraInfo.GetHashCode();
      if (TotalRecharge != 0L) hash ^= TotalRecharge.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (OrderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OrderId);
      }
      if (Time != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(Time);
      }
      extraInfo_.WriteTo(output, _map_extraInfo_codec);
      if (TotalRecharge != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(TotalRecharge);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (OrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
      }
      if (Time != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Time);
      }
      size += extraInfo_.CalculateSize(_map_extraInfo_codec);
      if (TotalRecharge != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(TotalRecharge);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateOrderRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.OrderId.Length != 0) {
        OrderId = other.OrderId;
      }
      if (other.Time != 0L) {
        Time = other.Time;
      }
      extraInfo_.Add(other.extraInfo_);
      if (other.TotalRecharge != 0L) {
        TotalRecharge = other.TotalRecharge;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            OrderId = input.ReadString();
            break;
          }
          case 24: {
            Time = input.ReadSInt64();
            break;
          }
          case 34: {
            extraInfo_.AddEntriesFrom(input, _map_extraInfo_codec);
            break;
          }
          case 40: {
            TotalRecharge = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 订单检查List&lt;Req>
  /// </summary>
  public sealed partial class CheckOrderReqs : pb::IMessage<CheckOrderReqs> {
    private static readonly pb::MessageParser<CheckOrderReqs> _parser = new pb::MessageParser<CheckOrderReqs>(() => new CheckOrderReqs());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckOrderReqs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerRechargeReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckOrderReqs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckOrderReqs(CheckOrderReqs other) : this() {
      checkOrderReqs_ = other.checkOrderReqs_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckOrderReqs Clone() {
      return new CheckOrderReqs(this);
    }

    /// <summary>Field number for the "CheckOrderReqs" field.</summary>
    public const int CheckOrderReqs_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Proto.CheckOrderReq> _repeated_checkOrderReqs_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Proto.CheckOrderReq.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.CheckOrderReq> checkOrderReqs_ = new pbc::RepeatedField<global::Com.Proto.CheckOrderReq>();
    /// <summary>
    ///List&lt;CheckReq>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.CheckOrderReq> CheckOrderReqs_ {
      get { return checkOrderReqs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckOrderReqs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckOrderReqs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!checkOrderReqs_.Equals(other.checkOrderReqs_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= checkOrderReqs_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      checkOrderReqs_.WriteTo(output, _repeated_checkOrderReqs_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += checkOrderReqs_.CalculateSize(_repeated_checkOrderReqs_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckOrderReqs other) {
      if (other == null) {
        return;
      }
      checkOrderReqs_.Add(other.checkOrderReqs_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            checkOrderReqs_.AddEntriesFrom(input, _repeated_checkOrderReqs_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///检查订单请求包
  /// </summary>
  public sealed partial class CheckOrderReq : pb::IMessage<CheckOrderReq> {
    private static readonly pb::MessageParser<CheckOrderReq> _parser = new pb::MessageParser<CheckOrderReq>(() => new CheckOrderReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckOrderReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerRechargeReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckOrderReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckOrderReq(CheckOrderReq other) : this() {
      orderId_ = other.orderId_;
      origin_ = other.origin_;
      channel_ = other.channel_;
      type_ = other.type_;
      payType_ = other.payType_;
      sdkVersion_ = other.sdkVersion_;
      version_ = other.version_;
      params_ = other.params_;
      extInfo_ = other.extInfo_;
      environment_ = other.environment_;
      checkTransactions_ = other.checkTransactions_.Clone();
      tag_ = other.tag_;
      TriggerGiftId = other.triggerGiftId_ != null ? other.TriggerGiftId.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckOrderReq Clone() {
      return new CheckOrderReq(this);
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 1;
    private string orderId_ = "";
    /// <summary>
    ///[必填]订单ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderId {
      get { return orderId_; }
      set {
        orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 2;
    private string origin_ = "";
    /// <summary>
    ///[必填]目标渠道信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Origin {
      get { return origin_; }
      set {
        origin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 3;
    private string channel_ = "";
    /// <summary>
    ///[必填]原始渠道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::CommodityTypePB type_ = 0;
    /// <summary>
    ///[必填]充值类型，0 宝石 1月卡 ，2 礼包 3 福利
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CommodityTypePB Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "pay_type" field.</summary>
    public const int PayTypeFieldNumber = 5;
    private int payType_;
    /// <summary>
    ///[非必填]支付类型，支付宝 ，微信等等
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PayType {
      get { return payType_; }
      set {
        payType_ = value;
      }
    }

    /// <summary>Field number for the "sdkVersion" field.</summary>
    public const int SdkVersionFieldNumber = 6;
    private string sdkVersion_ = "";
    /// <summary>
    ///[必填]sdk版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SdkVersion {
      get { return sdkVersion_; }
      set {
        sdkVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 7;
    private string version_ = "";
    /// <summary>
    ///[必填]版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 8;
    private string params_ = "";
    /// <summary>
    ///[非必填]验单参数(可String【当只有一个参数的时候】,可JSON格式,bean由pay-bean提供)，eg:webTX（goodsmeta,goodsurl参数）,google(signData),apple(receiptData等)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Params {
      get { return params_; }
      set {
        params_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extInfo" field.</summary>
    public const int ExtInfoFieldNumber = 9;
    private string extInfo_ = "";
    /// <summary>
    ///[非必填]额外信息（当渠道为自营时，该字段可区分认为是混服Andoird或自营IOS）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExtInfo {
      get { return extInfo_; }
      set {
        extInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "environment" field.</summary>
    public const int EnvironmentFieldNumber = 10;
    private int environment_;
    /// <summary>
    ///[非必填]环境[0-沙箱，1-正式,此字段仅内网有效,线上默认1,若无沙盒默认线上]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Environment {
      get { return environment_; }
      set {
        environment_ = value;
      }
    }

    /// <summary>Field number for the "check_transactions" field.</summary>
    public const int CheckTransactionsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Com.Proto.CheckTransactionIdPB> _repeated_checkTransactions_codec
        = pb::FieldCodec.ForMessage(90, global::Com.Proto.CheckTransactionIdPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.CheckTransactionIdPB> checkTransactions_ = new pbc::RepeatedField<global::Com.Proto.CheckTransactionIdPB>();
    /// <summary>
    ///transactionIds信息 苹果支付参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.CheckTransactionIdPB> CheckTransactions {
      get { return checkTransactions_; }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 12;
    private string tag_ = "";
    /// <summary>
    ///标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger_gift_id" field.</summary>
    public const int TriggerGiftIdFieldNumber = 13;
    private global::Com.Proto.TriggerGiftIdPb triggerGiftId_;
    /// <summary>
    ///玩家触发礼包Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.TriggerGiftIdPb TriggerGiftId {
      get { return triggerGiftId_; }
      set {
        triggerGiftId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckOrderReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckOrderReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      if (Origin != other.Origin) return false;
      if (Channel != other.Channel) return false;
      if (Type != other.Type) return false;
      if (PayType != other.PayType) return false;
      if (SdkVersion != other.SdkVersion) return false;
      if (Version != other.Version) return false;
      if (Params != other.Params) return false;
      if (ExtInfo != other.ExtInfo) return false;
      if (Environment != other.Environment) return false;
      if(!checkTransactions_.Equals(other.checkTransactions_)) return false;
      if (Tag != other.Tag) return false;
      if (!object.Equals(TriggerGiftId, other.TriggerGiftId)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId.Length != 0) hash ^= OrderId.GetHashCode();
      if (Origin.Length != 0) hash ^= Origin.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (PayType != 0) hash ^= PayType.GetHashCode();
      if (SdkVersion.Length != 0) hash ^= SdkVersion.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Params.Length != 0) hash ^= Params.GetHashCode();
      if (ExtInfo.Length != 0) hash ^= ExtInfo.GetHashCode();
      if (Environment != 0) hash ^= Environment.GetHashCode();
      hash ^= checkTransactions_.GetHashCode();
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (triggerGiftId_ != null) hash ^= TriggerGiftId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderId);
      }
      if (Origin.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Origin);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Channel);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (PayType != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(PayType);
      }
      if (SdkVersion.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SdkVersion);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Version);
      }
      if (Params.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Params);
      }
      if (ExtInfo.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ExtInfo);
      }
      if (Environment != 0) {
        output.WriteRawTag(80);
        output.WriteSInt32(Environment);
      }
      checkTransactions_.WriteTo(output, _repeated_checkTransactions_codec);
      if (Tag.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Tag);
      }
      if (triggerGiftId_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(TriggerGiftId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
      }
      if (Origin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Origin);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (PayType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(PayType);
      }
      if (SdkVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SdkVersion);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Params.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Params);
      }
      if (ExtInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtInfo);
      }
      if (Environment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Environment);
      }
      size += checkTransactions_.CalculateSize(_repeated_checkTransactions_codec);
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (triggerGiftId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TriggerGiftId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckOrderReq other) {
      if (other == null) {
        return;
      }
      if (other.OrderId.Length != 0) {
        OrderId = other.OrderId;
      }
      if (other.Origin.Length != 0) {
        Origin = other.Origin;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.PayType != 0) {
        PayType = other.PayType;
      }
      if (other.SdkVersion.Length != 0) {
        SdkVersion = other.SdkVersion;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Params.Length != 0) {
        Params = other.Params;
      }
      if (other.ExtInfo.Length != 0) {
        ExtInfo = other.ExtInfo;
      }
      if (other.Environment != 0) {
        Environment = other.Environment;
      }
      checkTransactions_.Add(other.checkTransactions_);
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      if (other.triggerGiftId_ != null) {
        if (triggerGiftId_ == null) {
          triggerGiftId_ = new global::Com.Proto.TriggerGiftIdPb();
        }
        TriggerGiftId.MergeFrom(other.TriggerGiftId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            OrderId = input.ReadString();
            break;
          }
          case 18: {
            Origin = input.ReadString();
            break;
          }
          case 26: {
            Channel = input.ReadString();
            break;
          }
          case 32: {
            type_ = (global::CommodityTypePB) input.ReadEnum();
            break;
          }
          case 40: {
            PayType = input.ReadSInt32();
            break;
          }
          case 50: {
            SdkVersion = input.ReadString();
            break;
          }
          case 58: {
            Version = input.ReadString();
            break;
          }
          case 66: {
            Params = input.ReadString();
            break;
          }
          case 74: {
            ExtInfo = input.ReadString();
            break;
          }
          case 80: {
            Environment = input.ReadSInt32();
            break;
          }
          case 90: {
            checkTransactions_.AddEntriesFrom(input, _repeated_checkTransactions_codec);
            break;
          }
          case 98: {
            Tag = input.ReadString();
            break;
          }
          case 106: {
            if (triggerGiftId_ == null) {
              triggerGiftId_ = new global::Com.Proto.TriggerGiftIdPb();
            }
            input.ReadMessage(triggerGiftId_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 订单检查返回List&lt;Res>
  /// </summary>
  public sealed partial class CheckOrderRess : pb::IMessage<CheckOrderRess> {
    private static readonly pb::MessageParser<CheckOrderRess> _parser = new pb::MessageParser<CheckOrderRess>(() => new CheckOrderRess());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckOrderRess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerRechargeReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckOrderRess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckOrderRess(CheckOrderRess other) : this() {
      ret_ = other.ret_;
      checkOrderRess_ = other.checkOrderRess_.Clone();
      awards_ = other.awards_.Clone();
      firstRecharges_ = other.firstRecharges_.Clone();
      UserExtraInfo = other.userExtraInfo_ != null ? other.UserExtraInfo.Clone() : null;
      UserMonthCard = other.userMonthCard_ != null ? other.UserMonthCard.Clone() : null;
      transactionId_ = other.transactionId_.Clone();
      triggerId_ = other.triggerId_.Clone();
      userBuyRmbMall_ = other.userBuyRmbMall_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckOrderRess Clone() {
      return new CheckOrderRess(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    /// 状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "CheckOrderRess" field.</summary>
    public const int CheckOrderRess_FieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.CheckOrderRes> _repeated_checkOrderRess_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.CheckOrderRes.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.CheckOrderRes> checkOrderRess_ = new pbc::RepeatedField<global::Com.Proto.CheckOrderRes>();
    /// <summary>
    ///List&lt;CheckRes> 返回成功的订单
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.CheckOrderRes> CheckOrderRess_ {
      get { return checkOrderRess_; }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///返回总的奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "first_recharges" field.</summary>
    public const int FirstRechargesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.FirstRechargePB> _repeated_firstRecharges_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.FirstRechargePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.FirstRechargePB> firstRecharges_ = new pbc::RepeatedField<global::Com.Proto.FirstRechargePB>();
    /// <summary>
    ///首冲数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.FirstRechargePB> FirstRecharges {
      get { return firstRecharges_; }
    }

    /// <summary>Field number for the "user_extra_info" field.</summary>
    public const int UserExtraInfoFieldNumber = 5;
    private global::Com.Proto.UserExtraInfoPB userExtraInfo_;
    /// <summary>
    ///用户额外信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserExtraInfoPB UserExtraInfo {
      get { return userExtraInfo_; }
      set {
        userExtraInfo_ = value;
      }
    }

    /// <summary>Field number for the "user_month_card" field.</summary>
    public const int UserMonthCardFieldNumber = 6;
    private global::Com.Proto.UserMonthCardPB userMonthCard_;
    /// <summary>
    ///月卡信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMonthCardPB UserMonthCard {
      get { return userMonthCard_; }
      set {
        userMonthCard_ = value;
      }
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_transactionId_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> transactionId_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///苹果订单ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TransactionId {
      get { return transactionId_; }
    }

    /// <summary>Field number for the "trigger_id" field.</summary>
    public const int TriggerIdFieldNumber = 8;
    private static readonly pb::FieldCodec<long> _repeated_triggerId_codec
        = pb::FieldCodec.ForSInt64(66);
    private readonly pbc::RepeatedField<long> triggerId_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 触发礼包Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> TriggerId {
      get { return triggerId_; }
    }

    /// <summary>Field number for the "user_buy_rmb_mall" field.</summary>
    public const int UserBuyRmbMallFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Com.Proto.UserBuyRmbMallPB> _repeated_userBuyRmbMall_codec
        = pb::FieldCodec.ForMessage(74, global::Com.Proto.UserBuyRmbMallPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserBuyRmbMallPB> userBuyRmbMall_ = new pbc::RepeatedField<global::Com.Proto.UserBuyRmbMallPB>();
    /// <summary>
    /// 商品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserBuyRmbMallPB> UserBuyRmbMall {
      get { return userBuyRmbMall_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckOrderRess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckOrderRess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!checkOrderRess_.Equals(other.checkOrderRess_)) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if(!firstRecharges_.Equals(other.firstRecharges_)) return false;
      if (!object.Equals(UserExtraInfo, other.UserExtraInfo)) return false;
      if (!object.Equals(UserMonthCard, other.UserMonthCard)) return false;
      if(!transactionId_.Equals(other.transactionId_)) return false;
      if(!triggerId_.Equals(other.triggerId_)) return false;
      if(!userBuyRmbMall_.Equals(other.userBuyRmbMall_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= checkOrderRess_.GetHashCode();
      hash ^= awards_.GetHashCode();
      hash ^= firstRecharges_.GetHashCode();
      if (userExtraInfo_ != null) hash ^= UserExtraInfo.GetHashCode();
      if (userMonthCard_ != null) hash ^= UserMonthCard.GetHashCode();
      hash ^= transactionId_.GetHashCode();
      hash ^= triggerId_.GetHashCode();
      hash ^= userBuyRmbMall_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      checkOrderRess_.WriteTo(output, _repeated_checkOrderRess_codec);
      awards_.WriteTo(output, _repeated_awards_codec);
      firstRecharges_.WriteTo(output, _repeated_firstRecharges_codec);
      if (userExtraInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UserExtraInfo);
      }
      if (userMonthCard_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UserMonthCard);
      }
      transactionId_.WriteTo(output, _repeated_transactionId_codec);
      triggerId_.WriteTo(output, _repeated_triggerId_codec);
      userBuyRmbMall_.WriteTo(output, _repeated_userBuyRmbMall_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += checkOrderRess_.CalculateSize(_repeated_checkOrderRess_codec);
      size += awards_.CalculateSize(_repeated_awards_codec);
      size += firstRecharges_.CalculateSize(_repeated_firstRecharges_codec);
      if (userExtraInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserExtraInfo);
      }
      if (userMonthCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMonthCard);
      }
      size += transactionId_.CalculateSize(_repeated_transactionId_codec);
      size += triggerId_.CalculateSize(_repeated_triggerId_codec);
      size += userBuyRmbMall_.CalculateSize(_repeated_userBuyRmbMall_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckOrderRess other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      checkOrderRess_.Add(other.checkOrderRess_);
      awards_.Add(other.awards_);
      firstRecharges_.Add(other.firstRecharges_);
      if (other.userExtraInfo_ != null) {
        if (userExtraInfo_ == null) {
          userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
        }
        UserExtraInfo.MergeFrom(other.UserExtraInfo);
      }
      if (other.userMonthCard_ != null) {
        if (userMonthCard_ == null) {
          userMonthCard_ = new global::Com.Proto.UserMonthCardPB();
        }
        UserMonthCard.MergeFrom(other.UserMonthCard);
      }
      transactionId_.Add(other.transactionId_);
      triggerId_.Add(other.triggerId_);
      userBuyRmbMall_.Add(other.userBuyRmbMall_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            checkOrderRess_.AddEntriesFrom(input, _repeated_checkOrderRess_codec);
            break;
          }
          case 26: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 34: {
            firstRecharges_.AddEntriesFrom(input, _repeated_firstRecharges_codec);
            break;
          }
          case 42: {
            if (userExtraInfo_ == null) {
              userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
            }
            input.ReadMessage(userExtraInfo_);
            break;
          }
          case 50: {
            if (userMonthCard_ == null) {
              userMonthCard_ = new global::Com.Proto.UserMonthCardPB();
            }
            input.ReadMessage(userMonthCard_);
            break;
          }
          case 58: {
            transactionId_.AddEntriesFrom(input, _repeated_transactionId_codec);
            break;
          }
          case 66:
          case 64: {
            triggerId_.AddEntriesFrom(input, _repeated_triggerId_codec);
            break;
          }
          case 74: {
            userBuyRmbMall_.AddEntriesFrom(input, _repeated_userBuyRmbMall_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckOrderRes : pb::IMessage<CheckOrderRes> {
    private static readonly pb::MessageParser<CheckOrderRes> _parser = new pb::MessageParser<CheckOrderRes>(() => new CheckOrderRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckOrderRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerRechargeReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckOrderRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckOrderRes(CheckOrderRes other) : this() {
      ret_ = other.ret_;
      orderId_ = other.orderId_;
      status_ = other.status_;
      amount_ = other.amount_;
      extra_ = other.extra_;
      commodityId_ = other.commodityId_;
      transactionId_ = other.transactionId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckOrderRes Clone() {
      return new CheckOrderRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    /// 响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 2;
    private string orderId_ = "";
    /// <summary>
    /// 订单号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderId {
      get { return orderId_; }
      set {
        orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::OrderStatusPB status_ = 0;
    /// <summary>
    /// 订单状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::OrderStatusPB Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private double amount_;
    /// <summary>
    /// 订单金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "extra" field.</summary>
    public const int ExtraFieldNumber = 5;
    private string extra_ = "";
    /// <summary>
    ///额外信息（例如：谷歌退款订单检查返回JSON列表在此字段，pay-bean提供该类）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Extra {
      get { return extra_; }
      set {
        extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commodity_id" field.</summary>
    public const int CommodityIdFieldNumber = 6;
    private int commodityId_;
    /// <summary>
    ///商品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CommodityId {
      get { return commodityId_; }
      set {
        commodityId_ = value;
      }
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 7;
    private string transactionId_ = "";
    /// <summary>
    ///苹果订单支付ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckOrderRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckOrderRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (OrderId != other.OrderId) return false;
      if (Status != other.Status) return false;
      if (Amount != other.Amount) return false;
      if (Extra != other.Extra) return false;
      if (CommodityId != other.CommodityId) return false;
      if (TransactionId != other.TransactionId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (OrderId.Length != 0) hash ^= OrderId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Amount != 0D) hash ^= Amount.GetHashCode();
      if (Extra.Length != 0) hash ^= Extra.GetHashCode();
      if (CommodityId != 0) hash ^= CommodityId.GetHashCode();
      if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (OrderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OrderId);
      }
      if (Status != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (Amount != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Amount);
      }
      if (Extra.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Extra);
      }
      if (CommodityId != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(CommodityId);
      }
      if (TransactionId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TransactionId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (OrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Amount != 0D) {
        size += 1 + 8;
      }
      if (Extra.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Extra);
      }
      if (CommodityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CommodityId);
      }
      if (TransactionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckOrderRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.OrderId.Length != 0) {
        OrderId = other.OrderId;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Amount != 0D) {
        Amount = other.Amount;
      }
      if (other.Extra.Length != 0) {
        Extra = other.Extra;
      }
      if (other.CommodityId != 0) {
        CommodityId = other.CommodityId;
      }
      if (other.TransactionId.Length != 0) {
        TransactionId = other.TransactionId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            OrderId = input.ReadString();
            break;
          }
          case 24: {
            status_ = (global::OrderStatusPB) input.ReadEnum();
            break;
          }
          case 33: {
            Amount = input.ReadDouble();
            break;
          }
          case 42: {
            Extra = input.ReadString();
            break;
          }
          case 48: {
            CommodityId = input.ReadSInt32();
            break;
          }
          case 58: {
            TransactionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 订单检查Req
  /// </summary>
  public sealed partial class CheckReq : pb::IMessage<CheckReq> {
    private static readonly pb::MessageParser<CheckReq> _parser = new pb::MessageParser<CheckReq>(() => new CheckReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerRechargeReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckReq(CheckReq other) : this() {
      orderId_ = other.orderId_;
      payType_ = other.payType_;
      params_ = other.params_;
      extInfo_ = other.extInfo_;
      environment_ = other.environment_;
      sdkVersion_ = other.sdkVersion_;
      version_ = other.version_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckReq Clone() {
      return new CheckReq(this);
    }

    /// <summary>Field number for the "orderId" field.</summary>
    public const int OrderIdFieldNumber = 1;
    private string orderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderId {
      get { return orderId_; }
      set {
        orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payType" field.</summary>
    public const int PayTypeFieldNumber = 2;
    private int payType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PayType {
      get { return payType_; }
      set {
        payType_ = value;
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 3;
    private string params_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Params {
      get { return params_; }
      set {
        params_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extInfo" field.</summary>
    public const int ExtInfoFieldNumber = 4;
    private string extInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExtInfo {
      get { return extInfo_; }
      set {
        extInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "environment" field.</summary>
    public const int EnvironmentFieldNumber = 5;
    private int environment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Environment {
      get { return environment_; }
      set {
        environment_ = value;
      }
    }

    /// <summary>Field number for the "sdkVersion" field.</summary>
    public const int SdkVersionFieldNumber = 6;
    private string sdkVersion_ = "";
    /// <summary>
    ///sdk版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SdkVersion {
      get { return sdkVersion_; }
      set {
        sdkVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 7;
    private string version_ = "";
    /// <summary>
    ///版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      if (PayType != other.PayType) return false;
      if (Params != other.Params) return false;
      if (ExtInfo != other.ExtInfo) return false;
      if (Environment != other.Environment) return false;
      if (SdkVersion != other.SdkVersion) return false;
      if (Version != other.Version) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId.Length != 0) hash ^= OrderId.GetHashCode();
      if (PayType != 0) hash ^= PayType.GetHashCode();
      if (Params.Length != 0) hash ^= Params.GetHashCode();
      if (ExtInfo.Length != 0) hash ^= ExtInfo.GetHashCode();
      if (Environment != 0) hash ^= Environment.GetHashCode();
      if (SdkVersion.Length != 0) hash ^= SdkVersion.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderId);
      }
      if (PayType != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(PayType);
      }
      if (Params.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Params);
      }
      if (ExtInfo.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ExtInfo);
      }
      if (Environment != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(Environment);
      }
      if (SdkVersion.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SdkVersion);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Version);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
      }
      if (PayType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(PayType);
      }
      if (Params.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Params);
      }
      if (ExtInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtInfo);
      }
      if (Environment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Environment);
      }
      if (SdkVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SdkVersion);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckReq other) {
      if (other == null) {
        return;
      }
      if (other.OrderId.Length != 0) {
        OrderId = other.OrderId;
      }
      if (other.PayType != 0) {
        PayType = other.PayType;
      }
      if (other.Params.Length != 0) {
        Params = other.Params;
      }
      if (other.ExtInfo.Length != 0) {
        ExtInfo = other.ExtInfo;
      }
      if (other.Environment != 0) {
        Environment = other.Environment;
      }
      if (other.SdkVersion.Length != 0) {
        SdkVersion = other.SdkVersion;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            OrderId = input.ReadString();
            break;
          }
          case 16: {
            PayType = input.ReadSInt32();
            break;
          }
          case 26: {
            Params = input.ReadString();
            break;
          }
          case 34: {
            ExtInfo = input.ReadString();
            break;
          }
          case 40: {
            Environment = input.ReadSInt32();
            break;
          }
          case 50: {
            SdkVersion = input.ReadString();
            break;
          }
          case 58: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckTransactionIdPB : pb::IMessage<CheckTransactionIdPB> {
    private static readonly pb::MessageParser<CheckTransactionIdPB> _parser = new pb::MessageParser<CheckTransactionIdPB>(() => new CheckTransactionIdPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckTransactionIdPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerRechargeReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckTransactionIdPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckTransactionIdPB(CheckTransactionIdPB other) : this() {
      transactionId_ = other.transactionId_;
      productId_ = other.productId_;
      commodityId_ = other.commodityId_;
      type_ = other.type_;
      extra_ = other.extra_;
      payStatus_ = other.payStatus_;
      orderCreateTime_ = other.orderCreateTime_;
      TriggerGiftId = other.triggerGiftId_ != null ? other.TriggerGiftId.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckTransactionIdPB Clone() {
      return new CheckTransactionIdPB(this);
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private string transactionId_ = "";
    /// <summary>
    ///苹果订单ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 2;
    private string productId_ = "";
    /// <summary>
    ///付费点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductId {
      get { return productId_; }
      set {
        productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commodity_id" field.</summary>
    public const int CommodityIdFieldNumber = 3;
    private int commodityId_;
    /// <summary>
    ///商品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CommodityId {
      get { return commodityId_; }
      set {
        commodityId_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::CommodityTypePB type_ = 0;
    /// <summary>
    /// [必填] 0宝石， 1月卡 2 礼包 3 福利
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CommodityTypePB Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "extra" field.</summary>
    public const int ExtraFieldNumber = 5;
    private string extra_ = "";
    /// <summary>
    ///前段记录参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Extra {
      get { return extra_; }
      set {
        extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pay_status" field.</summary>
    public const int PayStatusFieldNumber = 6;
    private string payStatus_ = "";
    /// <summary>
    ///前端支付状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayStatus {
      get { return payStatus_; }
      set {
        payStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_create_time" field.</summary>
    public const int OrderCreateTimeFieldNumber = 7;
    private long orderCreateTime_;
    /// <summary>
    ///订单创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderCreateTime {
      get { return orderCreateTime_; }
      set {
        orderCreateTime_ = value;
      }
    }

    /// <summary>Field number for the "trigger_gift_id" field.</summary>
    public const int TriggerGiftIdFieldNumber = 8;
    private global::Com.Proto.TriggerGiftIdPb triggerGiftId_;
    /// <summary>
    ///玩家触发礼包Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.TriggerGiftIdPb TriggerGiftId {
      get { return triggerGiftId_; }
      set {
        triggerGiftId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckTransactionIdPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckTransactionIdPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      if (ProductId != other.ProductId) return false;
      if (CommodityId != other.CommodityId) return false;
      if (Type != other.Type) return false;
      if (Extra != other.Extra) return false;
      if (PayStatus != other.PayStatus) return false;
      if (OrderCreateTime != other.OrderCreateTime) return false;
      if (!object.Equals(TriggerGiftId, other.TriggerGiftId)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
      if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
      if (CommodityId != 0) hash ^= CommodityId.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Extra.Length != 0) hash ^= Extra.GetHashCode();
      if (PayStatus.Length != 0) hash ^= PayStatus.GetHashCode();
      if (OrderCreateTime != 0L) hash ^= OrderCreateTime.GetHashCode();
      if (triggerGiftId_ != null) hash ^= TriggerGiftId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TransactionId);
      }
      if (ProductId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProductId);
      }
      if (CommodityId != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(CommodityId);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (Extra.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Extra);
      }
      if (PayStatus.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PayStatus);
      }
      if (OrderCreateTime != 0L) {
        output.WriteRawTag(56);
        output.WriteSInt64(OrderCreateTime);
      }
      if (triggerGiftId_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(TriggerGiftId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (ProductId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
      }
      if (CommodityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CommodityId);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Extra.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Extra);
      }
      if (PayStatus.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayStatus);
      }
      if (OrderCreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(OrderCreateTime);
      }
      if (triggerGiftId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TriggerGiftId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckTransactionIdPB other) {
      if (other == null) {
        return;
      }
      if (other.TransactionId.Length != 0) {
        TransactionId = other.TransactionId;
      }
      if (other.ProductId.Length != 0) {
        ProductId = other.ProductId;
      }
      if (other.CommodityId != 0) {
        CommodityId = other.CommodityId;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Extra.Length != 0) {
        Extra = other.Extra;
      }
      if (other.PayStatus.Length != 0) {
        PayStatus = other.PayStatus;
      }
      if (other.OrderCreateTime != 0L) {
        OrderCreateTime = other.OrderCreateTime;
      }
      if (other.triggerGiftId_ != null) {
        if (triggerGiftId_ == null) {
          triggerGiftId_ = new global::Com.Proto.TriggerGiftIdPb();
        }
        TriggerGiftId.MergeFrom(other.TriggerGiftId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            TransactionId = input.ReadString();
            break;
          }
          case 18: {
            ProductId = input.ReadString();
            break;
          }
          case 24: {
            CommodityId = input.ReadSInt32();
            break;
          }
          case 32: {
            type_ = (global::CommodityTypePB) input.ReadEnum();
            break;
          }
          case 42: {
            Extra = input.ReadString();
            break;
          }
          case 50: {
            PayStatus = input.ReadString();
            break;
          }
          case 56: {
            OrderCreateTime = input.ReadSInt64();
            break;
          }
          case 66: {
            if (triggerGiftId_ == null) {
              triggerGiftId_ = new global::Com.Proto.TriggerGiftIdPb();
            }
            input.ReadMessage(triggerGiftId_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TriggerGiftIdPb : pb::IMessage<TriggerGiftIdPb> {
    private static readonly pb::MessageParser<TriggerGiftIdPb> _parser = new pb::MessageParser<TriggerGiftIdPb>(() => new TriggerGiftIdPb());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TriggerGiftIdPb> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerRechargeReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerGiftIdPb() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerGiftIdPb(TriggerGiftIdPb other) : this() {
      id_ = other.id_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerGiftIdPb Clone() {
      return new TriggerGiftIdPb(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    /// <summary>
    ///玩家个人触发礼包ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TriggerGiftIdPb);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TriggerGiftIdPb other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Id);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TriggerGiftIdPb other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 腾讯应用宝余额查询
  /// </summary>
  public sealed partial class TxBalanceReq : pb::IMessage<TxBalanceReq> {
    private static readonly pb::MessageParser<TxBalanceReq> _parser = new pb::MessageParser<TxBalanceReq>(() => new TxBalanceReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TxBalanceReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerRechargeReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxBalanceReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxBalanceReq(TxBalanceReq other) : this() {
      gameId_ = other.gameId_;
      sdkVersion_ = other.sdkVersion_;
      version_ = other.version_;
      params_ = other.params_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxBalanceReq Clone() {
      return new TxBalanceReq(this);
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 1;
    private int gameId_;
    /// <summary>
    ///游戏ID[必传]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameId {
      get { return gameId_; }
      set {
        gameId_ = value;
      }
    }

    /// <summary>Field number for the "sdkVersion" field.</summary>
    public const int SdkVersionFieldNumber = 2;
    private string sdkVersion_ = "";
    /// <summary>
    ///sdk版本[必传,前端]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SdkVersion {
      get { return sdkVersion_; }
      set {
        sdkVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private string version_ = "";
    /// <summary>
    ///版本[必传,前端]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 4;
    private string params_ = "";
    /// <summary>
    ///获取余额参数JSON字符串[必传]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Params {
      get { return params_; }
      set {
        params_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TxBalanceReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TxBalanceReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (SdkVersion != other.SdkVersion) return false;
      if (Version != other.Version) return false;
      if (Params != other.Params) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameId != 0) hash ^= GameId.GetHashCode();
      if (SdkVersion.Length != 0) hash ^= SdkVersion.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Params.Length != 0) hash ^= Params.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(GameId);
      }
      if (SdkVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SdkVersion);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Version);
      }
      if (Params.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Params);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(GameId);
      }
      if (SdkVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SdkVersion);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Params.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Params);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TxBalanceReq other) {
      if (other == null) {
        return;
      }
      if (other.GameId != 0) {
        GameId = other.GameId;
      }
      if (other.SdkVersion.Length != 0) {
        SdkVersion = other.SdkVersion;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Params.Length != 0) {
        Params = other.Params;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            GameId = input.ReadSInt32();
            break;
          }
          case 18: {
            SdkVersion = input.ReadString();
            break;
          }
          case 26: {
            Version = input.ReadString();
            break;
          }
          case 34: {
            Params = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 腾讯应用宝余额查询
  /// </summary>
  public sealed partial class TxBalanceRes : pb::IMessage<TxBalanceRes> {
    private static readonly pb::MessageParser<TxBalanceRes> _parser = new pb::MessageParser<TxBalanceRes>(() => new TxBalanceRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TxBalanceRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerRechargeReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxBalanceRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxBalanceRes(TxBalanceRes other) : this() {
      ret_ = other.ret_;
      balance_ = other.balance_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxBalanceRes Clone() {
      return new TxBalanceRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    /// 状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 2;
    private double balance_;
    /// <summary>
    /// 余额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TxBalanceRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TxBalanceRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (Balance != other.Balance) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (Balance != 0D) hash ^= Balance.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (Balance != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Balance);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (Balance != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TxBalanceRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.Balance != 0D) {
        Balance = other.Balance;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 17: {
            Balance = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
