// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_user_micro_blog.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_user_micro_blog.proto</summary>
  public static partial class BeanUserMicroBlogReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_user_micro_blog.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanUserMicroBlogReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpiZWFuX3VzZXJfbWljcm9fYmxvZy5wcm90bxIJY29tLnByb3RvGgpiYXNl",
            "LnByb3RvIqkBCg9Vc2VyTWljcm9CbG9nUEISDwoHdXNlcl9pZBgBIAEoERIQ",
            "CghzY2VuZV9pZBgCIAEoERIMCgRsaWtlGAMgASgREhEKCXB1Yl9zdGF0ZRgE",
            "IAEoERIUCgxzZWxlY3Rfc3RhdGUYBSABKBESFAoMc2VsZWN0X2luZGV4GAYg",
            "ASgREhMKC2NyZWF0ZV90aW1lGAcgASgSEhEKCXRpcF9zdGF0ZRgIIAEoEUI2",
            "Ch9uZXQuZ2FsYXNwb3J0cy5iaWdzdGFyLnByb3RvY29sQhNVc2VyTWljcm9C",
            "bG9nUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserMicroBlogPB), global::Com.Proto.UserMicroBlogPB.Parser, new[]{ "UserId", "SceneId", "Like", "PubState", "SelectState", "SelectIndex", "CreateTime", "TipState" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///UserMicroBlogPB UserMicroBlog
  /// </summary>
  public sealed partial class UserMicroBlogPB : pb::IMessage<UserMicroBlogPB> {
    private static readonly pb::MessageParser<UserMicroBlogPB> _parser = new pb::MessageParser<UserMicroBlogPB>(() => new UserMicroBlogPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMicroBlogPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanUserMicroBlogReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMicroBlogPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMicroBlogPB(UserMicroBlogPB other) : this() {
      userId_ = other.userId_;
      sceneId_ = other.sceneId_;
      like_ = other.like_;
      pubState_ = other.pubState_;
      selectState_ = other.selectState_;
      selectIndex_ = other.selectIndex_;
      createTime_ = other.createTime_;
      tipState_ = other.tipState_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMicroBlogPB Clone() {
      return new UserMicroBlogPB(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 2;
    private int sceneId_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    /// <summary>Field number for the "like" field.</summary>
    public const int LikeFieldNumber = 3;
    private int like_;
    /// <summary>
    ///是否点赞过
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Like {
      get { return like_; }
      set {
        like_ = value;
      }
    }

    /// <summary>Field number for the "pub_state" field.</summary>
    public const int PubStateFieldNumber = 4;
    private int pubState_;
    /// <summary>
    ///0未发布1已发布
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PubState {
      get { return pubState_; }
      set {
        pubState_ = value;
      }
    }

    /// <summary>Field number for the "select_state" field.</summary>
    public const int SelectStateFieldNumber = 5;
    private int selectState_;
    /// <summary>
    ///0未评论1已评论
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SelectState {
      get { return selectState_; }
      set {
        selectState_ = value;
      }
    }

    /// <summary>Field number for the "select_index" field.</summary>
    public const int SelectIndexFieldNumber = 6;
    private int selectIndex_;
    /// <summary>
    ///评论选择的索引(按配置来)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SelectIndex {
      get { return selectIndex_; }
      set {
        selectIndex_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 7;
    private long createTime_;
    /// <summary>
    ///触发时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "tip_state" field.</summary>
    public const int TipStateFieldNumber = 8;
    private int tipState_;
    /// <summary>
    ///0新触发未弹窗1已经弹窗过
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TipState {
      get { return tipState_; }
      set {
        tipState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMicroBlogPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMicroBlogPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (SceneId != other.SceneId) return false;
      if (Like != other.Like) return false;
      if (PubState != other.PubState) return false;
      if (SelectState != other.SelectState) return false;
      if (SelectIndex != other.SelectIndex) return false;
      if (CreateTime != other.CreateTime) return false;
      if (TipState != other.TipState) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      if (Like != 0) hash ^= Like.GetHashCode();
      if (PubState != 0) hash ^= PubState.GetHashCode();
      if (SelectState != 0) hash ^= SelectState.GetHashCode();
      if (SelectIndex != 0) hash ^= SelectIndex.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (TipState != 0) hash ^= TipState.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(UserId);
      }
      if (SceneId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(SceneId);
      }
      if (Like != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Like);
      }
      if (PubState != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(PubState);
      }
      if (SelectState != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(SelectState);
      }
      if (SelectIndex != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(SelectIndex);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(56);
        output.WriteSInt64(CreateTime);
      }
      if (TipState != 0) {
        output.WriteRawTag(64);
        output.WriteSInt32(TipState);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SceneId);
      }
      if (Like != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Like);
      }
      if (PubState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(PubState);
      }
      if (SelectState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SelectState);
      }
      if (SelectIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SelectIndex);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CreateTime);
      }
      if (TipState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(TipState);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMicroBlogPB other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
      if (other.Like != 0) {
        Like = other.Like;
      }
      if (other.PubState != 0) {
        PubState = other.PubState;
      }
      if (other.SelectState != 0) {
        SelectState = other.SelectState;
      }
      if (other.SelectIndex != 0) {
        SelectIndex = other.SelectIndex;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.TipState != 0) {
        TipState = other.TipState;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadSInt32();
            break;
          }
          case 16: {
            SceneId = input.ReadSInt32();
            break;
          }
          case 24: {
            Like = input.ReadSInt32();
            break;
          }
          case 32: {
            PubState = input.ReadSInt32();
            break;
          }
          case 40: {
            SelectState = input.ReadSInt32();
            break;
          }
          case 48: {
            SelectIndex = input.ReadSInt32();
            break;
          }
          case 56: {
            CreateTime = input.ReadSInt64();
            break;
          }
          case 64: {
            TipState = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
