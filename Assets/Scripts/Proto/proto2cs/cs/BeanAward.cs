// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_award.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_award.proto</summary>
  public static partial class BeanAwardReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_award.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanAwardReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBiZWFuX2F3YXJkLnByb3RvEgljb20ucHJvdG8aCmJhc2UucHJvdG8iSQoH",
            "QXdhcmRQQhIdCghyZXNvdXJjZRgBIAEoDjILLlJlc291cmNlUEISEgoKcmVz",
            "b3VyY2VJZBgCIAEoERILCgNudW0YBCABKBFCLgofbmV0LmdhbGFzcG9ydHMu",
            "Ymlnc3Rhci5wcm90b2NvbEILQXdhcmRQcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.AwardPB), global::Com.Proto.AwardPB.Parser, new[]{ "Resource", "ResourceId", "Num" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///AwardPB Award
  /// </summary>
  public sealed partial class AwardPB : pb::IMessage<AwardPB> {
    private static readonly pb::MessageParser<AwardPB> _parser = new pb::MessageParser<AwardPB>(() => new AwardPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AwardPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanAwardReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardPB(AwardPB other) : this() {
      resource_ = other.resource_;
      resourceId_ = other.resourceId_;
      num_ = other.num_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardPB Clone() {
      return new AwardPB(this);
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 1;
    private global::ResourcePB resource_ = 0;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ResourcePB Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "resourceId" field.</summary>
    public const int ResourceIdFieldNumber = 2;
    private int resourceId_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResourceId {
      get { return resourceId_; }
      set {
        resourceId_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 4;
    private int num_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AwardPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AwardPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Resource != other.Resource) return false;
      if (ResourceId != other.ResourceId) return false;
      if (Num != other.Num) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Resource != 0) hash ^= Resource.GetHashCode();
      if (ResourceId != 0) hash ^= ResourceId.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Resource != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Resource);
      }
      if (ResourceId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(ResourceId);
      }
      if (Num != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(Num);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Resource != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Resource);
      }
      if (ResourceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ResourceId);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Num);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AwardPB other) {
      if (other == null) {
        return;
      }
      if (other.Resource != 0) {
        Resource = other.Resource;
      }
      if (other.ResourceId != 0) {
        ResourceId = other.ResourceId;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            resource_ = (global::ResourcePB) input.ReadEnum();
            break;
          }
          case 16: {
            ResourceId = input.ReadSInt32();
            break;
          }
          case 32: {
            Num = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
