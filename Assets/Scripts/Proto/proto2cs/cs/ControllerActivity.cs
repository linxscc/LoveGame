// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller_activity.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from controller_activity.proto</summary>
  public static partial class ControllerActivityReflection {

    #region Descriptor
    /// <summary>File descriptor for controller_activity.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControllerActivityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chljb250cm9sbGVyX2FjdGl2aXR5LnByb3RvEgljb20ucHJvdG8aCmJhc2Uu",
            "cHJvdG8aE2JlYW5fYWN0aXZpdHkucHJvdG8aEGJlYW5fYXdhcmQucHJvdG8a",
            "F2JlYW5fdXNlcl9zaWduX2luLnByb3RvGiViZWFuX3VzZXJfc2V2ZW5fZGF5",
            "X3NpZ25pbl9pbmZvLnByb3RvGidiZWFuX2FjdGl2aXR5X29wdGlvbmFsX2F3",
            "YXJkX3J1bGUucHJvdG8aHWJlYW5fYWN0aXZpdHlfcG93ZXJfZ2V0LnByb3Rv",
            "GhViZWFuX3VzZXJfbW9uZXkucHJvdG8aGmJlYW5fbW9udGhfc2lnbl9ydWxl",
            "LnByb3RvGhpiZWFuX3VzZXJfbW9udGhfc2lnbi5wcm90bxoaYmVhbl91c2Vy",
            "X2V4dHJhX2luZm8ucHJvdG8aFmJlYW5fZ3Jvd3RoX2Z1bmQucHJvdG8aG2Jl",
            "YW5fdXNlcl9ncm93dGhfZnVuZC5wcm90bxoxYmVhbl91c2VyX2FjdGl2aXR5",
            "X21vbnRoX2NhcmRfcmVjaGFyZ2VfaW5mby5wcm90bxojYmVhbl91c2VyX2Fj",
            "dGl2aXR5X2V4dHJhX2luZm8ucHJvdG8aIGJlYW5fYWN0aXZpdHlfaG9saWRh",
            "eV9ydWxlLnByb3RvGiViZWFuX3VzZXJfYWN0aXZpdHlfaG9saWRheV9pbmZv",
            "LnByb3RvGhRiZWFuX3VzZXJfaXRlbS5wcm90bxouYmVhbl9hY3Rpdml0eV9h",
            "Y2N1bXVsYXRpdmVfcmVjaGFyZ2VfcnVsZS5wcm90bxozYmVhbl91c2VyX2Fj",
            "dGl2aXR5X2FjY3VtdWxhdGl2ZV9yZWNoYXJnZV9pbmZvLnByb3RvGiBiZWFu",
            "X3VzZXJfYWN0aXZpdHlfbWlzc2lvbi5wcm90bxohYmVhbl91c2VyX2J1eV9h",
            "Y3Rpdml0eV9tYWxsLnByb3RvGh5iZWFuX2FjdGl2aXR5X211c2ljX3Bvb2wu",
            "cHJvdG8aI2JlYW5fdXNlcl9hY3Rpdml0eV9tdXNpY19pbmZvLnByb3RvIsgG",
            "Cg9BY3Rpdml0eVJ1bGVSZXMSCwoDcmV0GAEgASgREk0KHWFjdGl2aXR5X29w",
            "dGlvbmFsX2F3YXJkX3J1bGVzGAIgAygLMiYuY29tLnByb3RvLkFjdGl2aXR5",
            "T3B0aW9uYWxBd2FyZFJ1bGVQQhJDChhhY3Rpdml0eV9wb3dlcl9nZXRfcnVs",
            "ZXMYAyADKAsyIS5jb20ucHJvdG8uQWN0aXZpdHlQb3dlckdldFJ1bGVQQhI0",
            "ChBtb250aF9zaWduX3J1bGVzGAQgAygLMhouY29tLnByb3RvLk1vbnRoU2ln",
            "blJ1bGVQQhI7ChRtb250aF9zaWduX2J1eV9ydWxlcxgFIAMoCzIdLmNvbS5w",
            "cm90by5Nb250aFNpZ25CdXlSdWxlUEISPwoWbW9udGhfc2lnbl9leHRyYV9y",
            "dWxlcxgGIAMoCzIfLmNvbS5wcm90by5Nb250aFNpZ25FeHRyYVJ1bGVQQhI2",
            "ChFncm93dGhfZnVuZF9ydWxlcxgHIAMoCzIbLmNvbS5wcm90by5Hcm93dGhG",
            "dW5kUnVsZVBCEjoKE2FjdGl2aXR5X2RyYXdfcnVsZXMYCCADKAsyHS5jb20u",
            "cHJvdG8uQWN0aXZpdHlEcmF3UnVsZVBCEkkKGmFjdGl2aXR5X2hvbGlkYXlf",
            "YXdhcmRSdWxlGAkgAygLMiUuY29tLnByb3RvLkFjdGl2aXR5SG9saWRheUF3",
            "YXJkUnVsZVBCEkEKFGFjdGl2ZV9ob2xpZGF5X2F3YXJkGAogAygLMiMuY29t",
            "LnByb3RvLkFjdGl2ZUhvbGlkYXlBd2FyZFJ1bGVQQhJDChhob2xpZGF5X2F3",
            "YXJkX3Bvb2xfcnVsZXMYCyADKAsyIS5jb20ucHJvdG8uSG9saWRheUF3YXJk",
            "UG9vbFJ1bGVQQhJbCiRhY3Rpdml0eV9hY2N1bXVsYXRpdmVfcmVjaGFyZ2Vf",
            "cnVsZXMYDCADKAsyLS5jb20ucHJvdG8uQWN0aXZpdHlBY2N1bXVsYXRpdmVS",
            "ZWNoYXJnZVJ1bGVQQhI8ChRhY3Rpdml0eV9tdXNpY19wb29scxgNIAMoCzIe",
            "LmNvbS5wcm90by5BY3Rpdml0eU11c2ljUG9vbFBCIswECgtBY3Rpdml0eVJl",
            "cxILCgNyZXQYASABKBESKAoJYWN0aXZpdHlzGAIgAygLMhUuY29tLnByb3Rv",
            "LkFjdGl2aXR5UEISKwoKdXNlcl9zaWdpbhgDIAEoCzIXLmNvbS5wcm90by5V",
            "c2VyU2lnbkluUEISSAobdXNlcl9zZXZlbl9kYXlfc2lnbmluX2luZm9zGAQg",
            "AygLMiMuY29tLnByb3RvLlVzZXJTZXZlbkRheVNpZ25pbkluZm9QQhIYChBw",
            "b3dlcl9nb3R0ZW5faWRzGAUgAygREjMKD3VzZXJfbW9udGhfc2lnbhgGIAEo",
            "CzIaLmNvbS5wcm90by5Vc2VyTW9udGhTaWduUEISNQoQdXNlcl9ncm93dGhf",
            "ZnVuZBgHIAEoCzIbLmNvbS5wcm90by5Vc2VyR3Jvd3RoRnVuZFBCEl4KJnVz",
            "ZXJfYWN0aXZpdHlfbW9udGhfY2FyZF9yZWNoYXJnZV9pbmZvGAggAygLMi4u",
            "Y29tLnByb3RvLlVzZXJBY3Rpdml0eU1vbnRoQ2FyZFJlY2hhcmdlSW5mb1BC",
            "EkQKGHVzZXJfYWN0aXZpdHlfZXh0cmFfaW5mbxgJIAEoCzIiLmNvbS5wcm90",
            "by5Vc2VyQWN0aXZpdHlFeHRyYUluZm9QQhJjCih1c2VyX2FjdGl2aXR5X2Fj",
            "Y3VtdWxhdGl2ZV9yZWNoYXJnZV9pbmZvGAogAygLMjEuY29tLnByb3RvLlVz",
            "ZXJBY3Rpdml0eUFjY3VtdWxhdGl2ZVJlY2hhcmdlSW5mb1BCImoKFEFjdGl2",
            "aXR5TXVzaWNJbmZvUmVzEgsKA3JldBgBIAEoERJFChl1c2VyX2FjdGl2aXR5",
            "X211c2ljX2luZm9zGAIgAygLMiIuY29tLnByb3RvLlVzZXJBY3Rpdml0eU11",
            "c2ljSW5mb1BCInoKGUNoYWxsZW5nZUFjdGl2aXR5TXVzaWNSZXESEwoLYWN0",
            "aXZpdHlfaWQYASABKBESEAoIbXVzaWNfaWQYAiABKBESJwoJZGlmZl90eXBl",
            "GAMgASgOMhQuTXVzaWNHYW1lRGlmZlR5cGVQQhINCgVzY29yZRgEIAEoESJu",
            "ChlDaGFsbGVuZ2VBY3Rpdml0eU11c2ljUmVzEgsKA3JldBgBIAEoERJEChh1",
            "c2VyX2FjdGl2aXR5X211c2ljX2luZm8YAiABKAsyIi5jb20ucHJvdG8uVXNl",
            "ckFjdGl2aXR5TXVzaWNJbmZvUEIiIAoJU2lnbkluUmVxEhMKC2FjdGl2aXR5",
            "X2lkGAEgASgRImkKCVNpZ25JblJlcxILCgNyZXQYASABKBESIgoGYXdhcmRz",
            "GAIgAygLMhIuY29tLnByb3RvLkF3YXJkUEISKwoKdXNlcl9zaWdpbhgDIAEo",
            "CzIXLmNvbS5wcm90by5Vc2VyU2lnbkluUEIiVgoUR2FpblNldmVuRGF5QXdh",
            "cmRSZXESEwoLYWN0aXZpdHlfaWQYASABKBESHQoIcmVzb3VyY2UYAiABKA4y",
            "Cy5SZXNvdXJjZVBCEgoKAmlkGAMgASgRIpABChRHYWluU2V2ZW5EYXlBd2Fy",
            "ZFJlcxILCgNyZXQYASABKBESIgoGYXdhcmRzGAIgAygLMhIuY29tLnByb3Rv",
            "LkF3YXJkUEISRwoadXNlcl9zZXZlbl9kYXlfc2lnbmluX2luZG8YAyABKAsy",
            "Iy5jb20ucHJvdG8uVXNlclNldmVuRGF5U2lnbmluSW5mb1BCIh8KEVBvd2Vy",
            "R2V0UmV3YXJkUmVxEgoKAmlkGAEgASgRIlgKEVBvd2VyR2V0UmV3YXJkUmVz",
            "EgsKA3JldBgBIAEoERIiCgZhd2FyZHMYAiADKAsyEi5jb20ucHJvdG8uQXdh",
            "cmRQQhISCgpnb3R0ZW5faWRzGAMgAygRIhwKDlBvd2VyQnV5R2V0UmVxEgoK",
            "AmlkGAEgASgRIoEBCg5Qb3dlckJ1eUdldFJlcxILCgNyZXQYASABKBESIgoG",
            "YXdhcmRzGAIgAygLMhIuY29tLnByb3RvLkF3YXJkUEISEgoKZ290dGVuX2lk",
            "cxgDIAMoERIqCgp1c2VyX21vbmV5GAQgASgLMhYuY29tLnByb3RvLlVzZXJN",
            "b25leVBCInoKEk1vbnRoU2lnblJld2FyZFJlcxILCgNyZXQYASABKBESIgoG",
            "YXdhcmRzGAIgAygLMhIuY29tLnByb3RvLkF3YXJkUEISMwoPdXNlcl9tb250",
            "aF9zaWduGAMgASgLMhouY29tLnByb3RvLlVzZXJNb250aFNpZ25QQiIfCg9N",
            "b250aFNpZ25CdXlSZXESDAoEZGF0ZRgBIAEoESKjAQoPTW9udGhTaWduQnV5",
            "UmVzEgsKA3JldBgBIAEoERIiCgZhd2FyZHMYAiADKAsyEi5jb20ucHJvdG8u",
            "QXdhcmRQQhIzCg91c2VyX21vbnRoX3NpZ24YAyABKAsyGi5jb20ucHJvdG8u",
            "VXNlck1vbnRoU2lnblBCEioKCnVzZXJfbW9uZXkYBCABKAsyFi5jb20ucHJv",
            "dG8uVXNlck1vbmV5UEIieQoRTW9udGhTaWduRXh0cmFSZXMSCwoDcmV0GAEg",
            "ASgREiIKBmF3YXJkcxgCIAMoCzISLmNvbS5wcm90by5Bd2FyZFBCEjMKD3Vz",
            "ZXJfbW9udGhfc2lnbhgDIAEoCzIaLmNvbS5wcm90by5Vc2VyTW9udGhTaWdu",
            "UEIiJQoUUmVjZWl2ZUZpcnN0UHJpemVSZXESDQoFZ3JvdXAYASABKBEifAoU",
            "UmVjZWl2ZUZpcnN0UHJpemVSZXMSCwoDcmV0GAEgASgREiIKBmF3YXJkcxgC",
            "IAMoCzISLmNvbS5wcm90by5Bd2FyZFBCEjMKD3VzZXJfZXh0cmFfaW5mbxgD",
            "IAEoCzIaLmNvbS5wcm90by5Vc2VyRXh0cmFJbmZvUEIiIAoSR3Jvd3RoRnVu",
            "ZEF3YXJkUmVxEgoKAmlkGAEgASgRInwKEkdyb3d0aEZ1bmRBd2FyZFJlcxIL",
            "CgNyZXQYASABKBESIgoGYXdhcmRzGAIgAygLMhIuY29tLnByb3RvLkF3YXJk",
            "UEISNQoQdXNlcl9ncm93dGhfZnVuZBgDIAEoCzIbLmNvbS5wcm90by5Vc2Vy",
            "R3Jvd3RoRnVuZFBCIoABChhSZWNlaXZlRG93bmxvYWRBd2FyZHNSZXMSCwoD",
            "cmV0GAEgASgREiIKBmF3YXJkcxgCIAMoCzISLmNvbS5wcm90by5Bd2FyZFBC",
            "EjMKD3VzZXJfZXh0cmFfaW5mbxgDIAEoCzIaLmNvbS5wcm90by5Vc2VyRXh0",
            "cmFJbmZvUEIiUwoYUmVjZWl2ZUFjdGl2aXR5QXdhcmRzUmVxEjcKFm9wdGlv",
            "bmFsX2FjdGl2aXR5X3R5cGUYASABKA4yFy5PcHRpb25hbEFjdGl2aXR5VHlw",
            "ZVBCIpEBChhSZWNlaXZlQWN0aXZpdHlBd2FyZHNSZXMSCwoDcmV0GAEgASgR",
            "EiIKBmF3YXJkcxgCIAMoCzISLmNvbS5wcm90by5Bd2FyZFBCEkQKGHVzZXJf",
            "YWN0aXZpdHlfZXh0cmFfaW5mbxgDIAEoCzIiLmNvbS5wcm90by5Vc2VyQWN0",
            "aXZpdHlFeHRyYUluZm9QQiI0Ch1HZXRVc2VyQWN0aXZpdHlIb2xpZGF5SW5m",
            "b1JlcRITCgthY3Rpdml0eV9pZBgBIAEoESKfAQodR2V0VXNlckFjdGl2aXR5",
            "SG9saWRheUluZm9SZXMSCwoDcmV0GAEgASgREkcKGXVzZXJBY3Rpdml0eUhv",
            "bGlkYXlJbmZvUEIYAiABKAsyJC5jb20ucHJvdG8uVXNlckFjdGl2aXR5SG9s",
            "aWRheUluZm9QQhIoCgl1c2VyX2l0ZW0YAyABKAsyFS5jb20ucHJvdG8uVXNl",
            "ckl0ZW1QQiJGChFEcmF3aW5nUmV3YXJkc1JlcRIMCgR0eXBlGAEgASgREhMK",
            "C2FjdGl2aXR5X2lkGAIgASgREg4KBnBsYXllchgDIAEoESK3AQoRRHJhd2lu",
            "Z1Jld2FyZHNSZXMSCwoDcmV0GAEgASgREiIKBmF3YXJkcxgCIAMoCzISLmNv",
            "bS5wcm90by5Bd2FyZFBCEkcKGXVzZXJBY3Rpdml0eUhvbGlkYXlJbmZvUEIY",
            "AyABKAsyJC5jb20ucHJvdG8uVXNlckFjdGl2aXR5SG9saWRheUluZm9QQhIo",
            "Cgl1c2VyX2l0ZW0YBCABKAsyFS5jb20ucHJvdG8uVXNlckl0ZW1QQiJAChlH",
            "YWluQWN0aXZlSG9saWRheUF3YXJkUmVxEg4KBndlaWdodBgBIAEoERITCgth",
            "Y3Rpdml0eV9pZBgCIAEoESKVAQoZR2FpbkFjdGl2ZUhvbGlkYXlBd2FyZFJl",
            "cxILCgNyZXQYASABKBESIgoGYXdhcmRzGAIgAygLMhIuY29tLnByb3RvLkF3",
            "YXJkUEISRwoZdXNlckFjdGl2aXR5SG9saWRheUluZm9QQhgDIAEoCzIkLmNv",
            "bS5wcm90by5Vc2VyQWN0aXZpdHlIb2xpZGF5SW5mb1BCIk4KK1JlY2VpdmVB",
            "Y3Rpdml0eUFjY3VtdWxhdGl2ZVJlY2hhcmdlQXdhcmRSZXESCgoCaWQYASAB",
            "KBESEwoLYWN0aXZpdHlfaWQYAiABKBEiwwEKK1JlY2VpdmVBY3Rpdml0eUFj",
            "Y3VtdWxhdGl2ZVJlY2hhcmdlQXdhcmRSZXMSCwoDcmV0GAEgASgREiIKBmF3",
            "YXJkcxgCIAMoCzISLmNvbS5wcm90by5Bd2FyZFBCEmMKKHVzZXJfYWN0aXZp",
            "dHlfYWNjdW11bGF0aXZlX3JlY2hhcmdlX2luZm8YAyABKAsyMS5jb20ucHJv",
            "dG8uVXNlckFjdGl2aXR5QWNjdW11bGF0aXZlUmVjaGFyZ2VJbmZvUEJCOwof",
            "bmV0LmdhbGFzcG9ydHMuYmlnc3Rhci5wcm90b2NvbEIYQWN0aXZpdHlDb250",
            "cm9sbGVyUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanActivityReflection.Descriptor, global::Com.Proto.BeanAwardReflection.Descriptor, global::Com.Proto.BeanUserSignInReflection.Descriptor, global::Com.Proto.BeanUserSevenDaySigninInfoReflection.Descriptor, global::Com.Proto.BeanActivityOptionalAwardRuleReflection.Descriptor, global::Com.Proto.BeanActivityPowerGetReflection.Descriptor, global::Com.Proto.BeanUserMoneyReflection.Descriptor, global::Com.Proto.BeanMonthSignRuleReflection.Descriptor, global::Com.Proto.BeanUserMonthSignReflection.Descriptor, global::Com.Proto.BeanUserExtraInfoReflection.Descriptor, global::Com.Proto.BeanGrowthFundReflection.Descriptor, global::Com.Proto.BeanUserGrowthFundReflection.Descriptor, global::Com.Proto.BeanUserActivityMonthCardRechargeInfoReflection.Descriptor, global::Com.Proto.BeanUserActivityExtraInfoReflection.Descriptor, global::Com.Proto.BeanActivityHolidayRuleReflection.Descriptor, global::Com.Proto.BeanUserActivityHolidayInfoReflection.Descriptor, global::Com.Proto.BeanUserItemReflection.Descriptor, global::Com.Proto.BeanActivityAccumulativeRechargeRuleReflection.Descriptor, global::Com.Proto.BeanUserActivityAccumulativeRechargeInfoReflection.Descriptor, global::Com.Proto.BeanUserActivityMissionReflection.Descriptor, global::Com.Proto.BeanUserBuyActivityMallReflection.Descriptor, global::Com.Proto.BeanActivityMusicPoolReflection.Descriptor, global::Com.Proto.BeanUserActivityMusicInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ActivityRuleRes), global::Com.Proto.ActivityRuleRes.Parser, new[]{ "Ret", "ActivityOptionalAwardRules", "ActivityPowerGetRules", "MonthSignRules", "MonthSignBuyRules", "MonthSignExtraRules", "GrowthFundRules", "ActivityDrawRules", "ActivityHolidayAwardRule", "ActiveHolidayAward", "HolidayAwardPoolRules", "ActivityAccumulativeRechargeRules", "ActivityMusicPools" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ActivityRes), global::Com.Proto.ActivityRes.Parser, new[]{ "Ret", "Activitys", "UserSigin", "UserSevenDaySigninInfos", "PowerGottenIds", "UserMonthSign", "UserGrowthFund", "UserActivityMonthCardRechargeInfo", "UserActivityExtraInfo", "UserActivityAccumulativeRechargeInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ActivityMusicInfoRes), global::Com.Proto.ActivityMusicInfoRes.Parser, new[]{ "Ret", "UserActivityMusicInfos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ChallengeActivityMusicReq), global::Com.Proto.ChallengeActivityMusicReq.Parser, new[]{ "ActivityId", "MusicId", "DiffType", "Score" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ChallengeActivityMusicRes), global::Com.Proto.ChallengeActivityMusicRes.Parser, new[]{ "Ret", "UserActivityMusicInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.SignInReq), global::Com.Proto.SignInReq.Parser, new[]{ "ActivityId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.SignInRes), global::Com.Proto.SignInRes.Parser, new[]{ "Ret", "Awards", "UserSigin" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GainSevenDayAwardReq), global::Com.Proto.GainSevenDayAwardReq.Parser, new[]{ "ActivityId", "Resource", "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GainSevenDayAwardRes), global::Com.Proto.GainSevenDayAwardRes.Parser, new[]{ "Ret", "Awards", "UserSevenDaySigninIndo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.PowerGetRewardReq), global::Com.Proto.PowerGetRewardReq.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.PowerGetRewardRes), global::Com.Proto.PowerGetRewardRes.Parser, new[]{ "Ret", "Awards", "GottenIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.PowerBuyGetReq), global::Com.Proto.PowerBuyGetReq.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.PowerBuyGetRes), global::Com.Proto.PowerBuyGetRes.Parser, new[]{ "Ret", "Awards", "GottenIds", "UserMoney" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.MonthSignRewardRes), global::Com.Proto.MonthSignRewardRes.Parser, new[]{ "Ret", "Awards", "UserMonthSign" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.MonthSignBuyReq), global::Com.Proto.MonthSignBuyReq.Parser, new[]{ "Date" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.MonthSignBuyRes), global::Com.Proto.MonthSignBuyRes.Parser, new[]{ "Ret", "Awards", "UserMonthSign", "UserMoney" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.MonthSignExtraRes), global::Com.Proto.MonthSignExtraRes.Parser, new[]{ "Ret", "Awards", "UserMonthSign" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReceiveFirstPrizeReq), global::Com.Proto.ReceiveFirstPrizeReq.Parser, new[]{ "Group" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReceiveFirstPrizeRes), global::Com.Proto.ReceiveFirstPrizeRes.Parser, new[]{ "Ret", "Awards", "UserExtraInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GrowthFundAwardReq), global::Com.Proto.GrowthFundAwardReq.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GrowthFundAwardRes), global::Com.Proto.GrowthFundAwardRes.Parser, new[]{ "Ret", "Awards", "UserGrowthFund" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReceiveDownloadAwardsRes), global::Com.Proto.ReceiveDownloadAwardsRes.Parser, new[]{ "Ret", "Awards", "UserExtraInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReceiveActivityAwardsReq), global::Com.Proto.ReceiveActivityAwardsReq.Parser, new[]{ "OptionalActivityType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReceiveActivityAwardsRes), global::Com.Proto.ReceiveActivityAwardsRes.Parser, new[]{ "Ret", "Awards", "UserActivityExtraInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GetUserActivityHolidayInfoReq), global::Com.Proto.GetUserActivityHolidayInfoReq.Parser, new[]{ "ActivityId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GetUserActivityHolidayInfoRes), global::Com.Proto.GetUserActivityHolidayInfoRes.Parser, new[]{ "Ret", "UserActivityHolidayInfoPB", "UserItem" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.DrawingRewardsReq), global::Com.Proto.DrawingRewardsReq.Parser, new[]{ "Type", "ActivityId", "Player" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.DrawingRewardsRes), global::Com.Proto.DrawingRewardsRes.Parser, new[]{ "Ret", "Awards", "UserActivityHolidayInfoPB", "UserItem" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GainActiveHolidayAwardReq), global::Com.Proto.GainActiveHolidayAwardReq.Parser, new[]{ "Weight", "ActivityId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GainActiveHolidayAwardRes), global::Com.Proto.GainActiveHolidayAwardRes.Parser, new[]{ "Ret", "Awards", "UserActivityHolidayInfoPB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReceiveActivityAccumulativeRechargeAwardReq), global::Com.Proto.ReceiveActivityAccumulativeRechargeAwardReq.Parser, new[]{ "Id", "ActivityId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReceiveActivityAccumulativeRechargeAwardRes), global::Com.Proto.ReceiveActivityAccumulativeRechargeAwardRes.Parser, new[]{ "Ret", "Awards", "UserActivityAccumulativeRechargeInfo" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ActivityRuleRes : pb::IMessage<ActivityRuleRes> {
    private static readonly pb::MessageParser<ActivityRuleRes> _parser = new pb::MessageParser<ActivityRuleRes>(() => new ActivityRuleRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityRuleRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityRuleRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityRuleRes(ActivityRuleRes other) : this() {
      ret_ = other.ret_;
      activityOptionalAwardRules_ = other.activityOptionalAwardRules_.Clone();
      activityPowerGetRules_ = other.activityPowerGetRules_.Clone();
      monthSignRules_ = other.monthSignRules_.Clone();
      monthSignBuyRules_ = other.monthSignBuyRules_.Clone();
      monthSignExtraRules_ = other.monthSignExtraRules_.Clone();
      growthFundRules_ = other.growthFundRules_.Clone();
      activityDrawRules_ = other.activityDrawRules_.Clone();
      activityHolidayAwardRule_ = other.activityHolidayAwardRule_.Clone();
      activeHolidayAward_ = other.activeHolidayAward_.Clone();
      holidayAwardPoolRules_ = other.holidayAwardPoolRules_.Clone();
      activityAccumulativeRechargeRules_ = other.activityAccumulativeRechargeRules_.Clone();
      activityMusicPools_ = other.activityMusicPools_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityRuleRes Clone() {
      return new ActivityRuleRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "activity_optional_award_rules" field.</summary>
    public const int ActivityOptionalAwardRulesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.ActivityOptionalAwardRulePB> _repeated_activityOptionalAwardRules_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.ActivityOptionalAwardRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ActivityOptionalAwardRulePB> activityOptionalAwardRules_ = new pbc::RepeatedField<global::Com.Proto.ActivityOptionalAwardRulePB>();
    /// <summary>
    ///活动可选择奖励规则表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ActivityOptionalAwardRulePB> ActivityOptionalAwardRules {
      get { return activityOptionalAwardRules_; }
    }

    /// <summary>Field number for the "activity_power_get_rules" field.</summary>
    public const int ActivityPowerGetRulesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.ActivityPowerGetRulePB> _repeated_activityPowerGetRules_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.ActivityPowerGetRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ActivityPowerGetRulePB> activityPowerGetRules_ = new pbc::RepeatedField<global::Com.Proto.ActivityPowerGetRulePB>();
    /// <summary>
    ///体力领取规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ActivityPowerGetRulePB> ActivityPowerGetRules {
      get { return activityPowerGetRules_; }
    }

    /// <summary>Field number for the "month_sign_rules" field.</summary>
    public const int MonthSignRulesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.MonthSignRulePB> _repeated_monthSignRules_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.MonthSignRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.MonthSignRulePB> monthSignRules_ = new pbc::RepeatedField<global::Com.Proto.MonthSignRulePB>();
    /// <summary>
    ///月签到规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.MonthSignRulePB> MonthSignRules {
      get { return monthSignRules_; }
    }

    /// <summary>Field number for the "month_sign_buy_rules" field.</summary>
    public const int MonthSignBuyRulesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Com.Proto.MonthSignBuyRulePB> _repeated_monthSignBuyRules_codec
        = pb::FieldCodec.ForMessage(42, global::Com.Proto.MonthSignBuyRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.MonthSignBuyRulePB> monthSignBuyRules_ = new pbc::RepeatedField<global::Com.Proto.MonthSignBuyRulePB>();
    /// <summary>
    ///月签到补签规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.MonthSignBuyRulePB> MonthSignBuyRules {
      get { return monthSignBuyRules_; }
    }

    /// <summary>Field number for the "month_sign_extra_rules" field.</summary>
    public const int MonthSignExtraRulesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Com.Proto.MonthSignExtraRulePB> _repeated_monthSignExtraRules_codec
        = pb::FieldCodec.ForMessage(50, global::Com.Proto.MonthSignExtraRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.MonthSignExtraRulePB> monthSignExtraRules_ = new pbc::RepeatedField<global::Com.Proto.MonthSignExtraRulePB>();
    /// <summary>
    ///月签到累计奖励规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.MonthSignExtraRulePB> MonthSignExtraRules {
      get { return monthSignExtraRules_; }
    }

    /// <summary>Field number for the "growth_fund_rules" field.</summary>
    public const int GrowthFundRulesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Com.Proto.GrowthFundRulePB> _repeated_growthFundRules_codec
        = pb::FieldCodec.ForMessage(58, global::Com.Proto.GrowthFundRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.GrowthFundRulePB> growthFundRules_ = new pbc::RepeatedField<global::Com.Proto.GrowthFundRulePB>();
    /// <summary>
    ///成长基金奖励规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.GrowthFundRulePB> GrowthFundRules {
      get { return growthFundRules_; }
    }

    /// <summary>Field number for the "activity_draw_rules" field.</summary>
    public const int ActivityDrawRulesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Com.Proto.ActivityDrawRulePB> _repeated_activityDrawRules_codec
        = pb::FieldCodec.ForMessage(66, global::Com.Proto.ActivityDrawRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ActivityDrawRulePB> activityDrawRules_ = new pbc::RepeatedField<global::Com.Proto.ActivityDrawRulePB>();
    /// <summary>
    ///假日活动抽奖规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ActivityDrawRulePB> ActivityDrawRules {
      get { return activityDrawRules_; }
    }

    /// <summary>Field number for the "activity_holiday_awardRule" field.</summary>
    public const int ActivityHolidayAwardRuleFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Com.Proto.ActivityHolidayAwardRulePB> _repeated_activityHolidayAwardRule_codec
        = pb::FieldCodec.ForMessage(74, global::Com.Proto.ActivityHolidayAwardRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ActivityHolidayAwardRulePB> activityHolidayAwardRule_ = new pbc::RepeatedField<global::Com.Proto.ActivityHolidayAwardRulePB>();
    /// <summary>
    ///假日活动模块掉落物品规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ActivityHolidayAwardRulePB> ActivityHolidayAwardRule {
      get { return activityHolidayAwardRule_; }
    }

    /// <summary>Field number for the "active_holiday_award" field.</summary>
    public const int ActiveHolidayAwardFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Com.Proto.ActiveHolidayAwardRulePB> _repeated_activeHolidayAward_codec
        = pb::FieldCodec.ForMessage(82, global::Com.Proto.ActiveHolidayAwardRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ActiveHolidayAwardRulePB> activeHolidayAward_ = new pbc::RepeatedField<global::Com.Proto.ActiveHolidayAwardRulePB>();
    /// <summary>
    ///假日活动活跃奖励规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ActiveHolidayAwardRulePB> ActiveHolidayAward {
      get { return activeHolidayAward_; }
    }

    /// <summary>Field number for the "holiday_award_pool_rules" field.</summary>
    public const int HolidayAwardPoolRulesFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Com.Proto.HolidayAwardPoolRulePB> _repeated_holidayAwardPoolRules_codec
        = pb::FieldCodec.ForMessage(90, global::Com.Proto.HolidayAwardPoolRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.HolidayAwardPoolRulePB> holidayAwardPoolRules_ = new pbc::RepeatedField<global::Com.Proto.HolidayAwardPoolRulePB>();
    /// <summary>
    ///假日活动所有的奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.HolidayAwardPoolRulePB> HolidayAwardPoolRules {
      get { return holidayAwardPoolRules_; }
    }

    /// <summary>Field number for the "activity_accumulative_recharge_rules" field.</summary>
    public const int ActivityAccumulativeRechargeRulesFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Com.Proto.ActivityAccumulativeRechargeRulePB> _repeated_activityAccumulativeRechargeRules_codec
        = pb::FieldCodec.ForMessage(98, global::Com.Proto.ActivityAccumulativeRechargeRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ActivityAccumulativeRechargeRulePB> activityAccumulativeRechargeRules_ = new pbc::RepeatedField<global::Com.Proto.ActivityAccumulativeRechargeRulePB>();
    /// <summary>
    ///累计充值奖励规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ActivityAccumulativeRechargeRulePB> ActivityAccumulativeRechargeRules {
      get { return activityAccumulativeRechargeRules_; }
    }

    /// <summary>Field number for the "activity_music_pools" field.</summary>
    public const int ActivityMusicPoolsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Com.Proto.ActivityMusicPoolPB> _repeated_activityMusicPools_codec
        = pb::FieldCodec.ForMessage(106, global::Com.Proto.ActivityMusicPoolPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ActivityMusicPoolPB> activityMusicPools_ = new pbc::RepeatedField<global::Com.Proto.ActivityMusicPoolPB>();
    /// <summary>
    ///活动音游池
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ActivityMusicPoolPB> ActivityMusicPools {
      get { return activityMusicPools_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityRuleRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityRuleRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!activityOptionalAwardRules_.Equals(other.activityOptionalAwardRules_)) return false;
      if(!activityPowerGetRules_.Equals(other.activityPowerGetRules_)) return false;
      if(!monthSignRules_.Equals(other.monthSignRules_)) return false;
      if(!monthSignBuyRules_.Equals(other.monthSignBuyRules_)) return false;
      if(!monthSignExtraRules_.Equals(other.monthSignExtraRules_)) return false;
      if(!growthFundRules_.Equals(other.growthFundRules_)) return false;
      if(!activityDrawRules_.Equals(other.activityDrawRules_)) return false;
      if(!activityHolidayAwardRule_.Equals(other.activityHolidayAwardRule_)) return false;
      if(!activeHolidayAward_.Equals(other.activeHolidayAward_)) return false;
      if(!holidayAwardPoolRules_.Equals(other.holidayAwardPoolRules_)) return false;
      if(!activityAccumulativeRechargeRules_.Equals(other.activityAccumulativeRechargeRules_)) return false;
      if(!activityMusicPools_.Equals(other.activityMusicPools_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= activityOptionalAwardRules_.GetHashCode();
      hash ^= activityPowerGetRules_.GetHashCode();
      hash ^= monthSignRules_.GetHashCode();
      hash ^= monthSignBuyRules_.GetHashCode();
      hash ^= monthSignExtraRules_.GetHashCode();
      hash ^= growthFundRules_.GetHashCode();
      hash ^= activityDrawRules_.GetHashCode();
      hash ^= activityHolidayAwardRule_.GetHashCode();
      hash ^= activeHolidayAward_.GetHashCode();
      hash ^= holidayAwardPoolRules_.GetHashCode();
      hash ^= activityAccumulativeRechargeRules_.GetHashCode();
      hash ^= activityMusicPools_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      activityOptionalAwardRules_.WriteTo(output, _repeated_activityOptionalAwardRules_codec);
      activityPowerGetRules_.WriteTo(output, _repeated_activityPowerGetRules_codec);
      monthSignRules_.WriteTo(output, _repeated_monthSignRules_codec);
      monthSignBuyRules_.WriteTo(output, _repeated_monthSignBuyRules_codec);
      monthSignExtraRules_.WriteTo(output, _repeated_monthSignExtraRules_codec);
      growthFundRules_.WriteTo(output, _repeated_growthFundRules_codec);
      activityDrawRules_.WriteTo(output, _repeated_activityDrawRules_codec);
      activityHolidayAwardRule_.WriteTo(output, _repeated_activityHolidayAwardRule_codec);
      activeHolidayAward_.WriteTo(output, _repeated_activeHolidayAward_codec);
      holidayAwardPoolRules_.WriteTo(output, _repeated_holidayAwardPoolRules_codec);
      activityAccumulativeRechargeRules_.WriteTo(output, _repeated_activityAccumulativeRechargeRules_codec);
      activityMusicPools_.WriteTo(output, _repeated_activityMusicPools_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += activityOptionalAwardRules_.CalculateSize(_repeated_activityOptionalAwardRules_codec);
      size += activityPowerGetRules_.CalculateSize(_repeated_activityPowerGetRules_codec);
      size += monthSignRules_.CalculateSize(_repeated_monthSignRules_codec);
      size += monthSignBuyRules_.CalculateSize(_repeated_monthSignBuyRules_codec);
      size += monthSignExtraRules_.CalculateSize(_repeated_monthSignExtraRules_codec);
      size += growthFundRules_.CalculateSize(_repeated_growthFundRules_codec);
      size += activityDrawRules_.CalculateSize(_repeated_activityDrawRules_codec);
      size += activityHolidayAwardRule_.CalculateSize(_repeated_activityHolidayAwardRule_codec);
      size += activeHolidayAward_.CalculateSize(_repeated_activeHolidayAward_codec);
      size += holidayAwardPoolRules_.CalculateSize(_repeated_holidayAwardPoolRules_codec);
      size += activityAccumulativeRechargeRules_.CalculateSize(_repeated_activityAccumulativeRechargeRules_codec);
      size += activityMusicPools_.CalculateSize(_repeated_activityMusicPools_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityRuleRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      activityOptionalAwardRules_.Add(other.activityOptionalAwardRules_);
      activityPowerGetRules_.Add(other.activityPowerGetRules_);
      monthSignRules_.Add(other.monthSignRules_);
      monthSignBuyRules_.Add(other.monthSignBuyRules_);
      monthSignExtraRules_.Add(other.monthSignExtraRules_);
      growthFundRules_.Add(other.growthFundRules_);
      activityDrawRules_.Add(other.activityDrawRules_);
      activityHolidayAwardRule_.Add(other.activityHolidayAwardRule_);
      activeHolidayAward_.Add(other.activeHolidayAward_);
      holidayAwardPoolRules_.Add(other.holidayAwardPoolRules_);
      activityAccumulativeRechargeRules_.Add(other.activityAccumulativeRechargeRules_);
      activityMusicPools_.Add(other.activityMusicPools_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            activityOptionalAwardRules_.AddEntriesFrom(input, _repeated_activityOptionalAwardRules_codec);
            break;
          }
          case 26: {
            activityPowerGetRules_.AddEntriesFrom(input, _repeated_activityPowerGetRules_codec);
            break;
          }
          case 34: {
            monthSignRules_.AddEntriesFrom(input, _repeated_monthSignRules_codec);
            break;
          }
          case 42: {
            monthSignBuyRules_.AddEntriesFrom(input, _repeated_monthSignBuyRules_codec);
            break;
          }
          case 50: {
            monthSignExtraRules_.AddEntriesFrom(input, _repeated_monthSignExtraRules_codec);
            break;
          }
          case 58: {
            growthFundRules_.AddEntriesFrom(input, _repeated_growthFundRules_codec);
            break;
          }
          case 66: {
            activityDrawRules_.AddEntriesFrom(input, _repeated_activityDrawRules_codec);
            break;
          }
          case 74: {
            activityHolidayAwardRule_.AddEntriesFrom(input, _repeated_activityHolidayAwardRule_codec);
            break;
          }
          case 82: {
            activeHolidayAward_.AddEntriesFrom(input, _repeated_activeHolidayAward_codec);
            break;
          }
          case 90: {
            holidayAwardPoolRules_.AddEntriesFrom(input, _repeated_holidayAwardPoolRules_codec);
            break;
          }
          case 98: {
            activityAccumulativeRechargeRules_.AddEntriesFrom(input, _repeated_activityAccumulativeRechargeRules_codec);
            break;
          }
          case 106: {
            activityMusicPools_.AddEntriesFrom(input, _repeated_activityMusicPools_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityRes : pb::IMessage<ActivityRes> {
    private static readonly pb::MessageParser<ActivityRes> _parser = new pb::MessageParser<ActivityRes>(() => new ActivityRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityRes(ActivityRes other) : this() {
      ret_ = other.ret_;
      activitys_ = other.activitys_.Clone();
      UserSigin = other.userSigin_ != null ? other.UserSigin.Clone() : null;
      userSevenDaySigninInfos_ = other.userSevenDaySigninInfos_.Clone();
      powerGottenIds_ = other.powerGottenIds_.Clone();
      UserMonthSign = other.userMonthSign_ != null ? other.UserMonthSign.Clone() : null;
      UserGrowthFund = other.userGrowthFund_ != null ? other.UserGrowthFund.Clone() : null;
      userActivityMonthCardRechargeInfo_ = other.userActivityMonthCardRechargeInfo_.Clone();
      UserActivityExtraInfo = other.userActivityExtraInfo_ != null ? other.UserActivityExtraInfo.Clone() : null;
      userActivityAccumulativeRechargeInfo_ = other.userActivityAccumulativeRechargeInfo_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityRes Clone() {
      return new ActivityRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "activitys" field.</summary>
    public const int ActivitysFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.ActivityPB> _repeated_activitys_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.ActivityPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ActivityPB> activitys_ = new pbc::RepeatedField<global::Com.Proto.ActivityPB>();
    /// <summary>
    ///活动列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ActivityPB> Activitys {
      get { return activitys_; }
    }

    /// <summary>Field number for the "user_sigin" field.</summary>
    public const int UserSiginFieldNumber = 3;
    private global::Com.Proto.UserSignInPB userSigin_;
    /// <summary>
    ///签到详情
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserSignInPB UserSigin {
      get { return userSigin_; }
      set {
        userSigin_ = value;
      }
    }

    /// <summary>Field number for the "user_seven_day_signin_infos" field.</summary>
    public const int UserSevenDaySigninInfosFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.UserSevenDaySigninInfoPB> _repeated_userSevenDaySigninInfos_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.UserSevenDaySigninInfoPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserSevenDaySigninInfoPB> userSevenDaySigninInfos_ = new pbc::RepeatedField<global::Com.Proto.UserSevenDaySigninInfoPB>();
    /// <summary>
    ///七天签到
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserSevenDaySigninInfoPB> UserSevenDaySigninInfos {
      get { return userSevenDaySigninInfos_; }
    }

    /// <summary>Field number for the "power_gotten_ids" field.</summary>
    public const int PowerGottenIdsFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_powerGottenIds_codec
        = pb::FieldCodec.ForSInt32(42);
    private readonly pbc::RepeatedField<int> powerGottenIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///用户体力领取信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PowerGottenIds {
      get { return powerGottenIds_; }
    }

    /// <summary>Field number for the "user_month_sign" field.</summary>
    public const int UserMonthSignFieldNumber = 6;
    private global::Com.Proto.UserMonthSignPB userMonthSign_;
    /// <summary>
    ///用户月签到信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMonthSignPB UserMonthSign {
      get { return userMonthSign_; }
      set {
        userMonthSign_ = value;
      }
    }

    /// <summary>Field number for the "user_growth_fund" field.</summary>
    public const int UserGrowthFundFieldNumber = 7;
    private global::Com.Proto.UserGrowthFundPB userGrowthFund_;
    /// <summary>
    ///用户成长基金领奖信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserGrowthFundPB UserGrowthFund {
      get { return userGrowthFund_; }
      set {
        userGrowthFund_ = value;
      }
    }

    /// <summary>Field number for the "user_activity_month_card_recharge_info" field.</summary>
    public const int UserActivityMonthCardRechargeInfoFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Com.Proto.UserActivityMonthCardRechargeInfoPB> _repeated_userActivityMonthCardRechargeInfo_codec
        = pb::FieldCodec.ForMessage(66, global::Com.Proto.UserActivityMonthCardRechargeInfoPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserActivityMonthCardRechargeInfoPB> userActivityMonthCardRechargeInfo_ = new pbc::RepeatedField<global::Com.Proto.UserActivityMonthCardRechargeInfoPB>();
    /// <summary>
    ///月卡充值活动信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserActivityMonthCardRechargeInfoPB> UserActivityMonthCardRechargeInfo {
      get { return userActivityMonthCardRechargeInfo_; }
    }

    /// <summary>Field number for the "user_activity_extra_info" field.</summary>
    public const int UserActivityExtraInfoFieldNumber = 9;
    private global::Com.Proto.UserActivityExtraInfoPB userActivityExtraInfo_;
    /// <summary>
    ///用户活动额外信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserActivityExtraInfoPB UserActivityExtraInfo {
      get { return userActivityExtraInfo_; }
      set {
        userActivityExtraInfo_ = value;
      }
    }

    /// <summary>Field number for the "user_activity_accumulative_recharge_info" field.</summary>
    public const int UserActivityAccumulativeRechargeInfoFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Com.Proto.UserActivityAccumulativeRechargeInfoPB> _repeated_userActivityAccumulativeRechargeInfo_codec
        = pb::FieldCodec.ForMessage(82, global::Com.Proto.UserActivityAccumulativeRechargeInfoPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserActivityAccumulativeRechargeInfoPB> userActivityAccumulativeRechargeInfo_ = new pbc::RepeatedField<global::Com.Proto.UserActivityAccumulativeRechargeInfoPB>();
    /// <summary>
    ///累计充值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserActivityAccumulativeRechargeInfoPB> UserActivityAccumulativeRechargeInfo {
      get { return userActivityAccumulativeRechargeInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!activitys_.Equals(other.activitys_)) return false;
      if (!object.Equals(UserSigin, other.UserSigin)) return false;
      if(!userSevenDaySigninInfos_.Equals(other.userSevenDaySigninInfos_)) return false;
      if(!powerGottenIds_.Equals(other.powerGottenIds_)) return false;
      if (!object.Equals(UserMonthSign, other.UserMonthSign)) return false;
      if (!object.Equals(UserGrowthFund, other.UserGrowthFund)) return false;
      if(!userActivityMonthCardRechargeInfo_.Equals(other.userActivityMonthCardRechargeInfo_)) return false;
      if (!object.Equals(UserActivityExtraInfo, other.UserActivityExtraInfo)) return false;
      if(!userActivityAccumulativeRechargeInfo_.Equals(other.userActivityAccumulativeRechargeInfo_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= activitys_.GetHashCode();
      if (userSigin_ != null) hash ^= UserSigin.GetHashCode();
      hash ^= userSevenDaySigninInfos_.GetHashCode();
      hash ^= powerGottenIds_.GetHashCode();
      if (userMonthSign_ != null) hash ^= UserMonthSign.GetHashCode();
      if (userGrowthFund_ != null) hash ^= UserGrowthFund.GetHashCode();
      hash ^= userActivityMonthCardRechargeInfo_.GetHashCode();
      if (userActivityExtraInfo_ != null) hash ^= UserActivityExtraInfo.GetHashCode();
      hash ^= userActivityAccumulativeRechargeInfo_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      activitys_.WriteTo(output, _repeated_activitys_codec);
      if (userSigin_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserSigin);
      }
      userSevenDaySigninInfos_.WriteTo(output, _repeated_userSevenDaySigninInfos_codec);
      powerGottenIds_.WriteTo(output, _repeated_powerGottenIds_codec);
      if (userMonthSign_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UserMonthSign);
      }
      if (userGrowthFund_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(UserGrowthFund);
      }
      userActivityMonthCardRechargeInfo_.WriteTo(output, _repeated_userActivityMonthCardRechargeInfo_codec);
      if (userActivityExtraInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(UserActivityExtraInfo);
      }
      userActivityAccumulativeRechargeInfo_.WriteTo(output, _repeated_userActivityAccumulativeRechargeInfo_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += activitys_.CalculateSize(_repeated_activitys_codec);
      if (userSigin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserSigin);
      }
      size += userSevenDaySigninInfos_.CalculateSize(_repeated_userSevenDaySigninInfos_codec);
      size += powerGottenIds_.CalculateSize(_repeated_powerGottenIds_codec);
      if (userMonthSign_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMonthSign);
      }
      if (userGrowthFund_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserGrowthFund);
      }
      size += userActivityMonthCardRechargeInfo_.CalculateSize(_repeated_userActivityMonthCardRechargeInfo_codec);
      if (userActivityExtraInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserActivityExtraInfo);
      }
      size += userActivityAccumulativeRechargeInfo_.CalculateSize(_repeated_userActivityAccumulativeRechargeInfo_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      activitys_.Add(other.activitys_);
      if (other.userSigin_ != null) {
        if (userSigin_ == null) {
          userSigin_ = new global::Com.Proto.UserSignInPB();
        }
        UserSigin.MergeFrom(other.UserSigin);
      }
      userSevenDaySigninInfos_.Add(other.userSevenDaySigninInfos_);
      powerGottenIds_.Add(other.powerGottenIds_);
      if (other.userMonthSign_ != null) {
        if (userMonthSign_ == null) {
          userMonthSign_ = new global::Com.Proto.UserMonthSignPB();
        }
        UserMonthSign.MergeFrom(other.UserMonthSign);
      }
      if (other.userGrowthFund_ != null) {
        if (userGrowthFund_ == null) {
          userGrowthFund_ = new global::Com.Proto.UserGrowthFundPB();
        }
        UserGrowthFund.MergeFrom(other.UserGrowthFund);
      }
      userActivityMonthCardRechargeInfo_.Add(other.userActivityMonthCardRechargeInfo_);
      if (other.userActivityExtraInfo_ != null) {
        if (userActivityExtraInfo_ == null) {
          userActivityExtraInfo_ = new global::Com.Proto.UserActivityExtraInfoPB();
        }
        UserActivityExtraInfo.MergeFrom(other.UserActivityExtraInfo);
      }
      userActivityAccumulativeRechargeInfo_.Add(other.userActivityAccumulativeRechargeInfo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            activitys_.AddEntriesFrom(input, _repeated_activitys_codec);
            break;
          }
          case 26: {
            if (userSigin_ == null) {
              userSigin_ = new global::Com.Proto.UserSignInPB();
            }
            input.ReadMessage(userSigin_);
            break;
          }
          case 34: {
            userSevenDaySigninInfos_.AddEntriesFrom(input, _repeated_userSevenDaySigninInfos_codec);
            break;
          }
          case 42:
          case 40: {
            powerGottenIds_.AddEntriesFrom(input, _repeated_powerGottenIds_codec);
            break;
          }
          case 50: {
            if (userMonthSign_ == null) {
              userMonthSign_ = new global::Com.Proto.UserMonthSignPB();
            }
            input.ReadMessage(userMonthSign_);
            break;
          }
          case 58: {
            if (userGrowthFund_ == null) {
              userGrowthFund_ = new global::Com.Proto.UserGrowthFundPB();
            }
            input.ReadMessage(userGrowthFund_);
            break;
          }
          case 66: {
            userActivityMonthCardRechargeInfo_.AddEntriesFrom(input, _repeated_userActivityMonthCardRechargeInfo_codec);
            break;
          }
          case 74: {
            if (userActivityExtraInfo_ == null) {
              userActivityExtraInfo_ = new global::Com.Proto.UserActivityExtraInfoPB();
            }
            input.ReadMessage(userActivityExtraInfo_);
            break;
          }
          case 82: {
            userActivityAccumulativeRechargeInfo_.AddEntriesFrom(input, _repeated_userActivityAccumulativeRechargeInfo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityMusicInfoRes : pb::IMessage<ActivityMusicInfoRes> {
    private static readonly pb::MessageParser<ActivityMusicInfoRes> _parser = new pb::MessageParser<ActivityMusicInfoRes>(() => new ActivityMusicInfoRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityMusicInfoRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityMusicInfoRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityMusicInfoRes(ActivityMusicInfoRes other) : this() {
      ret_ = other.ret_;
      userActivityMusicInfos_ = other.userActivityMusicInfos_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityMusicInfoRes Clone() {
      return new ActivityMusicInfoRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_activity_music_infos" field.</summary>
    public const int UserActivityMusicInfosFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.UserActivityMusicInfoPB> _repeated_userActivityMusicInfos_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.UserActivityMusicInfoPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserActivityMusicInfoPB> userActivityMusicInfos_ = new pbc::RepeatedField<global::Com.Proto.UserActivityMusicInfoPB>();
    /// <summary>
    ///用户活动音游信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserActivityMusicInfoPB> UserActivityMusicInfos {
      get { return userActivityMusicInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityMusicInfoRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityMusicInfoRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!userActivityMusicInfos_.Equals(other.userActivityMusicInfos_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= userActivityMusicInfos_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      userActivityMusicInfos_.WriteTo(output, _repeated_userActivityMusicInfos_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += userActivityMusicInfos_.CalculateSize(_repeated_userActivityMusicInfos_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityMusicInfoRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      userActivityMusicInfos_.Add(other.userActivityMusicInfos_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            userActivityMusicInfos_.AddEntriesFrom(input, _repeated_userActivityMusicInfos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChallengeActivityMusicReq : pb::IMessage<ChallengeActivityMusicReq> {
    private static readonly pb::MessageParser<ChallengeActivityMusicReq> _parser = new pb::MessageParser<ChallengeActivityMusicReq>(() => new ChallengeActivityMusicReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChallengeActivityMusicReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeActivityMusicReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeActivityMusicReq(ChallengeActivityMusicReq other) : this() {
      activityId_ = other.activityId_;
      musicId_ = other.musicId_;
      diffType_ = other.diffType_;
      score_ = other.score_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeActivityMusicReq Clone() {
      return new ChallengeActivityMusicReq(this);
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 1;
    private int activityId_;
    /// <summary>
    ///活动id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    /// <summary>Field number for the "music_id" field.</summary>
    public const int MusicIdFieldNumber = 2;
    private int musicId_;
    /// <summary>
    ///活动id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MusicId {
      get { return musicId_; }
      set {
        musicId_ = value;
      }
    }

    /// <summary>Field number for the "diff_type" field.</summary>
    public const int DiffTypeFieldNumber = 3;
    private global::MusicGameDiffTypePB diffType_ = 0;
    /// <summary>
    ///难度类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MusicGameDiffTypePB DiffType {
      get { return diffType_; }
      set {
        diffType_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 4;
    private int score_;
    /// <summary>
    ///分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChallengeActivityMusicReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChallengeActivityMusicReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityId != other.ActivityId) return false;
      if (MusicId != other.MusicId) return false;
      if (DiffType != other.DiffType) return false;
      if (Score != other.Score) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      if (MusicId != 0) hash ^= MusicId.GetHashCode();
      if (DiffType != 0) hash ^= DiffType.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(ActivityId);
      }
      if (MusicId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(MusicId);
      }
      if (DiffType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) DiffType);
      }
      if (Score != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(Score);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActivityId);
      }
      if (MusicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MusicId);
      }
      if (DiffType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DiffType);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Score);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChallengeActivityMusicReq other) {
      if (other == null) {
        return;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.MusicId != 0) {
        MusicId = other.MusicId;
      }
      if (other.DiffType != 0) {
        DiffType = other.DiffType;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ActivityId = input.ReadSInt32();
            break;
          }
          case 16: {
            MusicId = input.ReadSInt32();
            break;
          }
          case 24: {
            diffType_ = (global::MusicGameDiffTypePB) input.ReadEnum();
            break;
          }
          case 32: {
            Score = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChallengeActivityMusicRes : pb::IMessage<ChallengeActivityMusicRes> {
    private static readonly pb::MessageParser<ChallengeActivityMusicRes> _parser = new pb::MessageParser<ChallengeActivityMusicRes>(() => new ChallengeActivityMusicRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChallengeActivityMusicRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeActivityMusicRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeActivityMusicRes(ChallengeActivityMusicRes other) : this() {
      ret_ = other.ret_;
      UserActivityMusicInfo = other.userActivityMusicInfo_ != null ? other.UserActivityMusicInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeActivityMusicRes Clone() {
      return new ChallengeActivityMusicRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_activity_music_info" field.</summary>
    public const int UserActivityMusicInfoFieldNumber = 2;
    private global::Com.Proto.UserActivityMusicInfoPB userActivityMusicInfo_;
    /// <summary>
    ///用户活动音游信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserActivityMusicInfoPB UserActivityMusicInfo {
      get { return userActivityMusicInfo_; }
      set {
        userActivityMusicInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChallengeActivityMusicRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChallengeActivityMusicRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserActivityMusicInfo, other.UserActivityMusicInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userActivityMusicInfo_ != null) hash ^= UserActivityMusicInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userActivityMusicInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserActivityMusicInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userActivityMusicInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserActivityMusicInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChallengeActivityMusicRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userActivityMusicInfo_ != null) {
        if (userActivityMusicInfo_ == null) {
          userActivityMusicInfo_ = new global::Com.Proto.UserActivityMusicInfoPB();
        }
        UserActivityMusicInfo.MergeFrom(other.UserActivityMusicInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userActivityMusicInfo_ == null) {
              userActivityMusicInfo_ = new global::Com.Proto.UserActivityMusicInfoPB();
            }
            input.ReadMessage(userActivityMusicInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SignInReq : pb::IMessage<SignInReq> {
    private static readonly pb::MessageParser<SignInReq> _parser = new pb::MessageParser<SignInReq>(() => new SignInReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignInReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignInReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignInReq(SignInReq other) : this() {
      activityId_ = other.activityId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignInReq Clone() {
      return new SignInReq(this);
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 1;
    private int activityId_;
    /// <summary>
    ///活动id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignInReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignInReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityId != other.ActivityId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(ActivityId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActivityId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignInReq other) {
      if (other == null) {
        return;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ActivityId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SignInRes : pb::IMessage<SignInRes> {
    private static readonly pb::MessageParser<SignInRes> _parser = new pb::MessageParser<SignInRes>(() => new SignInRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignInRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignInRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignInRes(SignInRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      UserSigin = other.userSigin_ != null ? other.UserSigin.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignInRes Clone() {
      return new SignInRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///签到奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "user_sigin" field.</summary>
    public const int UserSiginFieldNumber = 3;
    private global::Com.Proto.UserSignInPB userSigin_;
    /// <summary>
    ///签到详情
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserSignInPB UserSigin {
      get { return userSigin_; }
      set {
        userSigin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignInRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignInRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if (!object.Equals(UserSigin, other.UserSigin)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      if (userSigin_ != null) hash ^= UserSigin.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      if (userSigin_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserSigin);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      if (userSigin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserSigin);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignInRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      if (other.userSigin_ != null) {
        if (userSigin_ == null) {
          userSigin_ = new global::Com.Proto.UserSignInPB();
        }
        UserSigin.MergeFrom(other.UserSigin);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26: {
            if (userSigin_ == null) {
              userSigin_ = new global::Com.Proto.UserSignInPB();
            }
            input.ReadMessage(userSigin_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GainSevenDayAwardReq : pb::IMessage<GainSevenDayAwardReq> {
    private static readonly pb::MessageParser<GainSevenDayAwardReq> _parser = new pb::MessageParser<GainSevenDayAwardReq>(() => new GainSevenDayAwardReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GainSevenDayAwardReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GainSevenDayAwardReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GainSevenDayAwardReq(GainSevenDayAwardReq other) : this() {
      activityId_ = other.activityId_;
      resource_ = other.resource_;
      id_ = other.id_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GainSevenDayAwardReq Clone() {
      return new GainSevenDayAwardReq(this);
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 1;
    private int activityId_;
    /// <summary>
    ///活动id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 2;
    private global::ResourcePB resource_ = 0;
    /// <summary>
    ///(可选)选择奖励类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ResourcePB Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private int id_;
    /// <summary>
    ///(可选)选择奖励的ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GainSevenDayAwardReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GainSevenDayAwardReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityId != other.ActivityId) return false;
      if (Resource != other.Resource) return false;
      if (Id != other.Id) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      if (Resource != 0) hash ^= Resource.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(ActivityId);
      }
      if (Resource != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Resource);
      }
      if (Id != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActivityId);
      }
      if (Resource != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Resource);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Id);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GainSevenDayAwardReq other) {
      if (other == null) {
        return;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.Resource != 0) {
        Resource = other.Resource;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ActivityId = input.ReadSInt32();
            break;
          }
          case 16: {
            resource_ = (global::ResourcePB) input.ReadEnum();
            break;
          }
          case 24: {
            Id = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GainSevenDayAwardRes : pb::IMessage<GainSevenDayAwardRes> {
    private static readonly pb::MessageParser<GainSevenDayAwardRes> _parser = new pb::MessageParser<GainSevenDayAwardRes>(() => new GainSevenDayAwardRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GainSevenDayAwardRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GainSevenDayAwardRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GainSevenDayAwardRes(GainSevenDayAwardRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      UserSevenDaySigninIndo = other.userSevenDaySigninIndo_ != null ? other.UserSevenDaySigninIndo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GainSevenDayAwardRes Clone() {
      return new GainSevenDayAwardRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///签到奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "user_seven_day_signin_indo" field.</summary>
    public const int UserSevenDaySigninIndoFieldNumber = 3;
    private global::Com.Proto.UserSevenDaySigninInfoPB userSevenDaySigninIndo_;
    /// <summary>
    ///签到详情
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserSevenDaySigninInfoPB UserSevenDaySigninIndo {
      get { return userSevenDaySigninIndo_; }
      set {
        userSevenDaySigninIndo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GainSevenDayAwardRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GainSevenDayAwardRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if (!object.Equals(UserSevenDaySigninIndo, other.UserSevenDaySigninIndo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      if (userSevenDaySigninIndo_ != null) hash ^= UserSevenDaySigninIndo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      if (userSevenDaySigninIndo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserSevenDaySigninIndo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      if (userSevenDaySigninIndo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserSevenDaySigninIndo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GainSevenDayAwardRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      if (other.userSevenDaySigninIndo_ != null) {
        if (userSevenDaySigninIndo_ == null) {
          userSevenDaySigninIndo_ = new global::Com.Proto.UserSevenDaySigninInfoPB();
        }
        UserSevenDaySigninIndo.MergeFrom(other.UserSevenDaySigninIndo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26: {
            if (userSevenDaySigninIndo_ == null) {
              userSevenDaySigninIndo_ = new global::Com.Proto.UserSevenDaySigninInfoPB();
            }
            input.ReadMessage(userSevenDaySigninIndo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 每日体力领取奖励 activityC/getPower
  /// </summary>
  public sealed partial class PowerGetRewardReq : pb::IMessage<PowerGetRewardReq> {
    private static readonly pb::MessageParser<PowerGetRewardReq> _parser = new pb::MessageParser<PowerGetRewardReq>(() => new PowerGetRewardReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PowerGetRewardReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PowerGetRewardReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PowerGetRewardReq(PowerGetRewardReq other) : this() {
      id_ = other.id_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PowerGetRewardReq Clone() {
      return new PowerGetRewardReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///活动id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PowerGetRewardReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PowerGetRewardReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Id);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PowerGetRewardReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PowerGetRewardRes : pb::IMessage<PowerGetRewardRes> {
    private static readonly pb::MessageParser<PowerGetRewardRes> _parser = new pb::MessageParser<PowerGetRewardRes>(() => new PowerGetRewardRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PowerGetRewardRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PowerGetRewardRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PowerGetRewardRes(PowerGetRewardRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      gottenIds_ = other.gottenIds_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PowerGetRewardRes Clone() {
      return new PowerGetRewardRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "gotten_ids" field.</summary>
    public const int GottenIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_gottenIds_codec
        = pb::FieldCodec.ForSInt32(26);
    private readonly pbc::RepeatedField<int> gottenIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///已经领取的奖励列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> GottenIds {
      get { return gottenIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PowerGetRewardRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PowerGetRewardRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if(!gottenIds_.Equals(other.gottenIds_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      hash ^= gottenIds_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      gottenIds_.WriteTo(output, _repeated_gottenIds_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      size += gottenIds_.CalculateSize(_repeated_gottenIds_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PowerGetRewardRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      gottenIds_.Add(other.gottenIds_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26:
          case 24: {
            gottenIds_.AddEntriesFrom(input, _repeated_gottenIds_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 每日体力补领奖励 activityC/buyGetPower
  /// </summary>
  public sealed partial class PowerBuyGetReq : pb::IMessage<PowerBuyGetReq> {
    private static readonly pb::MessageParser<PowerBuyGetReq> _parser = new pb::MessageParser<PowerBuyGetReq>(() => new PowerBuyGetReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PowerBuyGetReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PowerBuyGetReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PowerBuyGetReq(PowerBuyGetReq other) : this() {
      id_ = other.id_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PowerBuyGetReq Clone() {
      return new PowerBuyGetReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///活动id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PowerBuyGetReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PowerBuyGetReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Id);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PowerBuyGetReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PowerBuyGetRes : pb::IMessage<PowerBuyGetRes> {
    private static readonly pb::MessageParser<PowerBuyGetRes> _parser = new pb::MessageParser<PowerBuyGetRes>(() => new PowerBuyGetRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PowerBuyGetRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PowerBuyGetRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PowerBuyGetRes(PowerBuyGetRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      gottenIds_ = other.gottenIds_.Clone();
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PowerBuyGetRes Clone() {
      return new PowerBuyGetRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "gotten_ids" field.</summary>
    public const int GottenIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_gottenIds_codec
        = pb::FieldCodec.ForSInt32(26);
    private readonly pbc::RepeatedField<int> gottenIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///已经领取的奖励列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> GottenIds {
      get { return gottenIds_; }
    }

    /// <summary>Field number for the "user_money" field.</summary>
    public const int UserMoneyFieldNumber = 4;
    private global::Com.Proto.UserMoneyPB userMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PowerBuyGetRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PowerBuyGetRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if(!gottenIds_.Equals(other.gottenIds_)) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      hash ^= gottenIds_.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      gottenIds_.WriteTo(output, _repeated_gottenIds_codec);
      if (userMoney_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UserMoney);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      size += gottenIds_.CalculateSize(_repeated_gottenIds_codec);
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PowerBuyGetRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      gottenIds_.Add(other.gottenIds_);
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26:
          case 24: {
            gottenIds_.AddEntriesFrom(input, _repeated_gottenIds_codec);
            break;
          }
          case 34: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 月签到 activityC/monthSignReward
  /// </summary>
  public sealed partial class MonthSignRewardRes : pb::IMessage<MonthSignRewardRes> {
    private static readonly pb::MessageParser<MonthSignRewardRes> _parser = new pb::MessageParser<MonthSignRewardRes>(() => new MonthSignRewardRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonthSignRewardRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthSignRewardRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthSignRewardRes(MonthSignRewardRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      UserMonthSign = other.userMonthSign_ != null ? other.UserMonthSign.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthSignRewardRes Clone() {
      return new MonthSignRewardRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "user_month_sign" field.</summary>
    public const int UserMonthSignFieldNumber = 3;
    private global::Com.Proto.UserMonthSignPB userMonthSign_;
    /// <summary>
    ///用户月签到信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMonthSignPB UserMonthSign {
      get { return userMonthSign_; }
      set {
        userMonthSign_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonthSignRewardRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonthSignRewardRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if (!object.Equals(UserMonthSign, other.UserMonthSign)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      if (userMonthSign_ != null) hash ^= UserMonthSign.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      if (userMonthSign_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserMonthSign);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      if (userMonthSign_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMonthSign);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonthSignRewardRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      if (other.userMonthSign_ != null) {
        if (userMonthSign_ == null) {
          userMonthSign_ = new global::Com.Proto.UserMonthSignPB();
        }
        UserMonthSign.MergeFrom(other.UserMonthSign);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26: {
            if (userMonthSign_ == null) {
              userMonthSign_ = new global::Com.Proto.UserMonthSignPB();
            }
            input.ReadMessage(userMonthSign_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 月签到补签 activityC/monthSignBuy
  /// </summary>
  public sealed partial class MonthSignBuyReq : pb::IMessage<MonthSignBuyReq> {
    private static readonly pb::MessageParser<MonthSignBuyReq> _parser = new pb::MessageParser<MonthSignBuyReq>(() => new MonthSignBuyReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonthSignBuyReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthSignBuyReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthSignBuyReq(MonthSignBuyReq other) : this() {
      date_ = other.date_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthSignBuyReq Clone() {
      return new MonthSignBuyReq(this);
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 1;
    private int date_;
    /// <summary>
    ///哪天
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Date {
      get { return date_; }
      set {
        date_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonthSignBuyReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonthSignBuyReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Date != other.Date) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Date != 0) hash ^= Date.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Date != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Date);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Date != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Date);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonthSignBuyReq other) {
      if (other == null) {
        return;
      }
      if (other.Date != 0) {
        Date = other.Date;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Date = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MonthSignBuyRes : pb::IMessage<MonthSignBuyRes> {
    private static readonly pb::MessageParser<MonthSignBuyRes> _parser = new pb::MessageParser<MonthSignBuyRes>(() => new MonthSignBuyRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonthSignBuyRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthSignBuyRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthSignBuyRes(MonthSignBuyRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      UserMonthSign = other.userMonthSign_ != null ? other.UserMonthSign.Clone() : null;
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthSignBuyRes Clone() {
      return new MonthSignBuyRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "user_month_sign" field.</summary>
    public const int UserMonthSignFieldNumber = 3;
    private global::Com.Proto.UserMonthSignPB userMonthSign_;
    /// <summary>
    ///用户月签到信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMonthSignPB UserMonthSign {
      get { return userMonthSign_; }
      set {
        userMonthSign_ = value;
      }
    }

    /// <summary>Field number for the "user_money" field.</summary>
    public const int UserMoneyFieldNumber = 4;
    private global::Com.Proto.UserMoneyPB userMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonthSignBuyRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonthSignBuyRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if (!object.Equals(UserMonthSign, other.UserMonthSign)) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      if (userMonthSign_ != null) hash ^= UserMonthSign.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      if (userMonthSign_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserMonthSign);
      }
      if (userMoney_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UserMoney);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      if (userMonthSign_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMonthSign);
      }
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonthSignBuyRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      if (other.userMonthSign_ != null) {
        if (userMonthSign_ == null) {
          userMonthSign_ = new global::Com.Proto.UserMonthSignPB();
        }
        UserMonthSign.MergeFrom(other.UserMonthSign);
      }
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26: {
            if (userMonthSign_ == null) {
              userMonthSign_ = new global::Com.Proto.UserMonthSignPB();
            }
            input.ReadMessage(userMonthSign_);
            break;
          }
          case 34: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 月签到领取累计奖励 activityC/monthSignExtra
  /// </summary>
  public sealed partial class MonthSignExtraRes : pb::IMessage<MonthSignExtraRes> {
    private static readonly pb::MessageParser<MonthSignExtraRes> _parser = new pb::MessageParser<MonthSignExtraRes>(() => new MonthSignExtraRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonthSignExtraRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthSignExtraRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthSignExtraRes(MonthSignExtraRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      UserMonthSign = other.userMonthSign_ != null ? other.UserMonthSign.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthSignExtraRes Clone() {
      return new MonthSignExtraRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "user_month_sign" field.</summary>
    public const int UserMonthSignFieldNumber = 3;
    private global::Com.Proto.UserMonthSignPB userMonthSign_;
    /// <summary>
    ///用户月签到信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMonthSignPB UserMonthSign {
      get { return userMonthSign_; }
      set {
        userMonthSign_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonthSignExtraRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonthSignExtraRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if (!object.Equals(UserMonthSign, other.UserMonthSign)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      if (userMonthSign_ != null) hash ^= UserMonthSign.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      if (userMonthSign_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserMonthSign);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      if (userMonthSign_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMonthSign);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonthSignExtraRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      if (other.userMonthSign_ != null) {
        if (userMonthSign_ == null) {
          userMonthSign_ = new global::Com.Proto.UserMonthSignPB();
        }
        UserMonthSign.MergeFrom(other.UserMonthSign);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26: {
            if (userMonthSign_ == null) {
              userMonthSign_ = new global::Com.Proto.UserMonthSignPB();
            }
            input.ReadMessage(userMonthSign_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 领取首冲奖励请求包
  /// </summary>
  public sealed partial class ReceiveFirstPrizeReq : pb::IMessage<ReceiveFirstPrizeReq> {
    private static readonly pb::MessageParser<ReceiveFirstPrizeReq> _parser = new pb::MessageParser<ReceiveFirstPrizeReq>(() => new ReceiveFirstPrizeReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiveFirstPrizeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveFirstPrizeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveFirstPrizeReq(ReceiveFirstPrizeReq other) : this() {
      group_ = other.group_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveFirstPrizeReq Clone() {
      return new ReceiveFirstPrizeReq(this);
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 1;
    private int group_;
    /// <summary>
    ///选择奖励的分组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiveFirstPrizeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiveFirstPrizeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Group != other.Group) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Group != 0) hash ^= Group.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Group != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Group);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Group != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Group);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiveFirstPrizeReq other) {
      if (other == null) {
        return;
      }
      if (other.Group != 0) {
        Group = other.Group;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Group = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 领取首冲奖励回包
  /// </summary>
  public sealed partial class ReceiveFirstPrizeRes : pb::IMessage<ReceiveFirstPrizeRes> {
    private static readonly pb::MessageParser<ReceiveFirstPrizeRes> _parser = new pb::MessageParser<ReceiveFirstPrizeRes>(() => new ReceiveFirstPrizeRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiveFirstPrizeRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveFirstPrizeRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveFirstPrizeRes(ReceiveFirstPrizeRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      UserExtraInfo = other.userExtraInfo_ != null ? other.UserExtraInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveFirstPrizeRes Clone() {
      return new ReceiveFirstPrizeRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "user_extra_info" field.</summary>
    public const int UserExtraInfoFieldNumber = 3;
    private global::Com.Proto.UserExtraInfoPB userExtraInfo_;
    /// <summary>
    ///用户额外信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserExtraInfoPB UserExtraInfo {
      get { return userExtraInfo_; }
      set {
        userExtraInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiveFirstPrizeRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiveFirstPrizeRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if (!object.Equals(UserExtraInfo, other.UserExtraInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      if (userExtraInfo_ != null) hash ^= UserExtraInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      if (userExtraInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserExtraInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      if (userExtraInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserExtraInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiveFirstPrizeRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      if (other.userExtraInfo_ != null) {
        if (userExtraInfo_ == null) {
          userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
        }
        UserExtraInfo.MergeFrom(other.UserExtraInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26: {
            if (userExtraInfo_ == null) {
              userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
            }
            input.ReadMessage(userExtraInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///----------------------------------成长基金领奖----------------------------------------- 
  /// </summary>
  public sealed partial class GrowthFundAwardReq : pb::IMessage<GrowthFundAwardReq> {
    private static readonly pb::MessageParser<GrowthFundAwardReq> _parser = new pb::MessageParser<GrowthFundAwardReq>(() => new GrowthFundAwardReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrowthFundAwardReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrowthFundAwardReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrowthFundAwardReq(GrowthFundAwardReq other) : this() {
      id_ = other.id_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrowthFundAwardReq Clone() {
      return new GrowthFundAwardReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///选择奖励的ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrowthFundAwardReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrowthFundAwardReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Id);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrowthFundAwardReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrowthFundAwardRes : pb::IMessage<GrowthFundAwardRes> {
    private static readonly pb::MessageParser<GrowthFundAwardRes> _parser = new pb::MessageParser<GrowthFundAwardRes>(() => new GrowthFundAwardRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrowthFundAwardRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrowthFundAwardRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrowthFundAwardRes(GrowthFundAwardRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      UserGrowthFund = other.userGrowthFund_ != null ? other.UserGrowthFund.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrowthFundAwardRes Clone() {
      return new GrowthFundAwardRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "user_growth_fund" field.</summary>
    public const int UserGrowthFundFieldNumber = 3;
    private global::Com.Proto.UserGrowthFundPB userGrowthFund_;
    /// <summary>
    ///用户成长基金领奖信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserGrowthFundPB UserGrowthFund {
      get { return userGrowthFund_; }
      set {
        userGrowthFund_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrowthFundAwardRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrowthFundAwardRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if (!object.Equals(UserGrowthFund, other.UserGrowthFund)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      if (userGrowthFund_ != null) hash ^= UserGrowthFund.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      if (userGrowthFund_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserGrowthFund);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      if (userGrowthFund_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserGrowthFund);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrowthFundAwardRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      if (other.userGrowthFund_ != null) {
        if (userGrowthFund_ == null) {
          userGrowthFund_ = new global::Com.Proto.UserGrowthFundPB();
        }
        UserGrowthFund.MergeFrom(other.UserGrowthFund);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26: {
            if (userGrowthFund_ == null) {
              userGrowthFund_ = new global::Com.Proto.UserGrowthFundPB();
            }
            input.ReadMessage(userGrowthFund_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///领取下载奖励
  /// </summary>
  public sealed partial class ReceiveDownloadAwardsRes : pb::IMessage<ReceiveDownloadAwardsRes> {
    private static readonly pb::MessageParser<ReceiveDownloadAwardsRes> _parser = new pb::MessageParser<ReceiveDownloadAwardsRes>(() => new ReceiveDownloadAwardsRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiveDownloadAwardsRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveDownloadAwardsRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveDownloadAwardsRes(ReceiveDownloadAwardsRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      UserExtraInfo = other.userExtraInfo_ != null ? other.UserExtraInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveDownloadAwardsRes Clone() {
      return new ReceiveDownloadAwardsRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "user_extra_info" field.</summary>
    public const int UserExtraInfoFieldNumber = 3;
    private global::Com.Proto.UserExtraInfoPB userExtraInfo_;
    /// <summary>
    ///用户额外信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserExtraInfoPB UserExtraInfo {
      get { return userExtraInfo_; }
      set {
        userExtraInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiveDownloadAwardsRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiveDownloadAwardsRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if (!object.Equals(UserExtraInfo, other.UserExtraInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      if (userExtraInfo_ != null) hash ^= UserExtraInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      if (userExtraInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserExtraInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      if (userExtraInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserExtraInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiveDownloadAwardsRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      if (other.userExtraInfo_ != null) {
        if (userExtraInfo_ == null) {
          userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
        }
        UserExtraInfo.MergeFrom(other.UserExtraInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26: {
            if (userExtraInfo_ == null) {
              userExtraInfo_ = new global::Com.Proto.UserExtraInfoPB();
            }
            input.ReadMessage(userExtraInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///领取活动请求包
  /// </summary>
  public sealed partial class ReceiveActivityAwardsReq : pb::IMessage<ReceiveActivityAwardsReq> {
    private static readonly pb::MessageParser<ReceiveActivityAwardsReq> _parser = new pb::MessageParser<ReceiveActivityAwardsReq>(() => new ReceiveActivityAwardsReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiveActivityAwardsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveActivityAwardsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveActivityAwardsReq(ReceiveActivityAwardsReq other) : this() {
      optionalActivityType_ = other.optionalActivityType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveActivityAwardsReq Clone() {
      return new ReceiveActivityAwardsReq(this);
    }

    /// <summary>Field number for the "optional_activity_type" field.</summary>
    public const int OptionalActivityTypeFieldNumber = 1;
    private global::OptionalActivityTypePB optionalActivityType_ = 0;
    /// <summary>
    ///目标活动领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::OptionalActivityTypePB OptionalActivityType {
      get { return optionalActivityType_; }
      set {
        optionalActivityType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiveActivityAwardsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiveActivityAwardsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OptionalActivityType != other.OptionalActivityType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OptionalActivityType != 0) hash ^= OptionalActivityType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OptionalActivityType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OptionalActivityType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OptionalActivityType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OptionalActivityType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiveActivityAwardsReq other) {
      if (other == null) {
        return;
      }
      if (other.OptionalActivityType != 0) {
        OptionalActivityType = other.OptionalActivityType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            optionalActivityType_ = (global::OptionalActivityTypePB) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///领取活动回包
  /// </summary>
  public sealed partial class ReceiveActivityAwardsRes : pb::IMessage<ReceiveActivityAwardsRes> {
    private static readonly pb::MessageParser<ReceiveActivityAwardsRes> _parser = new pb::MessageParser<ReceiveActivityAwardsRes>(() => new ReceiveActivityAwardsRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiveActivityAwardsRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveActivityAwardsRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveActivityAwardsRes(ReceiveActivityAwardsRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      UserActivityExtraInfo = other.userActivityExtraInfo_ != null ? other.UserActivityExtraInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveActivityAwardsRes Clone() {
      return new ReceiveActivityAwardsRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "user_activity_extra_info" field.</summary>
    public const int UserActivityExtraInfoFieldNumber = 3;
    private global::Com.Proto.UserActivityExtraInfoPB userActivityExtraInfo_;
    /// <summary>
    ///用户活动额外信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserActivityExtraInfoPB UserActivityExtraInfo {
      get { return userActivityExtraInfo_; }
      set {
        userActivityExtraInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiveActivityAwardsRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiveActivityAwardsRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if (!object.Equals(UserActivityExtraInfo, other.UserActivityExtraInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      if (userActivityExtraInfo_ != null) hash ^= UserActivityExtraInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      if (userActivityExtraInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserActivityExtraInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      if (userActivityExtraInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserActivityExtraInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiveActivityAwardsRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      if (other.userActivityExtraInfo_ != null) {
        if (userActivityExtraInfo_ == null) {
          userActivityExtraInfo_ = new global::Com.Proto.UserActivityExtraInfoPB();
        }
        UserActivityExtraInfo.MergeFrom(other.UserActivityExtraInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26: {
            if (userActivityExtraInfo_ == null) {
              userActivityExtraInfo_ = new global::Com.Proto.UserActivityExtraInfoPB();
            }
            input.ReadMessage(userActivityExtraInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///    activityC/getHolidayInfo
  /// </summary>
  public sealed partial class GetUserActivityHolidayInfoReq : pb::IMessage<GetUserActivityHolidayInfoReq> {
    private static readonly pb::MessageParser<GetUserActivityHolidayInfoReq> _parser = new pb::MessageParser<GetUserActivityHolidayInfoReq>(() => new GetUserActivityHolidayInfoReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserActivityHolidayInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserActivityHolidayInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserActivityHolidayInfoReq(GetUserActivityHolidayInfoReq other) : this() {
      activityId_ = other.activityId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserActivityHolidayInfoReq Clone() {
      return new GetUserActivityHolidayInfoReq(this);
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 1;
    private int activityId_;
    /// <summary>
    ///活动ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserActivityHolidayInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserActivityHolidayInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityId != other.ActivityId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(ActivityId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActivityId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserActivityHolidayInfoReq other) {
      if (other == null) {
        return;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ActivityId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUserActivityHolidayInfoRes : pb::IMessage<GetUserActivityHolidayInfoRes> {
    private static readonly pb::MessageParser<GetUserActivityHolidayInfoRes> _parser = new pb::MessageParser<GetUserActivityHolidayInfoRes>(() => new GetUserActivityHolidayInfoRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserActivityHolidayInfoRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserActivityHolidayInfoRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserActivityHolidayInfoRes(GetUserActivityHolidayInfoRes other) : this() {
      ret_ = other.ret_;
      UserActivityHolidayInfoPB = other.userActivityHolidayInfoPB_ != null ? other.UserActivityHolidayInfoPB.Clone() : null;
      UserItem = other.userItem_ != null ? other.UserItem.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserActivityHolidayInfoRes Clone() {
      return new GetUserActivityHolidayInfoRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "userActivityHolidayInfoPB" field.</summary>
    public const int UserActivityHolidayInfoPBFieldNumber = 2;
    private global::Com.Proto.UserActivityHolidayInfoPB userActivityHolidayInfoPB_;
    /// <summary>
    ///用户国庆活动信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserActivityHolidayInfoPB UserActivityHolidayInfoPB {
      get { return userActivityHolidayInfoPB_; }
      set {
        userActivityHolidayInfoPB_ = value;
      }
    }

    /// <summary>Field number for the "user_item" field.</summary>
    public const int UserItemFieldNumber = 3;
    private global::Com.Proto.UserItemPB userItem_;
    /// <summary>
    ///用户道具信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserItemPB UserItem {
      get { return userItem_; }
      set {
        userItem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserActivityHolidayInfoRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserActivityHolidayInfoRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserActivityHolidayInfoPB, other.UserActivityHolidayInfoPB)) return false;
      if (!object.Equals(UserItem, other.UserItem)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userActivityHolidayInfoPB_ != null) hash ^= UserActivityHolidayInfoPB.GetHashCode();
      if (userItem_ != null) hash ^= UserItem.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userActivityHolidayInfoPB_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserActivityHolidayInfoPB);
      }
      if (userItem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserItem);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userActivityHolidayInfoPB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserActivityHolidayInfoPB);
      }
      if (userItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserItem);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserActivityHolidayInfoRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userActivityHolidayInfoPB_ != null) {
        if (userActivityHolidayInfoPB_ == null) {
          userActivityHolidayInfoPB_ = new global::Com.Proto.UserActivityHolidayInfoPB();
        }
        UserActivityHolidayInfoPB.MergeFrom(other.UserActivityHolidayInfoPB);
      }
      if (other.userItem_ != null) {
        if (userItem_ == null) {
          userItem_ = new global::Com.Proto.UserItemPB();
        }
        UserItem.MergeFrom(other.UserItem);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userActivityHolidayInfoPB_ == null) {
              userActivityHolidayInfoPB_ = new global::Com.Proto.UserActivityHolidayInfoPB();
            }
            input.ReadMessage(userActivityHolidayInfoPB_);
            break;
          }
          case 26: {
            if (userItem_ == null) {
              userItem_ = new global::Com.Proto.UserItemPB();
            }
            input.ReadMessage(userItem_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///    activityC/drawAwards
  /// </summary>
  public sealed partial class DrawingRewardsReq : pb::IMessage<DrawingRewardsReq> {
    private static readonly pb::MessageParser<DrawingRewardsReq> _parser = new pb::MessageParser<DrawingRewardsReq>(() => new DrawingRewardsReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DrawingRewardsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawingRewardsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawingRewardsReq(DrawingRewardsReq other) : this() {
      type_ = other.type_;
      activityId_ = other.activityId_;
      player_ = other.player_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawingRewardsReq Clone() {
      return new DrawingRewardsReq(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///抽取的类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 2;
    private int activityId_;
    /// <summary>
    ///活动ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 3;
    private int player_;
    /// <summary>
    ///npcID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DrawingRewardsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DrawingRewardsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (ActivityId != other.ActivityId) return false;
      if (Player != other.Player) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      if (Player != 0) hash ^= Player.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Type);
      }
      if (ActivityId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(ActivityId);
      }
      if (Player != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Player);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Type);
      }
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActivityId);
      }
      if (Player != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Player);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DrawingRewardsReq other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.Player != 0) {
        Player = other.Player;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Type = input.ReadSInt32();
            break;
          }
          case 16: {
            ActivityId = input.ReadSInt32();
            break;
          }
          case 24: {
            Player = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DrawingRewardsRes : pb::IMessage<DrawingRewardsRes> {
    private static readonly pb::MessageParser<DrawingRewardsRes> _parser = new pb::MessageParser<DrawingRewardsRes>(() => new DrawingRewardsRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DrawingRewardsRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawingRewardsRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawingRewardsRes(DrawingRewardsRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      UserActivityHolidayInfoPB = other.userActivityHolidayInfoPB_ != null ? other.UserActivityHolidayInfoPB.Clone() : null;
      UserItem = other.userItem_ != null ? other.UserItem.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawingRewardsRes Clone() {
      return new DrawingRewardsRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "userActivityHolidayInfoPB" field.</summary>
    public const int UserActivityHolidayInfoPBFieldNumber = 3;
    private global::Com.Proto.UserActivityHolidayInfoPB userActivityHolidayInfoPB_;
    /// <summary>
    ///用户国庆活动信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserActivityHolidayInfoPB UserActivityHolidayInfoPB {
      get { return userActivityHolidayInfoPB_; }
      set {
        userActivityHolidayInfoPB_ = value;
      }
    }

    /// <summary>Field number for the "user_item" field.</summary>
    public const int UserItemFieldNumber = 4;
    private global::Com.Proto.UserItemPB userItem_;
    /// <summary>
    ///用户道具信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserItemPB UserItem {
      get { return userItem_; }
      set {
        userItem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DrawingRewardsRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DrawingRewardsRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if (!object.Equals(UserActivityHolidayInfoPB, other.UserActivityHolidayInfoPB)) return false;
      if (!object.Equals(UserItem, other.UserItem)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      if (userActivityHolidayInfoPB_ != null) hash ^= UserActivityHolidayInfoPB.GetHashCode();
      if (userItem_ != null) hash ^= UserItem.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      if (userActivityHolidayInfoPB_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserActivityHolidayInfoPB);
      }
      if (userItem_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UserItem);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      if (userActivityHolidayInfoPB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserActivityHolidayInfoPB);
      }
      if (userItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserItem);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DrawingRewardsRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      if (other.userActivityHolidayInfoPB_ != null) {
        if (userActivityHolidayInfoPB_ == null) {
          userActivityHolidayInfoPB_ = new global::Com.Proto.UserActivityHolidayInfoPB();
        }
        UserActivityHolidayInfoPB.MergeFrom(other.UserActivityHolidayInfoPB);
      }
      if (other.userItem_ != null) {
        if (userItem_ == null) {
          userItem_ = new global::Com.Proto.UserItemPB();
        }
        UserItem.MergeFrom(other.UserItem);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26: {
            if (userActivityHolidayInfoPB_ == null) {
              userActivityHolidayInfoPB_ = new global::Com.Proto.UserActivityHolidayInfoPB();
            }
            input.ReadMessage(userActivityHolidayInfoPB_);
            break;
          }
          case 34: {
            if (userItem_ == null) {
              userItem_ = new global::Com.Proto.UserItemPB();
            }
            input.ReadMessage(userItem_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///    activityC/gainActiveHolidayAward
  /// </summary>
  public sealed partial class GainActiveHolidayAwardReq : pb::IMessage<GainActiveHolidayAwardReq> {
    private static readonly pb::MessageParser<GainActiveHolidayAwardReq> _parser = new pb::MessageParser<GainActiveHolidayAwardReq>(() => new GainActiveHolidayAwardReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GainActiveHolidayAwardReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GainActiveHolidayAwardReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GainActiveHolidayAwardReq(GainActiveHolidayAwardReq other) : this() {
      weight_ = other.weight_;
      activityId_ = other.activityId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GainActiveHolidayAwardReq Clone() {
      return new GainActiveHolidayAwardReq(this);
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 1;
    private int weight_;
    /// <summary>
    ///权重
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 2;
    private int activityId_;
    /// <summary>
    ///活动ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GainActiveHolidayAwardReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GainActiveHolidayAwardReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Weight != other.Weight) return false;
      if (ActivityId != other.ActivityId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Weight != 0) hash ^= Weight.GetHashCode();
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Weight != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Weight);
      }
      if (ActivityId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(ActivityId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Weight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Weight);
      }
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActivityId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GainActiveHolidayAwardReq other) {
      if (other == null) {
        return;
      }
      if (other.Weight != 0) {
        Weight = other.Weight;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Weight = input.ReadSInt32();
            break;
          }
          case 16: {
            ActivityId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GainActiveHolidayAwardRes : pb::IMessage<GainActiveHolidayAwardRes> {
    private static readonly pb::MessageParser<GainActiveHolidayAwardRes> _parser = new pb::MessageParser<GainActiveHolidayAwardRes>(() => new GainActiveHolidayAwardRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GainActiveHolidayAwardRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GainActiveHolidayAwardRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GainActiveHolidayAwardRes(GainActiveHolidayAwardRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      UserActivityHolidayInfoPB = other.userActivityHolidayInfoPB_ != null ? other.UserActivityHolidayInfoPB.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GainActiveHolidayAwardRes Clone() {
      return new GainActiveHolidayAwardRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "userActivityHolidayInfoPB" field.</summary>
    public const int UserActivityHolidayInfoPBFieldNumber = 3;
    private global::Com.Proto.UserActivityHolidayInfoPB userActivityHolidayInfoPB_;
    /// <summary>
    ///用户国庆活动信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserActivityHolidayInfoPB UserActivityHolidayInfoPB {
      get { return userActivityHolidayInfoPB_; }
      set {
        userActivityHolidayInfoPB_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GainActiveHolidayAwardRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GainActiveHolidayAwardRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if (!object.Equals(UserActivityHolidayInfoPB, other.UserActivityHolidayInfoPB)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      if (userActivityHolidayInfoPB_ != null) hash ^= UserActivityHolidayInfoPB.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      if (userActivityHolidayInfoPB_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserActivityHolidayInfoPB);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      if (userActivityHolidayInfoPB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserActivityHolidayInfoPB);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GainActiveHolidayAwardRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      if (other.userActivityHolidayInfoPB_ != null) {
        if (userActivityHolidayInfoPB_ == null) {
          userActivityHolidayInfoPB_ = new global::Com.Proto.UserActivityHolidayInfoPB();
        }
        UserActivityHolidayInfoPB.MergeFrom(other.UserActivityHolidayInfoPB);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26: {
            if (userActivityHolidayInfoPB_ == null) {
              userActivityHolidayInfoPB_ = new global::Com.Proto.UserActivityHolidayInfoPB();
            }
            input.ReadMessage(userActivityHolidayInfoPB_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///累计充值领取请求包
  /// </summary>
  public sealed partial class ReceiveActivityAccumulativeRechargeAwardReq : pb::IMessage<ReceiveActivityAccumulativeRechargeAwardReq> {
    private static readonly pb::MessageParser<ReceiveActivityAccumulativeRechargeAwardReq> _parser = new pb::MessageParser<ReceiveActivityAccumulativeRechargeAwardReq>(() => new ReceiveActivityAccumulativeRechargeAwardReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiveActivityAccumulativeRechargeAwardReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveActivityAccumulativeRechargeAwardReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveActivityAccumulativeRechargeAwardReq(ReceiveActivityAccumulativeRechargeAwardReq other) : this() {
      id_ = other.id_;
      activityId_ = other.activityId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveActivityAccumulativeRechargeAwardReq Clone() {
      return new ReceiveActivityAccumulativeRechargeAwardReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///选择奖励的档位ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 2;
    private int activityId_;
    /// <summary>
    ///选择奖励的活动ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiveActivityAccumulativeRechargeAwardReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiveActivityAccumulativeRechargeAwardReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ActivityId != other.ActivityId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
      if (ActivityId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(ActivityId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Id);
      }
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActivityId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiveActivityAccumulativeRechargeAwardReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
          case 16: {
            ActivityId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///累计充值领取回包
  /// </summary>
  public sealed partial class ReceiveActivityAccumulativeRechargeAwardRes : pb::IMessage<ReceiveActivityAccumulativeRechargeAwardRes> {
    private static readonly pb::MessageParser<ReceiveActivityAccumulativeRechargeAwardRes> _parser = new pb::MessageParser<ReceiveActivityAccumulativeRechargeAwardRes>(() => new ReceiveActivityAccumulativeRechargeAwardRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiveActivityAccumulativeRechargeAwardRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerActivityReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveActivityAccumulativeRechargeAwardRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveActivityAccumulativeRechargeAwardRes(ReceiveActivityAccumulativeRechargeAwardRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      UserActivityAccumulativeRechargeInfo = other.userActivityAccumulativeRechargeInfo_ != null ? other.UserActivityAccumulativeRechargeInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveActivityAccumulativeRechargeAwardRes Clone() {
      return new ReceiveActivityAccumulativeRechargeAwardRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "user_activity_accumulative_recharge_info" field.</summary>
    public const int UserActivityAccumulativeRechargeInfoFieldNumber = 3;
    private global::Com.Proto.UserActivityAccumulativeRechargeInfoPB userActivityAccumulativeRechargeInfo_;
    /// <summary>
    ///用户领奖情况
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserActivityAccumulativeRechargeInfoPB UserActivityAccumulativeRechargeInfo {
      get { return userActivityAccumulativeRechargeInfo_; }
      set {
        userActivityAccumulativeRechargeInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiveActivityAccumulativeRechargeAwardRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiveActivityAccumulativeRechargeAwardRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if (!object.Equals(UserActivityAccumulativeRechargeInfo, other.UserActivityAccumulativeRechargeInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      if (userActivityAccumulativeRechargeInfo_ != null) hash ^= UserActivityAccumulativeRechargeInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      if (userActivityAccumulativeRechargeInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserActivityAccumulativeRechargeInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      if (userActivityAccumulativeRechargeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserActivityAccumulativeRechargeInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiveActivityAccumulativeRechargeAwardRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      if (other.userActivityAccumulativeRechargeInfo_ != null) {
        if (userActivityAccumulativeRechargeInfo_ == null) {
          userActivityAccumulativeRechargeInfo_ = new global::Com.Proto.UserActivityAccumulativeRechargeInfoPB();
        }
        UserActivityAccumulativeRechargeInfo.MergeFrom(other.UserActivityAccumulativeRechargeInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26: {
            if (userActivityAccumulativeRechargeInfo_ == null) {
              userActivityAccumulativeRechargeInfo_ = new global::Com.Proto.UserActivityAccumulativeRechargeInfoPB();
            }
            input.ReadMessage(userActivityAccumulativeRechargeInfo_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
