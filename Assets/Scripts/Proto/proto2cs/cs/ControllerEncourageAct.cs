// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller_encourage_act.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from controller_encourage_act.proto</summary>
  public static partial class ControllerEncourageActReflection {

    #region Descriptor
    /// <summary>File descriptor for controller_encourage_act.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControllerEncourageActReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5jb250cm9sbGVyX2VuY291cmFnZV9hY3QucHJvdG8SCWNvbS5wcm90bxoK",
            "YmFzZS5wcm90bxodYmVhbl9lbmNvdXJhZ2VfYWN0X3J1bGUucHJvdG8aHWJl",
            "YW5fdXNlcl9lbmNvdXJhZ2VfYWN0LnByb3RvGhRiZWFuX3VzZXJfaXRlbS5w",
            "cm90bxoVYmVhbl91c2VyX21vbmV5LnByb3RvGhRiZWFuX3VzZXJfZmFucy5w",
            "cm90bxoVYmVhbl91c2VyX3Bvd2VyLnByb3RvGhBiZWFuX2F3YXJkLnByb3Rv",
            "GiViZWFuX3VzZXJfYWN0aXZpdHlfaG9saWRheV9pbmZvLnByb3RvIsYCChRF",
            "bmNvdXJhZ2VBY3RSdWxlc1JlcxILCgNyZXQYASABKBESPwoYZW5jb3VyYWdl",
            "X2FjdGl2aXR5X3J1bGVzGAIgAygLMh0uY29tLnByb3RvLkVuY291cmFnZUFj",
            "dFJ1bGVQQhJOCiBlbmNvdXJhZ2VfYWN0aXZpdHlfcmVmcmVzaF9ydWxlcxgD",
            "IAMoCzIkLmNvbS5wcm90by5FbmNvdXJhZ2VBY3RSZWZyZXNoUnVsZVBCEkgK",
            "HWVuY291cmFnZV9hY3Rpdml0eV9kb25lX3J1bGVzGAQgAygLMiEuY29tLnBy",
            "b3RvLkVuY291cmFnZUFjdERvbmVSdWxlUEISRgocZW5jb3VyYWdlX2FjdGl2",
            "aXR5X2J1eV9ydWxlcxgFIAMoCzIgLmNvbS5wcm90by5FbmNvdXJhZ2VBY3RC",
            "dXlSdWxlUEIixgEKEk15RW5jb3VyYWdlQWN0c1JlcxILCgNyZXQYASABKBES",
            "PwoYdXNlcl9lbmNvdXJhZ2VfYWN0aXZpdHlzGAIgAygLMh0uY29tLnByb3Rv",
            "LlVzZXJFbmNvdXJhZ2VBY3RQQhIVCg1yZWZyZXNoX2NvdW50GAMgASgREhgK",
            "EG5leHRfcmVmcmVzaFRpbWUYBCABKBISGAoQbGVmdF9pbnRlcl9jb3VudBgF",
            "IAEoERIXCg9idXlfaW50ZXJfY291bnQYBiABKBEiGAoKUmVmcmVzaFJlcRIK",
            "CgJpZBgBIAEoESKFAQoKUmVmcmVzaFJlcxILCgNyZXQYASABKBESPgoXdXNl",
            "cl9lbmNvdXJhZ2VfYWN0aXZpdHkYAiABKAsyHS5jb20ucHJvdG8uVXNlckVu",
            "Y291cmFnZUFjdFBCEioKCnVzZXJfbW9uZXkYAyABKAsyFi5jb20ucHJvdG8u",
            "VXNlck1vbmV5UEIiJgoIU3RhcnRSZXESCgoCaWQYASABKBESDgoGYWN0X2lk",
            "GAIgASgRIsYBCghTdGFydFJlcxILCgNyZXQYASABKBESPgoXdXNlcl9lbmNv",
            "dXJhZ2VfYWN0aXZpdHkYAiABKAsyHS5jb20ucHJvdG8uVXNlckVuY291cmFn",
            "ZUFjdFBCEikKCnVzZXJfaXRlbXMYAyADKAsyFS5jb20ucHJvdG8uVXNlckl0",
            "ZW1QQhIoCgl1c2VyX2ZhbnMYBCADKAsyFS5jb20ucHJvdG8uVXNlckZhbnNQ",
            "QhIYChBsZWZ0X2ludGVyX2NvdW50GAUgASgRIikKC0dldEF3YXJkUmVxEgoK",
            "AmlkGAEgASgREg4KBmFjdF9pZBgCIAEoESLaAQoLR2V0QXdhcmRSZXMSCwoD",
            "cmV0GAEgASgREj4KF3VzZXJfZW5jb3VyYWdlX2FjdGl2aXR5GAIgASgLMh0u",
            "Y29tLnByb3RvLlVzZXJFbmNvdXJhZ2VBY3RQQhIoCgxleHRyYV9hd2FyZHMY",
            "AyADKAsyEi5jb20ucHJvdG8uQXdhcmRQQhIiCgZhd2FyZHMYBCADKAsyEi5j",
            "b20ucHJvdG8uQXdhcmRQQhIwCg1kcm9wcGluZ19pdGVtGAUgAygLMhkuY29t",
            "LnByb3RvLkRyb3BwaW5nSXRlbVBCIi4KEERvbmVJbW1lZGlhdGVSZXESCgoC",
            "aWQYASABKBESDgoGYWN0X2lkGAIgASgRIosCChBEb25lSW1tZWRpYXRlUmVz",
            "EgsKA3JldBgBIAEoERI+Chd1c2VyX2VuY291cmFnZV9hY3Rpdml0eRgCIAEo",
            "CzIdLmNvbS5wcm90by5Vc2VyRW5jb3VyYWdlQWN0UEISKgoKdXNlcl9tb25l",
            "eRgDIAEoCzIWLmNvbS5wcm90by5Vc2VyTW9uZXlQQhIoCgxleHRyYV9hd2Fy",
            "ZHMYBCADKAsyEi5jb20ucHJvdG8uQXdhcmRQQhIiCgZhd2FyZHMYBSADKAsy",
            "Ei5jb20ucHJvdG8uQXdhcmRQQhIwCg1kcm9wcGluZ19pdGVtGAYgAygLMhku",
            "Y29tLnByb3RvLkRyb3BwaW5nSXRlbVBCIn4KEEJ1eUludGVyQ291bnRSZXMS",
            "CwoDcmV0GAEgASgREhgKEGxlZnRfaW50ZXJfY291bnQYAiABKBESFwoPYnV5",
            "X2ludGVyX2NvdW50GAMgASgREioKCnVzZXJfbW9uZXkYBCABKAsyFi5jb20u",
            "cHJvdG8uVXNlck1vbmV5UEJCPwofbmV0LmdhbGFzcG9ydHMuYmlnc3Rhci5w",
            "cm90b2NvbEIcRW5jb3VyYWdlQWN0Q29udHJvbGxlclByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanEncourageActRuleReflection.Descriptor, global::Com.Proto.BeanUserEncourageActReflection.Descriptor, global::Com.Proto.BeanUserItemReflection.Descriptor, global::Com.Proto.BeanUserMoneyReflection.Descriptor, global::Com.Proto.BeanUserFansReflection.Descriptor, global::Com.Proto.BeanUserPowerReflection.Descriptor, global::Com.Proto.BeanAwardReflection.Descriptor, global::Com.Proto.BeanUserActivityHolidayInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.EncourageActRulesRes), global::Com.Proto.EncourageActRulesRes.Parser, new[]{ "Ret", "EncourageActivityRules", "EncourageActivityRefreshRules", "EncourageActivityDoneRules", "EncourageActivityBuyRules" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.MyEncourageActsRes), global::Com.Proto.MyEncourageActsRes.Parser, new[]{ "Ret", "UserEncourageActivitys", "RefreshCount", "NextRefreshTime", "LeftInterCount", "BuyInterCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.RefreshReq), global::Com.Proto.RefreshReq.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.RefreshRes), global::Com.Proto.RefreshRes.Parser, new[]{ "Ret", "UserEncourageActivity", "UserMoney" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.StartReq), global::Com.Proto.StartReq.Parser, new[]{ "Id", "ActId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.StartRes), global::Com.Proto.StartRes.Parser, new[]{ "Ret", "UserEncourageActivity", "UserItems", "UserFans", "LeftInterCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GetAwardReq), global::Com.Proto.GetAwardReq.Parser, new[]{ "Id", "ActId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GetAwardRes), global::Com.Proto.GetAwardRes.Parser, new[]{ "Ret", "UserEncourageActivity", "ExtraAwards", "Awards", "DroppingItem" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.DoneImmediateReq), global::Com.Proto.DoneImmediateReq.Parser, new[]{ "Id", "ActId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.DoneImmediateRes), global::Com.Proto.DoneImmediateRes.Parser, new[]{ "Ret", "UserEncourageActivity", "UserMoney", "ExtraAwards", "Awards", "DroppingItem" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.BuyInterCountRes), global::Com.Proto.BuyInterCountRes.Parser, new[]{ "Ret", "LeftInterCount", "BuyInterCount", "UserMoney" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///规则 encourageActC/rules
  /// </summary>
  public sealed partial class EncourageActRulesRes : pb::IMessage<EncourageActRulesRes> {
    private static readonly pb::MessageParser<EncourageActRulesRes> _parser = new pb::MessageParser<EncourageActRulesRes>(() => new EncourageActRulesRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncourageActRulesRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerEncourageActReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncourageActRulesRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncourageActRulesRes(EncourageActRulesRes other) : this() {
      ret_ = other.ret_;
      encourageActivityRules_ = other.encourageActivityRules_.Clone();
      encourageActivityRefreshRules_ = other.encourageActivityRefreshRules_.Clone();
      encourageActivityDoneRules_ = other.encourageActivityDoneRules_.Clone();
      encourageActivityBuyRules_ = other.encourageActivityBuyRules_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncourageActRulesRes Clone() {
      return new EncourageActRulesRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "encourage_activity_rules" field.</summary>
    public const int EncourageActivityRulesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.EncourageActRulePB> _repeated_encourageActivityRules_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.EncourageActRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.EncourageActRulePB> encourageActivityRules_ = new pbc::RepeatedField<global::Com.Proto.EncourageActRulePB>();
    /// <summary>
    ///活动规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.EncourageActRulePB> EncourageActivityRules {
      get { return encourageActivityRules_; }
    }

    /// <summary>Field number for the "encourage_activity_refresh_rules" field.</summary>
    public const int EncourageActivityRefreshRulesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.EncourageActRefreshRulePB> _repeated_encourageActivityRefreshRules_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.EncourageActRefreshRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.EncourageActRefreshRulePB> encourageActivityRefreshRules_ = new pbc::RepeatedField<global::Com.Proto.EncourageActRefreshRulePB>();
    /// <summary>
    ///刷新规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.EncourageActRefreshRulePB> EncourageActivityRefreshRules {
      get { return encourageActivityRefreshRules_; }
    }

    /// <summary>Field number for the "encourage_activity_done_rules" field.</summary>
    public const int EncourageActivityDoneRulesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.EncourageActDoneRulePB> _repeated_encourageActivityDoneRules_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.EncourageActDoneRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.EncourageActDoneRulePB> encourageActivityDoneRules_ = new pbc::RepeatedField<global::Com.Proto.EncourageActDoneRulePB>();
    /// <summary>
    ///立即完成规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.EncourageActDoneRulePB> EncourageActivityDoneRules {
      get { return encourageActivityDoneRules_; }
    }

    /// <summary>Field number for the "encourage_activity_buy_rules" field.</summary>
    public const int EncourageActivityBuyRulesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Com.Proto.EncourageActBuyRulePB> _repeated_encourageActivityBuyRules_codec
        = pb::FieldCodec.ForMessage(42, global::Com.Proto.EncourageActBuyRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.EncourageActBuyRulePB> encourageActivityBuyRules_ = new pbc::RepeatedField<global::Com.Proto.EncourageActBuyRulePB>();
    /// <summary>
    ///购买参与次数规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.EncourageActBuyRulePB> EncourageActivityBuyRules {
      get { return encourageActivityBuyRules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncourageActRulesRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncourageActRulesRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!encourageActivityRules_.Equals(other.encourageActivityRules_)) return false;
      if(!encourageActivityRefreshRules_.Equals(other.encourageActivityRefreshRules_)) return false;
      if(!encourageActivityDoneRules_.Equals(other.encourageActivityDoneRules_)) return false;
      if(!encourageActivityBuyRules_.Equals(other.encourageActivityBuyRules_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= encourageActivityRules_.GetHashCode();
      hash ^= encourageActivityRefreshRules_.GetHashCode();
      hash ^= encourageActivityDoneRules_.GetHashCode();
      hash ^= encourageActivityBuyRules_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      encourageActivityRules_.WriteTo(output, _repeated_encourageActivityRules_codec);
      encourageActivityRefreshRules_.WriteTo(output, _repeated_encourageActivityRefreshRules_codec);
      encourageActivityDoneRules_.WriteTo(output, _repeated_encourageActivityDoneRules_codec);
      encourageActivityBuyRules_.WriteTo(output, _repeated_encourageActivityBuyRules_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += encourageActivityRules_.CalculateSize(_repeated_encourageActivityRules_codec);
      size += encourageActivityRefreshRules_.CalculateSize(_repeated_encourageActivityRefreshRules_codec);
      size += encourageActivityDoneRules_.CalculateSize(_repeated_encourageActivityDoneRules_codec);
      size += encourageActivityBuyRules_.CalculateSize(_repeated_encourageActivityBuyRules_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncourageActRulesRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      encourageActivityRules_.Add(other.encourageActivityRules_);
      encourageActivityRefreshRules_.Add(other.encourageActivityRefreshRules_);
      encourageActivityDoneRules_.Add(other.encourageActivityDoneRules_);
      encourageActivityBuyRules_.Add(other.encourageActivityBuyRules_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            encourageActivityRules_.AddEntriesFrom(input, _repeated_encourageActivityRules_codec);
            break;
          }
          case 26: {
            encourageActivityRefreshRules_.AddEntriesFrom(input, _repeated_encourageActivityRefreshRules_codec);
            break;
          }
          case 34: {
            encourageActivityDoneRules_.AddEntriesFrom(input, _repeated_encourageActivityDoneRules_codec);
            break;
          }
          case 42: {
            encourageActivityBuyRules_.AddEntriesFrom(input, _repeated_encourageActivityBuyRules_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///应援活动列表 encourageActC/acts
  /// </summary>
  public sealed partial class MyEncourageActsRes : pb::IMessage<MyEncourageActsRes> {
    private static readonly pb::MessageParser<MyEncourageActsRes> _parser = new pb::MessageParser<MyEncourageActsRes>(() => new MyEncourageActsRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MyEncourageActsRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerEncourageActReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyEncourageActsRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyEncourageActsRes(MyEncourageActsRes other) : this() {
      ret_ = other.ret_;
      userEncourageActivitys_ = other.userEncourageActivitys_.Clone();
      refreshCount_ = other.refreshCount_;
      nextRefreshTime_ = other.nextRefreshTime_;
      leftInterCount_ = other.leftInterCount_;
      buyInterCount_ = other.buyInterCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyEncourageActsRes Clone() {
      return new MyEncourageActsRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_encourage_activitys" field.</summary>
    public const int UserEncourageActivitysFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.UserEncourageActPB> _repeated_userEncourageActivitys_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.UserEncourageActPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserEncourageActPB> userEncourageActivitys_ = new pbc::RepeatedField<global::Com.Proto.UserEncourageActPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserEncourageActPB> UserEncourageActivitys {
      get { return userEncourageActivitys_; }
    }

    /// <summary>Field number for the "refresh_count" field.</summary>
    public const int RefreshCountFieldNumber = 3;
    private int refreshCount_;
    /// <summary>
    ///当天手动刷新的次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RefreshCount {
      get { return refreshCount_; }
      set {
        refreshCount_ = value;
      }
    }

    /// <summary>Field number for the "next_refreshTime" field.</summary>
    public const int NextRefreshTimeFieldNumber = 4;
    private long nextRefreshTime_;
    /// <summary>
    ///下次自动刷新的时间点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NextRefreshTime {
      get { return nextRefreshTime_; }
      set {
        nextRefreshTime_ = value;
      }
    }

    /// <summary>Field number for the "left_inter_count" field.</summary>
    public const int LeftInterCountFieldNumber = 5;
    private int leftInterCount_;
    /// <summary>
    ///当天剩余参与活动次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeftInterCount {
      get { return leftInterCount_; }
      set {
        leftInterCount_ = value;
      }
    }

    /// <summary>Field number for the "buy_inter_count" field.</summary>
    public const int BuyInterCountFieldNumber = 6;
    private int buyInterCount_;
    /// <summary>
    ///当天购买参与活动次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuyInterCount {
      get { return buyInterCount_; }
      set {
        buyInterCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MyEncourageActsRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MyEncourageActsRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!userEncourageActivitys_.Equals(other.userEncourageActivitys_)) return false;
      if (RefreshCount != other.RefreshCount) return false;
      if (NextRefreshTime != other.NextRefreshTime) return false;
      if (LeftInterCount != other.LeftInterCount) return false;
      if (BuyInterCount != other.BuyInterCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= userEncourageActivitys_.GetHashCode();
      if (RefreshCount != 0) hash ^= RefreshCount.GetHashCode();
      if (NextRefreshTime != 0L) hash ^= NextRefreshTime.GetHashCode();
      if (LeftInterCount != 0) hash ^= LeftInterCount.GetHashCode();
      if (BuyInterCount != 0) hash ^= BuyInterCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      userEncourageActivitys_.WriteTo(output, _repeated_userEncourageActivitys_codec);
      if (RefreshCount != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(RefreshCount);
      }
      if (NextRefreshTime != 0L) {
        output.WriteRawTag(32);
        output.WriteSInt64(NextRefreshTime);
      }
      if (LeftInterCount != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(LeftInterCount);
      }
      if (BuyInterCount != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(BuyInterCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += userEncourageActivitys_.CalculateSize(_repeated_userEncourageActivitys_codec);
      if (RefreshCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(RefreshCount);
      }
      if (NextRefreshTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(NextRefreshTime);
      }
      if (LeftInterCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(LeftInterCount);
      }
      if (BuyInterCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(BuyInterCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MyEncourageActsRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      userEncourageActivitys_.Add(other.userEncourageActivitys_);
      if (other.RefreshCount != 0) {
        RefreshCount = other.RefreshCount;
      }
      if (other.NextRefreshTime != 0L) {
        NextRefreshTime = other.NextRefreshTime;
      }
      if (other.LeftInterCount != 0) {
        LeftInterCount = other.LeftInterCount;
      }
      if (other.BuyInterCount != 0) {
        BuyInterCount = other.BuyInterCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            userEncourageActivitys_.AddEntriesFrom(input, _repeated_userEncourageActivitys_codec);
            break;
          }
          case 24: {
            RefreshCount = input.ReadSInt32();
            break;
          }
          case 32: {
            NextRefreshTime = input.ReadSInt64();
            break;
          }
          case 40: {
            LeftInterCount = input.ReadSInt32();
            break;
          }
          case 48: {
            BuyInterCount = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///刷新应援活动 encourageActC/refresh
  /// </summary>
  public sealed partial class RefreshReq : pb::IMessage<RefreshReq> {
    private static readonly pb::MessageParser<RefreshReq> _parser = new pb::MessageParser<RefreshReq>(() => new RefreshReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RefreshReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerEncourageActReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefreshReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefreshReq(RefreshReq other) : this() {
      id_ = other.id_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefreshReq Clone() {
      return new RefreshReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///刷哪个
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RefreshReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RefreshReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Id);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RefreshReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RefreshRes : pb::IMessage<RefreshRes> {
    private static readonly pb::MessageParser<RefreshRes> _parser = new pb::MessageParser<RefreshRes>(() => new RefreshRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RefreshRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerEncourageActReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefreshRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefreshRes(RefreshRes other) : this() {
      ret_ = other.ret_;
      UserEncourageActivity = other.userEncourageActivity_ != null ? other.UserEncourageActivity.Clone() : null;
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefreshRes Clone() {
      return new RefreshRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_encourage_activity" field.</summary>
    public const int UserEncourageActivityFieldNumber = 2;
    private global::Com.Proto.UserEncourageActPB userEncourageActivity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserEncourageActPB UserEncourageActivity {
      get { return userEncourageActivity_; }
      set {
        userEncourageActivity_ = value;
      }
    }

    /// <summary>Field number for the "user_money" field.</summary>
    public const int UserMoneyFieldNumber = 3;
    private global::Com.Proto.UserMoneyPB userMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RefreshRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RefreshRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserEncourageActivity, other.UserEncourageActivity)) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userEncourageActivity_ != null) hash ^= UserEncourageActivity.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userEncourageActivity_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserEncourageActivity);
      }
      if (userMoney_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserMoney);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userEncourageActivity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserEncourageActivity);
      }
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RefreshRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userEncourageActivity_ != null) {
        if (userEncourageActivity_ == null) {
          userEncourageActivity_ = new global::Com.Proto.UserEncourageActPB();
        }
        UserEncourageActivity.MergeFrom(other.UserEncourageActivity);
      }
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userEncourageActivity_ == null) {
              userEncourageActivity_ = new global::Com.Proto.UserEncourageActPB();
            }
            input.ReadMessage(userEncourageActivity_);
            break;
          }
          case 26: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///应援活动开始 encourageActC/start
  /// </summary>
  public sealed partial class StartReq : pb::IMessage<StartReq> {
    private static readonly pb::MessageParser<StartReq> _parser = new pb::MessageParser<StartReq>(() => new StartReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerEncourageActReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartReq(StartReq other) : this() {
      id_ = other.id_;
      actId_ = other.actId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartReq Clone() {
      return new StartReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "act_id" field.</summary>
    public const int ActIdFieldNumber = 2;
    private int actId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActId {
      get { return actId_; }
      set {
        actId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ActId != other.ActId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ActId != 0) hash ^= ActId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
      if (ActId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(ActId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Id);
      }
      if (ActId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ActId != 0) {
        ActId = other.ActId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
          case 16: {
            ActId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartRes : pb::IMessage<StartRes> {
    private static readonly pb::MessageParser<StartRes> _parser = new pb::MessageParser<StartRes>(() => new StartRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerEncourageActReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartRes(StartRes other) : this() {
      ret_ = other.ret_;
      UserEncourageActivity = other.userEncourageActivity_ != null ? other.UserEncourageActivity.Clone() : null;
      userItems_ = other.userItems_.Clone();
      userFans_ = other.userFans_.Clone();
      leftInterCount_ = other.leftInterCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartRes Clone() {
      return new StartRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_encourage_activity" field.</summary>
    public const int UserEncourageActivityFieldNumber = 2;
    private global::Com.Proto.UserEncourageActPB userEncourageActivity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserEncourageActPB UserEncourageActivity {
      get { return userEncourageActivity_; }
      set {
        userEncourageActivity_ = value;
      }
    }

    /// <summary>Field number for the "user_items" field.</summary>
    public const int UserItemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.UserItemPB> _repeated_userItems_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.UserItemPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserItemPB> userItems_ = new pbc::RepeatedField<global::Com.Proto.UserItemPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserItemPB> UserItems {
      get { return userItems_; }
    }

    /// <summary>Field number for the "user_fans" field.</summary>
    public const int UserFansFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.UserFansPB> _repeated_userFans_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.UserFansPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserFansPB> userFans_ = new pbc::RepeatedField<global::Com.Proto.UserFansPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserFansPB> UserFans {
      get { return userFans_; }
    }

    /// <summary>Field number for the "left_inter_count" field.</summary>
    public const int LeftInterCountFieldNumber = 5;
    private int leftInterCount_;
    /// <summary>
    ///当天剩余参与活动次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeftInterCount {
      get { return leftInterCount_; }
      set {
        leftInterCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserEncourageActivity, other.UserEncourageActivity)) return false;
      if(!userItems_.Equals(other.userItems_)) return false;
      if(!userFans_.Equals(other.userFans_)) return false;
      if (LeftInterCount != other.LeftInterCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userEncourageActivity_ != null) hash ^= UserEncourageActivity.GetHashCode();
      hash ^= userItems_.GetHashCode();
      hash ^= userFans_.GetHashCode();
      if (LeftInterCount != 0) hash ^= LeftInterCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userEncourageActivity_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserEncourageActivity);
      }
      userItems_.WriteTo(output, _repeated_userItems_codec);
      userFans_.WriteTo(output, _repeated_userFans_codec);
      if (LeftInterCount != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(LeftInterCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userEncourageActivity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserEncourageActivity);
      }
      size += userItems_.CalculateSize(_repeated_userItems_codec);
      size += userFans_.CalculateSize(_repeated_userFans_codec);
      if (LeftInterCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(LeftInterCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userEncourageActivity_ != null) {
        if (userEncourageActivity_ == null) {
          userEncourageActivity_ = new global::Com.Proto.UserEncourageActPB();
        }
        UserEncourageActivity.MergeFrom(other.UserEncourageActivity);
      }
      userItems_.Add(other.userItems_);
      userFans_.Add(other.userFans_);
      if (other.LeftInterCount != 0) {
        LeftInterCount = other.LeftInterCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userEncourageActivity_ == null) {
              userEncourageActivity_ = new global::Com.Proto.UserEncourageActPB();
            }
            input.ReadMessage(userEncourageActivity_);
            break;
          }
          case 26: {
            userItems_.AddEntriesFrom(input, _repeated_userItems_codec);
            break;
          }
          case 34: {
            userFans_.AddEntriesFrom(input, _repeated_userFans_codec);
            break;
          }
          case 40: {
            LeftInterCount = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///领奖 encourageActC/getAward
  /// </summary>
  public sealed partial class GetAwardReq : pb::IMessage<GetAwardReq> {
    private static readonly pb::MessageParser<GetAwardReq> _parser = new pb::MessageParser<GetAwardReq>(() => new GetAwardReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAwardReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerEncourageActReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAwardReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAwardReq(GetAwardReq other) : this() {
      id_ = other.id_;
      actId_ = other.actId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAwardReq Clone() {
      return new GetAwardReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "act_id" field.</summary>
    public const int ActIdFieldNumber = 2;
    private int actId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActId {
      get { return actId_; }
      set {
        actId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAwardReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAwardReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ActId != other.ActId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ActId != 0) hash ^= ActId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
      if (ActId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(ActId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Id);
      }
      if (ActId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAwardReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ActId != 0) {
        ActId = other.ActId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
          case 16: {
            ActId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAwardRes : pb::IMessage<GetAwardRes> {
    private static readonly pb::MessageParser<GetAwardRes> _parser = new pb::MessageParser<GetAwardRes>(() => new GetAwardRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAwardRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerEncourageActReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAwardRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAwardRes(GetAwardRes other) : this() {
      ret_ = other.ret_;
      UserEncourageActivity = other.userEncourageActivity_ != null ? other.UserEncourageActivity.Clone() : null;
      extraAwards_ = other.extraAwards_.Clone();
      awards_ = other.awards_.Clone();
      droppingItem_ = other.droppingItem_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAwardRes Clone() {
      return new GetAwardRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_encourage_activity" field.</summary>
    public const int UserEncourageActivityFieldNumber = 2;
    private global::Com.Proto.UserEncourageActPB userEncourageActivity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserEncourageActPB UserEncourageActivity {
      get { return userEncourageActivity_; }
      set {
        userEncourageActivity_ = value;
      }
    }

    /// <summary>Field number for the "extra_awards" field.</summary>
    public const int ExtraAwardsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_extraAwards_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> extraAwards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///额外奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> ExtraAwards {
      get { return extraAwards_; }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///任务奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "dropping_item" field.</summary>
    public const int DroppingItemFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Com.Proto.DroppingItemPB> _repeated_droppingItem_codec
        = pb::FieldCodec.ForMessage(42, global::Com.Proto.DroppingItemPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.DroppingItemPB> droppingItem_ = new pbc::RepeatedField<global::Com.Proto.DroppingItemPB>();
    /// <summary>
    ///活动掉落奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.DroppingItemPB> DroppingItem {
      get { return droppingItem_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAwardRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAwardRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserEncourageActivity, other.UserEncourageActivity)) return false;
      if(!extraAwards_.Equals(other.extraAwards_)) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if(!droppingItem_.Equals(other.droppingItem_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userEncourageActivity_ != null) hash ^= UserEncourageActivity.GetHashCode();
      hash ^= extraAwards_.GetHashCode();
      hash ^= awards_.GetHashCode();
      hash ^= droppingItem_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userEncourageActivity_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserEncourageActivity);
      }
      extraAwards_.WriteTo(output, _repeated_extraAwards_codec);
      awards_.WriteTo(output, _repeated_awards_codec);
      droppingItem_.WriteTo(output, _repeated_droppingItem_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userEncourageActivity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserEncourageActivity);
      }
      size += extraAwards_.CalculateSize(_repeated_extraAwards_codec);
      size += awards_.CalculateSize(_repeated_awards_codec);
      size += droppingItem_.CalculateSize(_repeated_droppingItem_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAwardRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userEncourageActivity_ != null) {
        if (userEncourageActivity_ == null) {
          userEncourageActivity_ = new global::Com.Proto.UserEncourageActPB();
        }
        UserEncourageActivity.MergeFrom(other.UserEncourageActivity);
      }
      extraAwards_.Add(other.extraAwards_);
      awards_.Add(other.awards_);
      droppingItem_.Add(other.droppingItem_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userEncourageActivity_ == null) {
              userEncourageActivity_ = new global::Com.Proto.UserEncourageActPB();
            }
            input.ReadMessage(userEncourageActivity_);
            break;
          }
          case 26: {
            extraAwards_.AddEntriesFrom(input, _repeated_extraAwards_codec);
            break;
          }
          case 34: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 42: {
            droppingItem_.AddEntriesFrom(input, _repeated_droppingItem_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///立即完成 encourageActC/doneImmediate
  /// </summary>
  public sealed partial class DoneImmediateReq : pb::IMessage<DoneImmediateReq> {
    private static readonly pb::MessageParser<DoneImmediateReq> _parser = new pb::MessageParser<DoneImmediateReq>(() => new DoneImmediateReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DoneImmediateReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerEncourageActReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoneImmediateReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoneImmediateReq(DoneImmediateReq other) : this() {
      id_ = other.id_;
      actId_ = other.actId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoneImmediateReq Clone() {
      return new DoneImmediateReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "act_id" field.</summary>
    public const int ActIdFieldNumber = 2;
    private int actId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActId {
      get { return actId_; }
      set {
        actId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DoneImmediateReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DoneImmediateReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ActId != other.ActId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ActId != 0) hash ^= ActId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
      if (ActId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(ActId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Id);
      }
      if (ActId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DoneImmediateReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ActId != 0) {
        ActId = other.ActId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
          case 16: {
            ActId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DoneImmediateRes : pb::IMessage<DoneImmediateRes> {
    private static readonly pb::MessageParser<DoneImmediateRes> _parser = new pb::MessageParser<DoneImmediateRes>(() => new DoneImmediateRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DoneImmediateRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerEncourageActReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoneImmediateRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoneImmediateRes(DoneImmediateRes other) : this() {
      ret_ = other.ret_;
      UserEncourageActivity = other.userEncourageActivity_ != null ? other.UserEncourageActivity.Clone() : null;
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
      extraAwards_ = other.extraAwards_.Clone();
      awards_ = other.awards_.Clone();
      droppingItem_ = other.droppingItem_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoneImmediateRes Clone() {
      return new DoneImmediateRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_encourage_activity" field.</summary>
    public const int UserEncourageActivityFieldNumber = 2;
    private global::Com.Proto.UserEncourageActPB userEncourageActivity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserEncourageActPB UserEncourageActivity {
      get { return userEncourageActivity_; }
      set {
        userEncourageActivity_ = value;
      }
    }

    /// <summary>Field number for the "user_money" field.</summary>
    public const int UserMoneyFieldNumber = 3;
    private global::Com.Proto.UserMoneyPB userMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    /// <summary>Field number for the "extra_awards" field.</summary>
    public const int ExtraAwardsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_extraAwards_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> extraAwards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///额外奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> ExtraAwards {
      get { return extraAwards_; }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(42, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///任务奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "dropping_item" field.</summary>
    public const int DroppingItemFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Com.Proto.DroppingItemPB> _repeated_droppingItem_codec
        = pb::FieldCodec.ForMessage(50, global::Com.Proto.DroppingItemPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.DroppingItemPB> droppingItem_ = new pbc::RepeatedField<global::Com.Proto.DroppingItemPB>();
    /// <summary>
    ///活动掉落奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.DroppingItemPB> DroppingItem {
      get { return droppingItem_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DoneImmediateRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DoneImmediateRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserEncourageActivity, other.UserEncourageActivity)) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      if(!extraAwards_.Equals(other.extraAwards_)) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if(!droppingItem_.Equals(other.droppingItem_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userEncourageActivity_ != null) hash ^= UserEncourageActivity.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      hash ^= extraAwards_.GetHashCode();
      hash ^= awards_.GetHashCode();
      hash ^= droppingItem_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userEncourageActivity_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserEncourageActivity);
      }
      if (userMoney_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserMoney);
      }
      extraAwards_.WriteTo(output, _repeated_extraAwards_codec);
      awards_.WriteTo(output, _repeated_awards_codec);
      droppingItem_.WriteTo(output, _repeated_droppingItem_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userEncourageActivity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserEncourageActivity);
      }
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      size += extraAwards_.CalculateSize(_repeated_extraAwards_codec);
      size += awards_.CalculateSize(_repeated_awards_codec);
      size += droppingItem_.CalculateSize(_repeated_droppingItem_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DoneImmediateRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userEncourageActivity_ != null) {
        if (userEncourageActivity_ == null) {
          userEncourageActivity_ = new global::Com.Proto.UserEncourageActPB();
        }
        UserEncourageActivity.MergeFrom(other.UserEncourageActivity);
      }
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
      extraAwards_.Add(other.extraAwards_);
      awards_.Add(other.awards_);
      droppingItem_.Add(other.droppingItem_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userEncourageActivity_ == null) {
              userEncourageActivity_ = new global::Com.Proto.UserEncourageActPB();
            }
            input.ReadMessage(userEncourageActivity_);
            break;
          }
          case 26: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
          case 34: {
            extraAwards_.AddEntriesFrom(input, _repeated_extraAwards_codec);
            break;
          }
          case 42: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 50: {
            droppingItem_.AddEntriesFrom(input, _repeated_droppingItem_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///购买参与次数 encourageActC/buyInter
  /// </summary>
  public sealed partial class BuyInterCountRes : pb::IMessage<BuyInterCountRes> {
    private static readonly pb::MessageParser<BuyInterCountRes> _parser = new pb::MessageParser<BuyInterCountRes>(() => new BuyInterCountRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuyInterCountRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerEncourageActReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyInterCountRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyInterCountRes(BuyInterCountRes other) : this() {
      ret_ = other.ret_;
      leftInterCount_ = other.leftInterCount_;
      buyInterCount_ = other.buyInterCount_;
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyInterCountRes Clone() {
      return new BuyInterCountRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "left_inter_count" field.</summary>
    public const int LeftInterCountFieldNumber = 2;
    private int leftInterCount_;
    /// <summary>
    ///当天剩余参与活动次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeftInterCount {
      get { return leftInterCount_; }
      set {
        leftInterCount_ = value;
      }
    }

    /// <summary>Field number for the "buy_inter_count" field.</summary>
    public const int BuyInterCountFieldNumber = 3;
    private int buyInterCount_;
    /// <summary>
    ///当天购买参与活动次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuyInterCount {
      get { return buyInterCount_; }
      set {
        buyInterCount_ = value;
      }
    }

    /// <summary>Field number for the "user_money" field.</summary>
    public const int UserMoneyFieldNumber = 4;
    private global::Com.Proto.UserMoneyPB userMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuyInterCountRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuyInterCountRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (LeftInterCount != other.LeftInterCount) return false;
      if (BuyInterCount != other.BuyInterCount) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (LeftInterCount != 0) hash ^= LeftInterCount.GetHashCode();
      if (BuyInterCount != 0) hash ^= BuyInterCount.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (LeftInterCount != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(LeftInterCount);
      }
      if (BuyInterCount != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(BuyInterCount);
      }
      if (userMoney_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UserMoney);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (LeftInterCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(LeftInterCount);
      }
      if (BuyInterCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(BuyInterCount);
      }
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuyInterCountRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.LeftInterCount != 0) {
        LeftInterCount = other.LeftInterCount;
      }
      if (other.BuyInterCount != 0) {
        BuyInterCount = other.BuyInterCount;
      }
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 16: {
            LeftInterCount = input.ReadSInt32();
            break;
          }
          case 24: {
            BuyInterCount = input.ReadSInt32();
            break;
          }
          case 34: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
