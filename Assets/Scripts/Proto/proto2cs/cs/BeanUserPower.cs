// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_user_power.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_user_power.proto</summary>
  public static partial class BeanUserPowerReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_user_power.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanUserPowerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChViZWFuX3VzZXJfcG93ZXIucHJvdG8SCWNvbS5wcm90bxoKYmFzZS5wcm90",
            "byKzAQoLVXNlclBvd2VyUEISDwoHdXNlcl9pZBgBIAEoERIOCgZlbmVyZ3kY",
            "AiABKBESEwoLZW5lcmd5X3RpbWUYAyABKBISGAoQZW5jb3VyYWdlX2VuZXJn",
            "eRgEIAEoERIdChVlbmNvdXJhZ2VfZW5lcmd5X3RpbWUYBSABKBISFwoPbWVt",
            "b3JpZXNfZW5lcmd5GAYgASgREhwKFG1lbW9yaWVzX2VuZXJneV90aW1lGAcg",
            "ASgSQjIKH25ldC5nYWxhc3BvcnRzLmJpZ3N0YXIucHJvdG9jb2xCD1VzZXJQ",
            "b3dlclByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserPowerPB), global::Com.Proto.UserPowerPB.Parser, new[]{ "UserId", "Energy", "EnergyTime", "EncourageEnergy", "EncourageEnergyTime", "MemoriesEnergy", "MemoriesEnergyTime" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UserPowerPB : pb::IMessage<UserPowerPB> {
    private static readonly pb::MessageParser<UserPowerPB> _parser = new pb::MessageParser<UserPowerPB>(() => new UserPowerPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserPowerPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanUserPowerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPowerPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPowerPB(UserPowerPB other) : this() {
      userId_ = other.userId_;
      energy_ = other.energy_;
      energyTime_ = other.energyTime_;
      encourageEnergy_ = other.encourageEnergy_;
      encourageEnergyTime_ = other.encourageEnergyTime_;
      memoriesEnergy_ = other.memoriesEnergy_;
      memoriesEnergyTime_ = other.memoriesEnergyTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPowerPB Clone() {
      return new UserPowerPB(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "energy" field.</summary>
    public const int EnergyFieldNumber = 2;
    private int energy_;
    /// <summary>
    ///体能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Energy {
      get { return energy_; }
      set {
        energy_ = value;
      }
    }

    /// <summary>Field number for the "energy_time" field.</summary>
    public const int EnergyTimeFieldNumber = 3;
    private long energyTime_;
    /// <summary>
    ///上次恢复时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnergyTime {
      get { return energyTime_; }
      set {
        energyTime_ = value;
      }
    }

    /// <summary>Field number for the "encourage_energy" field.</summary>
    public const int EncourageEnergyFieldNumber = 4;
    private int encourageEnergy_;
    /// <summary>
    ///探班体能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EncourageEnergy {
      get { return encourageEnergy_; }
      set {
        encourageEnergy_ = value;
      }
    }

    /// <summary>Field number for the "encourage_energy_time" field.</summary>
    public const int EncourageEnergyTimeFieldNumber = 5;
    private long encourageEnergyTime_;
    /// <summary>
    ///上次恢复时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EncourageEnergyTime {
      get { return encourageEnergyTime_; }
      set {
        encourageEnergyTime_ = value;
      }
    }

    /// <summary>Field number for the "memories_energy" field.</summary>
    public const int MemoriesEnergyFieldNumber = 6;
    private int memoriesEnergy_;
    /// <summary>
    ///星缘回忆体能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MemoriesEnergy {
      get { return memoriesEnergy_; }
      set {
        memoriesEnergy_ = value;
      }
    }

    /// <summary>Field number for the "memories_energy_time" field.</summary>
    public const int MemoriesEnergyTimeFieldNumber = 7;
    private long memoriesEnergyTime_;
    /// <summary>
    ///上次恢复时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MemoriesEnergyTime {
      get { return memoriesEnergyTime_; }
      set {
        memoriesEnergyTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserPowerPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserPowerPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Energy != other.Energy) return false;
      if (EnergyTime != other.EnergyTime) return false;
      if (EncourageEnergy != other.EncourageEnergy) return false;
      if (EncourageEnergyTime != other.EncourageEnergyTime) return false;
      if (MemoriesEnergy != other.MemoriesEnergy) return false;
      if (MemoriesEnergyTime != other.MemoriesEnergyTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (Energy != 0) hash ^= Energy.GetHashCode();
      if (EnergyTime != 0L) hash ^= EnergyTime.GetHashCode();
      if (EncourageEnergy != 0) hash ^= EncourageEnergy.GetHashCode();
      if (EncourageEnergyTime != 0L) hash ^= EncourageEnergyTime.GetHashCode();
      if (MemoriesEnergy != 0) hash ^= MemoriesEnergy.GetHashCode();
      if (MemoriesEnergyTime != 0L) hash ^= MemoriesEnergyTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(UserId);
      }
      if (Energy != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(Energy);
      }
      if (EnergyTime != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(EnergyTime);
      }
      if (EncourageEnergy != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(EncourageEnergy);
      }
      if (EncourageEnergyTime != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(EncourageEnergyTime);
      }
      if (MemoriesEnergy != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(MemoriesEnergy);
      }
      if (MemoriesEnergyTime != 0L) {
        output.WriteRawTag(56);
        output.WriteSInt64(MemoriesEnergyTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      if (Energy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Energy);
      }
      if (EnergyTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(EnergyTime);
      }
      if (EncourageEnergy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(EncourageEnergy);
      }
      if (EncourageEnergyTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(EncourageEnergyTime);
      }
      if (MemoriesEnergy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MemoriesEnergy);
      }
      if (MemoriesEnergyTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(MemoriesEnergyTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserPowerPB other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.Energy != 0) {
        Energy = other.Energy;
      }
      if (other.EnergyTime != 0L) {
        EnergyTime = other.EnergyTime;
      }
      if (other.EncourageEnergy != 0) {
        EncourageEnergy = other.EncourageEnergy;
      }
      if (other.EncourageEnergyTime != 0L) {
        EncourageEnergyTime = other.EncourageEnergyTime;
      }
      if (other.MemoriesEnergy != 0) {
        MemoriesEnergy = other.MemoriesEnergy;
      }
      if (other.MemoriesEnergyTime != 0L) {
        MemoriesEnergyTime = other.MemoriesEnergyTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadSInt32();
            break;
          }
          case 16: {
            Energy = input.ReadSInt32();
            break;
          }
          case 24: {
            EnergyTime = input.ReadSInt64();
            break;
          }
          case 32: {
            EncourageEnergy = input.ReadSInt32();
            break;
          }
          case 40: {
            EncourageEnergyTime = input.ReadSInt64();
            break;
          }
          case 48: {
            MemoriesEnergy = input.ReadSInt32();
            break;
          }
          case 56: {
            MemoriesEnergyTime = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
