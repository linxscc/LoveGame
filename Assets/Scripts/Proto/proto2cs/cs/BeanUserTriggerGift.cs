// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_user_trigger_gift.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_user_trigger_gift.proto</summary>
  public static partial class BeanUserTriggerGiftReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_user_trigger_gift.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanUserTriggerGiftReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxiZWFuX3VzZXJfdHJpZ2dlcl9naWZ0LnByb3RvEgljb20ucHJvdG8aCmJh",
            "c2UucHJvdG8iawoRVXNlclRyaWdnZXJHaWZ0UEISCgoCaWQYASABKBISDwoH",
            "dXNlcl9pZBgCIAEoERIPCgdtYWxsX2lkGAMgASgREhEKCWZyZWVfdHlwZRgE",
            "IAEoERIVCg1tYXR1cml0eV90aW1lGAUgASgSQjgKH25ldC5nYWxhc3BvcnRz",
            "LmJpZ3N0YXIucHJvdG9jb2xCFVVzZXJUcmlnZ2VyR2lmdFByb3Rvc2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserTriggerGiftPB), global::Com.Proto.UserTriggerGiftPB.Parser, new[]{ "Id", "UserId", "MallId", "FreeType", "MaturityTime" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///UserTriggerGiftPB UserTriggerGift
  /// </summary>
  public sealed partial class UserTriggerGiftPB : pb::IMessage<UserTriggerGiftPB> {
    private static readonly pb::MessageParser<UserTriggerGiftPB> _parser = new pb::MessageParser<UserTriggerGiftPB>(() => new UserTriggerGiftPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserTriggerGiftPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanUserTriggerGiftReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTriggerGiftPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTriggerGiftPB(UserTriggerGiftPB other) : this() {
      id_ = other.id_;
      userId_ = other.userId_;
      mallId_ = other.mallId_;
      freeType_ = other.freeType_;
      maturityTime_ = other.maturityTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTriggerGiftPB Clone() {
      return new UserTriggerGiftPB(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private int userId_;
    /// <summary>
    ///用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "mall_id" field.</summary>
    public const int MallIdFieldNumber = 3;
    private int mallId_;
    /// <summary>
    ///商品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MallId {
      get { return mallId_; }
      set {
        mallId_ = value;
      }
    }

    /// <summary>Field number for the "free_type" field.</summary>
    public const int FreeTypeFieldNumber = 4;
    private int freeType_;
    /// <summary>
    ///是否免费礼包领取(0否1是)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeType {
      get { return freeType_; }
      set {
        freeType_ = value;
      }
    }

    /// <summary>Field number for the "maturity_time" field.</summary>
    public const int MaturityTimeFieldNumber = 5;
    private long maturityTime_;
    /// <summary>
    ///到期时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaturityTime {
      get { return maturityTime_; }
      set {
        maturityTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserTriggerGiftPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserTriggerGiftPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (UserId != other.UserId) return false;
      if (MallId != other.MallId) return false;
      if (FreeType != other.FreeType) return false;
      if (MaturityTime != other.MaturityTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (MallId != 0) hash ^= MallId.GetHashCode();
      if (FreeType != 0) hash ^= FreeType.GetHashCode();
      if (MaturityTime != 0L) hash ^= MaturityTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(Id);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(UserId);
      }
      if (MallId != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(MallId);
      }
      if (FreeType != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(FreeType);
      }
      if (MaturityTime != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(MaturityTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Id);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      if (MallId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MallId);
      }
      if (FreeType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FreeType);
      }
      if (MaturityTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(MaturityTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserTriggerGiftPB other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.MallId != 0) {
        MallId = other.MallId;
      }
      if (other.FreeType != 0) {
        FreeType = other.FreeType;
      }
      if (other.MaturityTime != 0L) {
        MaturityTime = other.MaturityTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadSInt64();
            break;
          }
          case 16: {
            UserId = input.ReadSInt32();
            break;
          }
          case 24: {
            MallId = input.ReadSInt32();
            break;
          }
          case 32: {
            FreeType = input.ReadSInt32();
            break;
          }
          case 40: {
            MaturityTime = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
