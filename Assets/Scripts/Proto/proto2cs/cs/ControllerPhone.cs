// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller_phone.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from controller_phone.proto</summary>
  public static partial class ControllerPhoneReflection {

    #region Descriptor
    /// <summary>File descriptor for controller_phone.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControllerPhoneReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZjb250cm9sbGVyX3Bob25lLnByb3RvEgljb20ucHJvdG8aCmJhc2UucHJv",
            "dG8aFGJlYW5fbXNnb3JjYWxsLnByb3RvGhdiZWFuX2ZyaWVuZGNpcmNsZS5w",
            "cm90bxoUYmVhbl9taWNyb19ib2cucHJvdG8aGWJlYW5fdXNlcl9tc2dvcmNh",
            "bGwucHJvdG8aHWJlYW5fdXNlcl9mcmllbmRfY2lyY2xlLnByb3RvGhpiZWFu",
            "X3VzZXJfbWljcm9fYmxvZy5wcm90byLEAQoMUGhvbmVSdWxlUmVzEgsKA3Jl",
            "dBgBIAEoERI1ChFtc2dfb3JfY2FsbF9ydWxlcxgCIAMoCzIaLmNvbS5wcm90",
            "by5Nc2dPckNhbGxSdWxlUEISOgoTZnJpZW5kX2NpcmNsZV9ydWxlcxgDIAMo",
            "CzIdLmNvbS5wcm90by5GcmllbmRDaXJjbGVSdWxlUEISNAoQbWljcm9fYmxv",
            "Z19ydWxlcxgEIAMoCzIaLmNvbS5wcm90by5NaWNyb0Jsb2dSdWxlUEIiTQoM",
            "TXNnT3JDYWxsUmVzEgsKA3JldBgBIAEoERIwCgxtc2dfb3JfY2FsbHMYAiAD",
            "KAsyGi5jb20ucHJvdG8uVXNlck1zZ09yQ2FsbFBCIkwKEFJlYWRNc2dPckNh",
            "bGxSZXESEAoIc2NlbmVfaWQYASABKBESEgoKc2VsZWN0X2lkcxgCIAMoERIS",
            "CgpyZWFkX3N0YXRlGAMgASgRIlAKEFJlYWRNc2dPckNhbGxSZXMSCwoDcmV0",
            "GAEgASgREi8KC21zZ19vcl9jYWxsGAIgASgLMhouY29tLnByb3RvLlVzZXJN",
            "c2dPckNhbGxQQiI3ChJMaXN0ZW5Nc2dPckNhbGxSZXESEAoIc2NlbmVfaWQY",
            "ASABKBESDwoHdGFsa19pZBgCIAEoESJSChJMaXN0ZW5Nc2dPckNhbGxSZXMS",
            "CwoDcmV0GAEgASgREi8KC21zZ19vcl9jYWxsGAIgASgLMhouY29tLnByb3Rv",
            "LlVzZXJNc2dPckNhbGxQQiJVCg9GcmllbmRDaXJjbGVSZXMSCwoDcmV0GAEg",
            "ASgREjUKDmZyaWVuZF9jaXJjbGVzGAIgAygLMh0uY29tLnByb3RvLlVzZXJG",
            "cmllbmRDaXJjbGVQQiImChJQdWJGcmllbmRDaXJjbGVSZXESEAoIc2NlbmVf",
            "aWQYASABKBEiVwoSUHViRnJpZW5kQ2lyY2xlUmVzEgsKA3JldBgBIAEoERI0",
            "Cg1mcmllbmRfY2lyY2xlGAIgASgLMh0uY29tLnByb3RvLlVzZXJGcmllbmRD",
            "aXJjbGVQQiI9ChZDb21tZW50RnJpZW5kQ2lyY2xlUmVxEhAKCHNjZW5lX2lk",
            "GAEgASgREhEKCXJlcGxheV9pZBgCIAEoESJbChZDb21tZW50RnJpZW5kQ2ly",
            "Y2xlUmVzEgsKA3JldBgBIAEoERI0Cg1mcmllbmRfY2lyY2xlGAIgASgLMh0u",
            "Y29tLnByb3RvLlVzZXJGcmllbmRDaXJjbGVQQiJMCgxNaWNyb0Jsb2dSZXMS",
            "CwoDcmV0GAEgASgREi8KC21pY3JvX2Jsb2dzGAIgAygLMhouY29tLnByb3Rv",
            "LlVzZXJNaWNyb0Jsb2dQQiIkChBMaWtlTWljcm9CbG9nUmVxEhAKCHNjZW5l",
            "X2lkGAEgASgRIk8KEExpa2VNaWNyb0Jsb2dSZXMSCwoDcmV0GAEgASgREi4K",
            "Cm1pY3JvX2Jsb2cYAiABKAsyGi5jb20ucHJvdG8uVXNlck1pY3JvQmxvZ1BC",
            "Ij0KE0NvbW1lbnRNaWNyb0Jsb2dSZXESEAoIc2NlbmVfaWQYASABKBESFAoM",
            "c2VsZWN0X2luZGV4GAIgASgRIlIKE0NvbW1lbnRNaWNyb0Jsb2dSZXMSCwoD",
            "cmV0GAEgASgREi4KCm1pY3JvX2Jsb2cYAiABKAsyGi5jb20ucHJvdG8uVXNl",
            "ck1pY3JvQmxvZ1BCIiMKD1B1Yk1pY3JvQmxvZ1JlcRIQCghzY2VuZV9pZBgB",
            "IAEoESJOCg9QdWJNaWNyb0Jsb2dSZXMSCwoDcmV0GAEgASgREi4KCm1pY3Jv",
            "X2Jsb2cYAiABKAsyGi5jb20ucHJvdG8uVXNlck1pY3JvQmxvZ1BCIigKEFVz",
            "ZXJQaG9uZURhdGFSZXESFAoMaXNPcGVuTW9kdWxlGAEgASgRIrkBChBVc2Vy",
            "UGhvbmVEYXRhUmVzEgsKA3JldBgBIAEoERIwCgxtc2dfb3JfY2FsbHMYAiAD",
            "KAsyGi5jb20ucHJvdG8uVXNlck1zZ09yQ2FsbFBCEjUKDmZyaWVuZF9jaXJj",
            "bGVzGAMgAygLMh0uY29tLnByb3RvLlVzZXJGcmllbmRDaXJjbGVQQhIvCgtt",
            "aWNyb19ibG9ncxgEIAMoCzIaLmNvbS5wcm90by5Vc2VyTWljcm9CbG9nUEIi",
            "JQoRRWxpbWluYXRFc2NlbmVSZXESEAoIc2NlbmVfaWQYASADKBEiIAoRRWxp",
            "bWluYXRFc2NlbmVSZXMSCwoDcmV0GAEgASgRIhUKE1VzZXJQaG9uZVRpcERh",
            "dGFSZXEivAEKE1VzZXJQaG9uZVRpcERhdGFSZXMSCwoDcmV0GAEgASgREjAK",
            "DG1zZ19vcl9jYWxscxgCIAMoCzIaLmNvbS5wcm90by5Vc2VyTXNnT3JDYWxs",
            "UEISNQoOZnJpZW5kX2NpcmNsZXMYAyADKAsyHS5jb20ucHJvdG8uVXNlckZy",
            "aWVuZENpcmNsZVBCEi8KC21pY3JvX2Jsb2dzGAQgAygLMhouY29tLnByb3Rv",
            "LlVzZXJNaWNyb0Jsb2dQQkI4Ch9uZXQuZ2FsYXNwb3J0cy5iaWdzdGFyLnBy",
            "b3RvY29sQhVQaG9uZUNvbnRyb2xsZXJQcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanMsgorcallReflection.Descriptor, global::Com.Proto.BeanFriendcircleReflection.Descriptor, global::Com.Proto.BeanMicroBogReflection.Descriptor, global::Com.Proto.BeanUserMsgorcallReflection.Descriptor, global::Com.Proto.BeanUserFriendCircleReflection.Descriptor, global::Com.Proto.BeanUserMicroBlogReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.PhoneRuleRes), global::Com.Proto.PhoneRuleRes.Parser, new[]{ "Ret", "MsgOrCallRules", "FriendCircleRules", "MicroBlogRules" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.MsgOrCallRes), global::Com.Proto.MsgOrCallRes.Parser, new[]{ "Ret", "MsgOrCalls" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReadMsgOrCallReq), global::Com.Proto.ReadMsgOrCallReq.Parser, new[]{ "SceneId", "SelectIds", "ReadState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReadMsgOrCallRes), global::Com.Proto.ReadMsgOrCallRes.Parser, new[]{ "Ret", "MsgOrCall" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ListenMsgOrCallReq), global::Com.Proto.ListenMsgOrCallReq.Parser, new[]{ "SceneId", "TalkId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ListenMsgOrCallRes), global::Com.Proto.ListenMsgOrCallRes.Parser, new[]{ "Ret", "MsgOrCall" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.FriendCircleRes), global::Com.Proto.FriendCircleRes.Parser, new[]{ "Ret", "FriendCircles" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.PubFriendCircleReq), global::Com.Proto.PubFriendCircleReq.Parser, new[]{ "SceneId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.PubFriendCircleRes), global::Com.Proto.PubFriendCircleRes.Parser, new[]{ "Ret", "FriendCircle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CommentFriendCircleReq), global::Com.Proto.CommentFriendCircleReq.Parser, new[]{ "SceneId", "ReplayId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CommentFriendCircleRes), global::Com.Proto.CommentFriendCircleRes.Parser, new[]{ "Ret", "FriendCircle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.MicroBlogRes), global::Com.Proto.MicroBlogRes.Parser, new[]{ "Ret", "MicroBlogs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.LikeMicroBlogReq), global::Com.Proto.LikeMicroBlogReq.Parser, new[]{ "SceneId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.LikeMicroBlogRes), global::Com.Proto.LikeMicroBlogRes.Parser, new[]{ "Ret", "MicroBlog" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CommentMicroBlogReq), global::Com.Proto.CommentMicroBlogReq.Parser, new[]{ "SceneId", "SelectIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CommentMicroBlogRes), global::Com.Proto.CommentMicroBlogRes.Parser, new[]{ "Ret", "MicroBlog" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.PubMicroBlogReq), global::Com.Proto.PubMicroBlogReq.Parser, new[]{ "SceneId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.PubMicroBlogRes), global::Com.Proto.PubMicroBlogRes.Parser, new[]{ "Ret", "MicroBlog" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserPhoneDataReq), global::Com.Proto.UserPhoneDataReq.Parser, new[]{ "IsOpenModule" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserPhoneDataRes), global::Com.Proto.UserPhoneDataRes.Parser, new[]{ "Ret", "MsgOrCalls", "FriendCircles", "MicroBlogs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.EliminatEsceneReq), global::Com.Proto.EliminatEsceneReq.Parser, new[]{ "SceneId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.EliminatEsceneRes), global::Com.Proto.EliminatEsceneRes.Parser, new[]{ "Ret" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserPhoneTipDataReq), global::Com.Proto.UserPhoneTipDataReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserPhoneTipDataRes), global::Com.Proto.UserPhoneTipDataRes.Parser, new[]{ "Ret", "MsgOrCalls", "FriendCircles", "MicroBlogs" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///规则   phoneC/rules
  /// </summary>
  public sealed partial class PhoneRuleRes : pb::IMessage<PhoneRuleRes> {
    private static readonly pb::MessageParser<PhoneRuleRes> _parser = new pb::MessageParser<PhoneRuleRes>(() => new PhoneRuleRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PhoneRuleRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhoneRuleRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhoneRuleRes(PhoneRuleRes other) : this() {
      ret_ = other.ret_;
      msgOrCallRules_ = other.msgOrCallRules_.Clone();
      friendCircleRules_ = other.friendCircleRules_.Clone();
      microBlogRules_ = other.microBlogRules_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhoneRuleRes Clone() {
      return new PhoneRuleRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "msg_or_call_rules" field.</summary>
    public const int MsgOrCallRulesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.MsgOrCallRulePB> _repeated_msgOrCallRules_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.MsgOrCallRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.MsgOrCallRulePB> msgOrCallRules_ = new pbc::RepeatedField<global::Com.Proto.MsgOrCallRulePB>();
    /// <summary>
    ///短信/电话规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.MsgOrCallRulePB> MsgOrCallRules {
      get { return msgOrCallRules_; }
    }

    /// <summary>Field number for the "friend_circle_rules" field.</summary>
    public const int FriendCircleRulesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.FriendCircleRulePB> _repeated_friendCircleRules_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.FriendCircleRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.FriendCircleRulePB> friendCircleRules_ = new pbc::RepeatedField<global::Com.Proto.FriendCircleRulePB>();
    /// <summary>
    ///朋友圈规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.FriendCircleRulePB> FriendCircleRules {
      get { return friendCircleRules_; }
    }

    /// <summary>Field number for the "micro_blog_rules" field.</summary>
    public const int MicroBlogRulesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.MicroBlogRulePB> _repeated_microBlogRules_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.MicroBlogRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.MicroBlogRulePB> microBlogRules_ = new pbc::RepeatedField<global::Com.Proto.MicroBlogRulePB>();
    /// <summary>
    ///微博规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.MicroBlogRulePB> MicroBlogRules {
      get { return microBlogRules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PhoneRuleRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PhoneRuleRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!msgOrCallRules_.Equals(other.msgOrCallRules_)) return false;
      if(!friendCircleRules_.Equals(other.friendCircleRules_)) return false;
      if(!microBlogRules_.Equals(other.microBlogRules_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= msgOrCallRules_.GetHashCode();
      hash ^= friendCircleRules_.GetHashCode();
      hash ^= microBlogRules_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      msgOrCallRules_.WriteTo(output, _repeated_msgOrCallRules_codec);
      friendCircleRules_.WriteTo(output, _repeated_friendCircleRules_codec);
      microBlogRules_.WriteTo(output, _repeated_microBlogRules_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += msgOrCallRules_.CalculateSize(_repeated_msgOrCallRules_codec);
      size += friendCircleRules_.CalculateSize(_repeated_friendCircleRules_codec);
      size += microBlogRules_.CalculateSize(_repeated_microBlogRules_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PhoneRuleRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      msgOrCallRules_.Add(other.msgOrCallRules_);
      friendCircleRules_.Add(other.friendCircleRules_);
      microBlogRules_.Add(other.microBlogRules_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            msgOrCallRules_.AddEntriesFrom(input, _repeated_msgOrCallRules_codec);
            break;
          }
          case 26: {
            friendCircleRules_.AddEntriesFrom(input, _repeated_friendCircleRules_codec);
            break;
          }
          case 34: {
            microBlogRules_.AddEntriesFrom(input, _repeated_microBlogRules_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///用户已触发的短信/电话信息  phoneC/msgOrCall
  /// </summary>
  public sealed partial class MsgOrCallRes : pb::IMessage<MsgOrCallRes> {
    private static readonly pb::MessageParser<MsgOrCallRes> _parser = new pb::MessageParser<MsgOrCallRes>(() => new MsgOrCallRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgOrCallRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgOrCallRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgOrCallRes(MsgOrCallRes other) : this() {
      ret_ = other.ret_;
      msgOrCalls_ = other.msgOrCalls_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgOrCallRes Clone() {
      return new MsgOrCallRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "msg_or_calls" field.</summary>
    public const int MsgOrCallsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.UserMsgOrCallPB> _repeated_msgOrCalls_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.UserMsgOrCallPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserMsgOrCallPB> msgOrCalls_ = new pbc::RepeatedField<global::Com.Proto.UserMsgOrCallPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserMsgOrCallPB> MsgOrCalls {
      get { return msgOrCalls_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgOrCallRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgOrCallRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!msgOrCalls_.Equals(other.msgOrCalls_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= msgOrCalls_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      msgOrCalls_.WriteTo(output, _repeated_msgOrCalls_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += msgOrCalls_.CalculateSize(_repeated_msgOrCalls_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgOrCallRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      msgOrCalls_.Add(other.msgOrCalls_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            msgOrCalls_.AddEntriesFrom(input, _repeated_msgOrCalls_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///用户短信/电话读完时记录  phoneC/readMsgOrCall
  /// </summary>
  public sealed partial class ReadMsgOrCallReq : pb::IMessage<ReadMsgOrCallReq> {
    private static readonly pb::MessageParser<ReadMsgOrCallReq> _parser = new pb::MessageParser<ReadMsgOrCallReq>(() => new ReadMsgOrCallReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadMsgOrCallReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadMsgOrCallReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadMsgOrCallReq(ReadMsgOrCallReq other) : this() {
      sceneId_ = other.sceneId_;
      selectIds_ = other.selectIds_.Clone();
      readState_ = other.readState_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadMsgOrCallReq Clone() {
      return new ReadMsgOrCallReq(this);
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 1;
    private int sceneId_;
    /// <summary>
    ///哪条
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    /// <summary>Field number for the "select_ids" field.</summary>
    public const int SelectIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_selectIds_codec
        = pb::FieldCodec.ForSInt32(18);
    private readonly pbc::RepeatedField<int> selectIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///选择了哪些选项
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> SelectIds {
      get { return selectIds_; }
    }

    /// <summary>Field number for the "read_state" field.</summary>
    public const int ReadStateFieldNumber = 3;
    private int readState_;
    /// <summary>
    ///0未读完1读完，读完后不可以再设置选项
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReadState {
      get { return readState_; }
      set {
        readState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadMsgOrCallReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadMsgOrCallReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneId != other.SceneId) return false;
      if(!selectIds_.Equals(other.selectIds_)) return false;
      if (ReadState != other.ReadState) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      hash ^= selectIds_.GetHashCode();
      if (ReadState != 0) hash ^= ReadState.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SceneId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(SceneId);
      }
      selectIds_.WriteTo(output, _repeated_selectIds_codec);
      if (ReadState != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(ReadState);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SceneId);
      }
      size += selectIds_.CalculateSize(_repeated_selectIds_codec);
      if (ReadState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ReadState);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadMsgOrCallReq other) {
      if (other == null) {
        return;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
      selectIds_.Add(other.selectIds_);
      if (other.ReadState != 0) {
        ReadState = other.ReadState;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SceneId = input.ReadSInt32();
            break;
          }
          case 18:
          case 16: {
            selectIds_.AddEntriesFrom(input, _repeated_selectIds_codec);
            break;
          }
          case 24: {
            ReadState = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReadMsgOrCallRes : pb::IMessage<ReadMsgOrCallRes> {
    private static readonly pb::MessageParser<ReadMsgOrCallRes> _parser = new pb::MessageParser<ReadMsgOrCallRes>(() => new ReadMsgOrCallRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadMsgOrCallRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadMsgOrCallRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadMsgOrCallRes(ReadMsgOrCallRes other) : this() {
      ret_ = other.ret_;
      MsgOrCall = other.msgOrCall_ != null ? other.MsgOrCall.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadMsgOrCallRes Clone() {
      return new ReadMsgOrCallRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "msg_or_call" field.</summary>
    public const int MsgOrCallFieldNumber = 2;
    private global::Com.Proto.UserMsgOrCallPB msgOrCall_;
    /// <summary>
    ///读取完毕后的短信/电话信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMsgOrCallPB MsgOrCall {
      get { return msgOrCall_; }
      set {
        msgOrCall_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadMsgOrCallRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadMsgOrCallRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(MsgOrCall, other.MsgOrCall)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (msgOrCall_ != null) hash ^= MsgOrCall.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (msgOrCall_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MsgOrCall);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (msgOrCall_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MsgOrCall);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadMsgOrCallRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.msgOrCall_ != null) {
        if (msgOrCall_ == null) {
          msgOrCall_ = new global::Com.Proto.UserMsgOrCallPB();
        }
        MsgOrCall.MergeFrom(other.MsgOrCall);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (msgOrCall_ == null) {
              msgOrCall_ = new global::Com.Proto.UserMsgOrCallPB();
            }
            input.ReadMessage(msgOrCall_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///用户短信/电话语言听语音时记录  phoneC/listenMsgOrCall
  /// </summary>
  public sealed partial class ListenMsgOrCallReq : pb::IMessage<ListenMsgOrCallReq> {
    private static readonly pb::MessageParser<ListenMsgOrCallReq> _parser = new pb::MessageParser<ListenMsgOrCallReq>(() => new ListenMsgOrCallReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListenMsgOrCallReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListenMsgOrCallReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListenMsgOrCallReq(ListenMsgOrCallReq other) : this() {
      sceneId_ = other.sceneId_;
      talkId_ = other.talkId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListenMsgOrCallReq Clone() {
      return new ListenMsgOrCallReq(this);
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 1;
    private int sceneId_;
    /// <summary>
    ///哪条
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    /// <summary>Field number for the "talk_id" field.</summary>
    public const int TalkIdFieldNumber = 2;
    private int talkId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TalkId {
      get { return talkId_; }
      set {
        talkId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListenMsgOrCallReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListenMsgOrCallReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneId != other.SceneId) return false;
      if (TalkId != other.TalkId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      if (TalkId != 0) hash ^= TalkId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SceneId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(SceneId);
      }
      if (TalkId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(TalkId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SceneId);
      }
      if (TalkId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(TalkId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListenMsgOrCallReq other) {
      if (other == null) {
        return;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
      if (other.TalkId != 0) {
        TalkId = other.TalkId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SceneId = input.ReadSInt32();
            break;
          }
          case 16: {
            TalkId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListenMsgOrCallRes : pb::IMessage<ListenMsgOrCallRes> {
    private static readonly pb::MessageParser<ListenMsgOrCallRes> _parser = new pb::MessageParser<ListenMsgOrCallRes>(() => new ListenMsgOrCallRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListenMsgOrCallRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListenMsgOrCallRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListenMsgOrCallRes(ListenMsgOrCallRes other) : this() {
      ret_ = other.ret_;
      MsgOrCall = other.msgOrCall_ != null ? other.MsgOrCall.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListenMsgOrCallRes Clone() {
      return new ListenMsgOrCallRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "msg_or_call" field.</summary>
    public const int MsgOrCallFieldNumber = 2;
    private global::Com.Proto.UserMsgOrCallPB msgOrCall_;
    /// <summary>
    ///听语音完毕后的短信/电话信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMsgOrCallPB MsgOrCall {
      get { return msgOrCall_; }
      set {
        msgOrCall_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListenMsgOrCallRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListenMsgOrCallRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(MsgOrCall, other.MsgOrCall)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (msgOrCall_ != null) hash ^= MsgOrCall.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (msgOrCall_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MsgOrCall);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (msgOrCall_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MsgOrCall);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListenMsgOrCallRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.msgOrCall_ != null) {
        if (msgOrCall_ == null) {
          msgOrCall_ = new global::Com.Proto.UserMsgOrCallPB();
        }
        MsgOrCall.MergeFrom(other.MsgOrCall);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (msgOrCall_ == null) {
              msgOrCall_ = new global::Com.Proto.UserMsgOrCallPB();
            }
            input.ReadMessage(msgOrCall_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///用户已触发的朋友圈信息  phoneC/FC
  /// </summary>
  public sealed partial class FriendCircleRes : pb::IMessage<FriendCircleRes> {
    private static readonly pb::MessageParser<FriendCircleRes> _parser = new pb::MessageParser<FriendCircleRes>(() => new FriendCircleRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendCircleRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendCircleRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendCircleRes(FriendCircleRes other) : this() {
      ret_ = other.ret_;
      friendCircles_ = other.friendCircles_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendCircleRes Clone() {
      return new FriendCircleRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "friend_circles" field.</summary>
    public const int FriendCirclesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.UserFriendCirclePB> _repeated_friendCircles_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.UserFriendCirclePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserFriendCirclePB> friendCircles_ = new pbc::RepeatedField<global::Com.Proto.UserFriendCirclePB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserFriendCirclePB> FriendCircles {
      get { return friendCircles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendCircleRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendCircleRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!friendCircles_.Equals(other.friendCircles_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= friendCircles_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      friendCircles_.WriteTo(output, _repeated_friendCircles_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += friendCircles_.CalculateSize(_repeated_friendCircles_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendCircleRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      friendCircles_.Add(other.friendCircles_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            friendCircles_.AddEntriesFrom(input, _repeated_friendCircles_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///发布朋友圈  phoneC/pubFC
  /// </summary>
  public sealed partial class PubFriendCircleReq : pb::IMessage<PubFriendCircleReq> {
    private static readonly pb::MessageParser<PubFriendCircleReq> _parser = new pb::MessageParser<PubFriendCircleReq>(() => new PubFriendCircleReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PubFriendCircleReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubFriendCircleReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubFriendCircleReq(PubFriendCircleReq other) : this() {
      sceneId_ = other.sceneId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubFriendCircleReq Clone() {
      return new PubFriendCircleReq(this);
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 1;
    private int sceneId_;
    /// <summary>
    ///哪条
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PubFriendCircleReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PubFriendCircleReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneId != other.SceneId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SceneId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(SceneId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SceneId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PubFriendCircleReq other) {
      if (other == null) {
        return;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SceneId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PubFriendCircleRes : pb::IMessage<PubFriendCircleRes> {
    private static readonly pb::MessageParser<PubFriendCircleRes> _parser = new pb::MessageParser<PubFriendCircleRes>(() => new PubFriendCircleRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PubFriendCircleRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubFriendCircleRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubFriendCircleRes(PubFriendCircleRes other) : this() {
      ret_ = other.ret_;
      FriendCircle = other.friendCircle_ != null ? other.FriendCircle.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubFriendCircleRes Clone() {
      return new PubFriendCircleRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "friend_circle" field.</summary>
    public const int FriendCircleFieldNumber = 2;
    private global::Com.Proto.UserFriendCirclePB friendCircle_;
    /// <summary>
    ///改变发布后的状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserFriendCirclePB FriendCircle {
      get { return friendCircle_; }
      set {
        friendCircle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PubFriendCircleRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PubFriendCircleRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(FriendCircle, other.FriendCircle)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (friendCircle_ != null) hash ^= FriendCircle.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (friendCircle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FriendCircle);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (friendCircle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FriendCircle);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PubFriendCircleRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.friendCircle_ != null) {
        if (friendCircle_ == null) {
          friendCircle_ = new global::Com.Proto.UserFriendCirclePB();
        }
        FriendCircle.MergeFrom(other.FriendCircle);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (friendCircle_ == null) {
              friendCircle_ = new global::Com.Proto.UserFriendCirclePB();
            }
            input.ReadMessage(friendCircle_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///评论朋友圈  phoneC/commentFC
  /// </summary>
  public sealed partial class CommentFriendCircleReq : pb::IMessage<CommentFriendCircleReq> {
    private static readonly pb::MessageParser<CommentFriendCircleReq> _parser = new pb::MessageParser<CommentFriendCircleReq>(() => new CommentFriendCircleReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommentFriendCircleReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentFriendCircleReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentFriendCircleReq(CommentFriendCircleReq other) : this() {
      sceneId_ = other.sceneId_;
      replayId_ = other.replayId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentFriendCircleReq Clone() {
      return new CommentFriendCircleReq(this);
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 1;
    private int sceneId_;
    /// <summary>
    ///哪条
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    /// <summary>Field number for the "replay_id" field.</summary>
    public const int ReplayIdFieldNumber = 2;
    private int replayId_;
    /// <summary>
    ///评论选项
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReplayId {
      get { return replayId_; }
      set {
        replayId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommentFriendCircleReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommentFriendCircleReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneId != other.SceneId) return false;
      if (ReplayId != other.ReplayId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      if (ReplayId != 0) hash ^= ReplayId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SceneId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(SceneId);
      }
      if (ReplayId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(ReplayId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SceneId);
      }
      if (ReplayId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ReplayId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommentFriendCircleReq other) {
      if (other == null) {
        return;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
      if (other.ReplayId != 0) {
        ReplayId = other.ReplayId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SceneId = input.ReadSInt32();
            break;
          }
          case 16: {
            ReplayId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommentFriendCircleRes : pb::IMessage<CommentFriendCircleRes> {
    private static readonly pb::MessageParser<CommentFriendCircleRes> _parser = new pb::MessageParser<CommentFriendCircleRes>(() => new CommentFriendCircleRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommentFriendCircleRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentFriendCircleRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentFriendCircleRes(CommentFriendCircleRes other) : this() {
      ret_ = other.ret_;
      FriendCircle = other.friendCircle_ != null ? other.FriendCircle.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentFriendCircleRes Clone() {
      return new CommentFriendCircleRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "friend_circle" field.</summary>
    public const int FriendCircleFieldNumber = 2;
    private global::Com.Proto.UserFriendCirclePB friendCircle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserFriendCirclePB FriendCircle {
      get { return friendCircle_; }
      set {
        friendCircle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommentFriendCircleRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommentFriendCircleRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(FriendCircle, other.FriendCircle)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (friendCircle_ != null) hash ^= FriendCircle.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (friendCircle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FriendCircle);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (friendCircle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FriendCircle);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommentFriendCircleRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.friendCircle_ != null) {
        if (friendCircle_ == null) {
          friendCircle_ = new global::Com.Proto.UserFriendCirclePB();
        }
        FriendCircle.MergeFrom(other.FriendCircle);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (friendCircle_ == null) {
              friendCircle_ = new global::Com.Proto.UserFriendCirclePB();
            }
            input.ReadMessage(friendCircle_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///用户已触发的微博信息  phoneC/microBlogs
  /// </summary>
  public sealed partial class MicroBlogRes : pb::IMessage<MicroBlogRes> {
    private static readonly pb::MessageParser<MicroBlogRes> _parser = new pb::MessageParser<MicroBlogRes>(() => new MicroBlogRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MicroBlogRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MicroBlogRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MicroBlogRes(MicroBlogRes other) : this() {
      ret_ = other.ret_;
      microBlogs_ = other.microBlogs_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MicroBlogRes Clone() {
      return new MicroBlogRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "micro_blogs" field.</summary>
    public const int MicroBlogsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.UserMicroBlogPB> _repeated_microBlogs_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.UserMicroBlogPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserMicroBlogPB> microBlogs_ = new pbc::RepeatedField<global::Com.Proto.UserMicroBlogPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserMicroBlogPB> MicroBlogs {
      get { return microBlogs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MicroBlogRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MicroBlogRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!microBlogs_.Equals(other.microBlogs_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= microBlogs_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      microBlogs_.WriteTo(output, _repeated_microBlogs_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += microBlogs_.CalculateSize(_repeated_microBlogs_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MicroBlogRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      microBlogs_.Add(other.microBlogs_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            microBlogs_.AddEntriesFrom(input, _repeated_microBlogs_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///点赞微博  phoneC/like
  /// </summary>
  public sealed partial class LikeMicroBlogReq : pb::IMessage<LikeMicroBlogReq> {
    private static readonly pb::MessageParser<LikeMicroBlogReq> _parser = new pb::MessageParser<LikeMicroBlogReq>(() => new LikeMicroBlogReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LikeMicroBlogReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LikeMicroBlogReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LikeMicroBlogReq(LikeMicroBlogReq other) : this() {
      sceneId_ = other.sceneId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LikeMicroBlogReq Clone() {
      return new LikeMicroBlogReq(this);
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 1;
    private int sceneId_;
    /// <summary>
    ///哪条
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LikeMicroBlogReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LikeMicroBlogReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneId != other.SceneId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SceneId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(SceneId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SceneId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LikeMicroBlogReq other) {
      if (other == null) {
        return;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SceneId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LikeMicroBlogRes : pb::IMessage<LikeMicroBlogRes> {
    private static readonly pb::MessageParser<LikeMicroBlogRes> _parser = new pb::MessageParser<LikeMicroBlogRes>(() => new LikeMicroBlogRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LikeMicroBlogRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LikeMicroBlogRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LikeMicroBlogRes(LikeMicroBlogRes other) : this() {
      ret_ = other.ret_;
      MicroBlog = other.microBlog_ != null ? other.MicroBlog.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LikeMicroBlogRes Clone() {
      return new LikeMicroBlogRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "micro_blog" field.</summary>
    public const int MicroBlogFieldNumber = 2;
    private global::Com.Proto.UserMicroBlogPB microBlog_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMicroBlogPB MicroBlog {
      get { return microBlog_; }
      set {
        microBlog_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LikeMicroBlogRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LikeMicroBlogRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(MicroBlog, other.MicroBlog)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (microBlog_ != null) hash ^= MicroBlog.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (microBlog_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MicroBlog);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (microBlog_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MicroBlog);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LikeMicroBlogRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.microBlog_ != null) {
        if (microBlog_ == null) {
          microBlog_ = new global::Com.Proto.UserMicroBlogPB();
        }
        MicroBlog.MergeFrom(other.MicroBlog);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (microBlog_ == null) {
              microBlog_ = new global::Com.Proto.UserMicroBlogPB();
            }
            input.ReadMessage(microBlog_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///评论微博  phoneC/commentMicroBlog
  /// </summary>
  public sealed partial class CommentMicroBlogReq : pb::IMessage<CommentMicroBlogReq> {
    private static readonly pb::MessageParser<CommentMicroBlogReq> _parser = new pb::MessageParser<CommentMicroBlogReq>(() => new CommentMicroBlogReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommentMicroBlogReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentMicroBlogReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentMicroBlogReq(CommentMicroBlogReq other) : this() {
      sceneId_ = other.sceneId_;
      selectIndex_ = other.selectIndex_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentMicroBlogReq Clone() {
      return new CommentMicroBlogReq(this);
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 1;
    private int sceneId_;
    /// <summary>
    ///哪条
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    /// <summary>Field number for the "select_index" field.</summary>
    public const int SelectIndexFieldNumber = 2;
    private int selectIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SelectIndex {
      get { return selectIndex_; }
      set {
        selectIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommentMicroBlogReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommentMicroBlogReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneId != other.SceneId) return false;
      if (SelectIndex != other.SelectIndex) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      if (SelectIndex != 0) hash ^= SelectIndex.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SceneId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(SceneId);
      }
      if (SelectIndex != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(SelectIndex);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SceneId);
      }
      if (SelectIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SelectIndex);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommentMicroBlogReq other) {
      if (other == null) {
        return;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
      if (other.SelectIndex != 0) {
        SelectIndex = other.SelectIndex;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SceneId = input.ReadSInt32();
            break;
          }
          case 16: {
            SelectIndex = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommentMicroBlogRes : pb::IMessage<CommentMicroBlogRes> {
    private static readonly pb::MessageParser<CommentMicroBlogRes> _parser = new pb::MessageParser<CommentMicroBlogRes>(() => new CommentMicroBlogRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommentMicroBlogRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentMicroBlogRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentMicroBlogRes(CommentMicroBlogRes other) : this() {
      ret_ = other.ret_;
      MicroBlog = other.microBlog_ != null ? other.MicroBlog.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentMicroBlogRes Clone() {
      return new CommentMicroBlogRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "micro_blog" field.</summary>
    public const int MicroBlogFieldNumber = 2;
    private global::Com.Proto.UserMicroBlogPB microBlog_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMicroBlogPB MicroBlog {
      get { return microBlog_; }
      set {
        microBlog_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommentMicroBlogRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommentMicroBlogRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(MicroBlog, other.MicroBlog)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (microBlog_ != null) hash ^= MicroBlog.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (microBlog_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MicroBlog);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (microBlog_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MicroBlog);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommentMicroBlogRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.microBlog_ != null) {
        if (microBlog_ == null) {
          microBlog_ = new global::Com.Proto.UserMicroBlogPB();
        }
        MicroBlog.MergeFrom(other.MicroBlog);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (microBlog_ == null) {
              microBlog_ = new global::Com.Proto.UserMicroBlogPB();
            }
            input.ReadMessage(microBlog_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///发布微博  phoneC/pubMicroBlog
  /// </summary>
  public sealed partial class PubMicroBlogReq : pb::IMessage<PubMicroBlogReq> {
    private static readonly pb::MessageParser<PubMicroBlogReq> _parser = new pb::MessageParser<PubMicroBlogReq>(() => new PubMicroBlogReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PubMicroBlogReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubMicroBlogReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubMicroBlogReq(PubMicroBlogReq other) : this() {
      sceneId_ = other.sceneId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubMicroBlogReq Clone() {
      return new PubMicroBlogReq(this);
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 1;
    private int sceneId_;
    /// <summary>
    ///哪条
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PubMicroBlogReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PubMicroBlogReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneId != other.SceneId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SceneId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(SceneId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SceneId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PubMicroBlogReq other) {
      if (other == null) {
        return;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SceneId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PubMicroBlogRes : pb::IMessage<PubMicroBlogRes> {
    private static readonly pb::MessageParser<PubMicroBlogRes> _parser = new pb::MessageParser<PubMicroBlogRes>(() => new PubMicroBlogRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PubMicroBlogRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubMicroBlogRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubMicroBlogRes(PubMicroBlogRes other) : this() {
      ret_ = other.ret_;
      MicroBlog = other.microBlog_ != null ? other.MicroBlog.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubMicroBlogRes Clone() {
      return new PubMicroBlogRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "micro_blog" field.</summary>
    public const int MicroBlogFieldNumber = 2;
    private global::Com.Proto.UserMicroBlogPB microBlog_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMicroBlogPB MicroBlog {
      get { return microBlog_; }
      set {
        microBlog_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PubMicroBlogRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PubMicroBlogRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(MicroBlog, other.MicroBlog)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (microBlog_ != null) hash ^= MicroBlog.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (microBlog_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MicroBlog);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (microBlog_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MicroBlog);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PubMicroBlogRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.microBlog_ != null) {
        if (microBlog_ == null) {
          microBlog_ = new global::Com.Proto.UserMicroBlogPB();
        }
        MicroBlog.MergeFrom(other.MicroBlog);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (microBlog_ == null) {
              microBlog_ = new global::Com.Proto.UserMicroBlogPB();
            }
            input.ReadMessage(microBlog_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///////////////////////////////////拉取用户所有数据/////////////////////////////////////
  /// </summary>
  public sealed partial class UserPhoneDataReq : pb::IMessage<UserPhoneDataReq> {
    private static readonly pb::MessageParser<UserPhoneDataReq> _parser = new pb::MessageParser<UserPhoneDataReq>(() => new UserPhoneDataReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserPhoneDataReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPhoneDataReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPhoneDataReq(UserPhoneDataReq other) : this() {
      isOpenModule_ = other.isOpenModule_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPhoneDataReq Clone() {
      return new UserPhoneDataReq(this);
    }

    /// <summary>Field number for the "isOpenModule" field.</summary>
    public const int IsOpenModuleFieldNumber = 1;
    private int isOpenModule_;
    /// <summary>
    ///0上线，不消除小红点；1打开模块，消除小红点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsOpenModule {
      get { return isOpenModule_; }
      set {
        isOpenModule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserPhoneDataReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserPhoneDataReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsOpenModule != other.IsOpenModule) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsOpenModule != 0) hash ^= IsOpenModule.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsOpenModule != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(IsOpenModule);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsOpenModule != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(IsOpenModule);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserPhoneDataReq other) {
      if (other == null) {
        return;
      }
      if (other.IsOpenModule != 0) {
        IsOpenModule = other.IsOpenModule;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            IsOpenModule = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserPhoneDataRes : pb::IMessage<UserPhoneDataRes> {
    private static readonly pb::MessageParser<UserPhoneDataRes> _parser = new pb::MessageParser<UserPhoneDataRes>(() => new UserPhoneDataRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserPhoneDataRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPhoneDataRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPhoneDataRes(UserPhoneDataRes other) : this() {
      ret_ = other.ret_;
      msgOrCalls_ = other.msgOrCalls_.Clone();
      friendCircles_ = other.friendCircles_.Clone();
      microBlogs_ = other.microBlogs_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPhoneDataRes Clone() {
      return new UserPhoneDataRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "msg_or_calls" field.</summary>
    public const int MsgOrCallsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.UserMsgOrCallPB> _repeated_msgOrCalls_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.UserMsgOrCallPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserMsgOrCallPB> msgOrCalls_ = new pbc::RepeatedField<global::Com.Proto.UserMsgOrCallPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserMsgOrCallPB> MsgOrCalls {
      get { return msgOrCalls_; }
    }

    /// <summary>Field number for the "friend_circles" field.</summary>
    public const int FriendCirclesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.UserFriendCirclePB> _repeated_friendCircles_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.UserFriendCirclePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserFriendCirclePB> friendCircles_ = new pbc::RepeatedField<global::Com.Proto.UserFriendCirclePB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserFriendCirclePB> FriendCircles {
      get { return friendCircles_; }
    }

    /// <summary>Field number for the "micro_blogs" field.</summary>
    public const int MicroBlogsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.UserMicroBlogPB> _repeated_microBlogs_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.UserMicroBlogPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserMicroBlogPB> microBlogs_ = new pbc::RepeatedField<global::Com.Proto.UserMicroBlogPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserMicroBlogPB> MicroBlogs {
      get { return microBlogs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserPhoneDataRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserPhoneDataRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!msgOrCalls_.Equals(other.msgOrCalls_)) return false;
      if(!friendCircles_.Equals(other.friendCircles_)) return false;
      if(!microBlogs_.Equals(other.microBlogs_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= msgOrCalls_.GetHashCode();
      hash ^= friendCircles_.GetHashCode();
      hash ^= microBlogs_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      msgOrCalls_.WriteTo(output, _repeated_msgOrCalls_codec);
      friendCircles_.WriteTo(output, _repeated_friendCircles_codec);
      microBlogs_.WriteTo(output, _repeated_microBlogs_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += msgOrCalls_.CalculateSize(_repeated_msgOrCalls_codec);
      size += friendCircles_.CalculateSize(_repeated_friendCircles_codec);
      size += microBlogs_.CalculateSize(_repeated_microBlogs_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserPhoneDataRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      msgOrCalls_.Add(other.msgOrCalls_);
      friendCircles_.Add(other.friendCircles_);
      microBlogs_.Add(other.microBlogs_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            msgOrCalls_.AddEntriesFrom(input, _repeated_msgOrCalls_codec);
            break;
          }
          case 26: {
            friendCircles_.AddEntriesFrom(input, _repeated_friendCircles_codec);
            break;
          }
          case 34: {
            microBlogs_.AddEntriesFrom(input, _repeated_microBlogs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EliminatEsceneReq : pb::IMessage<EliminatEsceneReq> {
    private static readonly pb::MessageParser<EliminatEsceneReq> _parser = new pb::MessageParser<EliminatEsceneReq>(() => new EliminatEsceneReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EliminatEsceneReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EliminatEsceneReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EliminatEsceneReq(EliminatEsceneReq other) : this() {
      sceneId_ = other.sceneId_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EliminatEsceneReq Clone() {
      return new EliminatEsceneReq(this);
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_sceneId_codec
        = pb::FieldCodec.ForSInt32(10);
    private readonly pbc::RepeatedField<int> sceneId_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///事件id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> SceneId {
      get { return sceneId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EliminatEsceneReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EliminatEsceneReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sceneId_.Equals(other.sceneId_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sceneId_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      sceneId_.WriteTo(output, _repeated_sceneId_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sceneId_.CalculateSize(_repeated_sceneId_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EliminatEsceneReq other) {
      if (other == null) {
        return;
      }
      sceneId_.Add(other.sceneId_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            sceneId_.AddEntriesFrom(input, _repeated_sceneId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EliminatEsceneRes : pb::IMessage<EliminatEsceneRes> {
    private static readonly pb::MessageParser<EliminatEsceneRes> _parser = new pb::MessageParser<EliminatEsceneRes>(() => new EliminatEsceneRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EliminatEsceneRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EliminatEsceneRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EliminatEsceneRes(EliminatEsceneRes other) : this() {
      ret_ = other.ret_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EliminatEsceneRes Clone() {
      return new EliminatEsceneRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///返回值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EliminatEsceneRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EliminatEsceneRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EliminatEsceneRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///拉取所有用户需要弹窗的电话数据   phoneC/userPhoneTipData
  /// </summary>
  public sealed partial class UserPhoneTipDataReq : pb::IMessage<UserPhoneTipDataReq> {
    private static readonly pb::MessageParser<UserPhoneTipDataReq> _parser = new pb::MessageParser<UserPhoneTipDataReq>(() => new UserPhoneTipDataReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserPhoneTipDataReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPhoneTipDataReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPhoneTipDataReq(UserPhoneTipDataReq other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPhoneTipDataReq Clone() {
      return new UserPhoneTipDataReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserPhoneTipDataReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserPhoneTipDataReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserPhoneTipDataReq other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class UserPhoneTipDataRes : pb::IMessage<UserPhoneTipDataRes> {
    private static readonly pb::MessageParser<UserPhoneTipDataRes> _parser = new pb::MessageParser<UserPhoneTipDataRes>(() => new UserPhoneTipDataRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserPhoneTipDataRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerPhoneReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPhoneTipDataRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPhoneTipDataRes(UserPhoneTipDataRes other) : this() {
      ret_ = other.ret_;
      msgOrCalls_ = other.msgOrCalls_.Clone();
      friendCircles_ = other.friendCircles_.Clone();
      microBlogs_ = other.microBlogs_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPhoneTipDataRes Clone() {
      return new UserPhoneTipDataRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "msg_or_calls" field.</summary>
    public const int MsgOrCallsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.UserMsgOrCallPB> _repeated_msgOrCalls_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.UserMsgOrCallPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserMsgOrCallPB> msgOrCalls_ = new pbc::RepeatedField<global::Com.Proto.UserMsgOrCallPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserMsgOrCallPB> MsgOrCalls {
      get { return msgOrCalls_; }
    }

    /// <summary>Field number for the "friend_circles" field.</summary>
    public const int FriendCirclesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.UserFriendCirclePB> _repeated_friendCircles_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.UserFriendCirclePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserFriendCirclePB> friendCircles_ = new pbc::RepeatedField<global::Com.Proto.UserFriendCirclePB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserFriendCirclePB> FriendCircles {
      get { return friendCircles_; }
    }

    /// <summary>Field number for the "micro_blogs" field.</summary>
    public const int MicroBlogsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.UserMicroBlogPB> _repeated_microBlogs_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.UserMicroBlogPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserMicroBlogPB> microBlogs_ = new pbc::RepeatedField<global::Com.Proto.UserMicroBlogPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserMicroBlogPB> MicroBlogs {
      get { return microBlogs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserPhoneTipDataRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserPhoneTipDataRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!msgOrCalls_.Equals(other.msgOrCalls_)) return false;
      if(!friendCircles_.Equals(other.friendCircles_)) return false;
      if(!microBlogs_.Equals(other.microBlogs_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= msgOrCalls_.GetHashCode();
      hash ^= friendCircles_.GetHashCode();
      hash ^= microBlogs_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      msgOrCalls_.WriteTo(output, _repeated_msgOrCalls_codec);
      friendCircles_.WriteTo(output, _repeated_friendCircles_codec);
      microBlogs_.WriteTo(output, _repeated_microBlogs_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += msgOrCalls_.CalculateSize(_repeated_msgOrCalls_codec);
      size += friendCircles_.CalculateSize(_repeated_friendCircles_codec);
      size += microBlogs_.CalculateSize(_repeated_microBlogs_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserPhoneTipDataRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      msgOrCalls_.Add(other.msgOrCalls_);
      friendCircles_.Add(other.friendCircles_);
      microBlogs_.Add(other.microBlogs_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            msgOrCalls_.AddEntriesFrom(input, _repeated_msgOrCalls_codec);
            break;
          }
          case 26: {
            friendCircles_.AddEntriesFrom(input, _repeated_friendCircles_codec);
            break;
          }
          case 34: {
            microBlogs_.AddEntriesFrom(input, _repeated_microBlogs_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
