// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_birthday_rule.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_birthday_rule.proto</summary>
  public static partial class BeanBirthdayRuleReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_birthday_rule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanBirthdayRuleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhiZWFuX2JpcnRoZGF5X3J1bGUucHJvdG8SCWNvbS5wcm90bxoKYmFzZS5w",
            "cm90byI9ChRQbGF5ZXJCaXJ0aGRheVJ1bGVQQhIOCgZwbGF5ZXIYASABKBES",
            "FQoNYmlydGhkYXlfZGF0ZRgCIAEoEkI7Ch9uZXQuZ2FsYXNwb3J0cy5iaWdz",
            "dGFyLnByb3RvY29sQhhQbGF5ZXJCaXJ0aGRheVJ1bGVQcm90b3NiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.PlayerBirthdayRulePB), global::Com.Proto.PlayerBirthdayRulePB.Parser, new[]{ "Player", "BirthdayDate" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///PlayerBirthdayRulePB PlayerBirthdayRule
  /// </summary>
  public sealed partial class PlayerBirthdayRulePB : pb::IMessage<PlayerBirthdayRulePB> {
    private static readonly pb::MessageParser<PlayerBirthdayRulePB> _parser = new pb::MessageParser<PlayerBirthdayRulePB>(() => new PlayerBirthdayRulePB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerBirthdayRulePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanBirthdayRuleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerBirthdayRulePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerBirthdayRulePB(PlayerBirthdayRulePB other) : this() {
      player_ = other.player_;
      birthdayDate_ = other.birthdayDate_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerBirthdayRulePB Clone() {
      return new PlayerBirthdayRulePB(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private int player_;
    /// <summary>
    ///主角ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "birthday_date" field.</summary>
    public const int BirthdayDateFieldNumber = 2;
    private long birthdayDate_;
    /// <summary>
    ///主角生日时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BirthdayDate {
      get { return birthdayDate_; }
      set {
        birthdayDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerBirthdayRulePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerBirthdayRulePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Player != other.Player) return false;
      if (BirthdayDate != other.BirthdayDate) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Player != 0) hash ^= Player.GetHashCode();
      if (BirthdayDate != 0L) hash ^= BirthdayDate.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Player != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Player);
      }
      if (BirthdayDate != 0L) {
        output.WriteRawTag(16);
        output.WriteSInt64(BirthdayDate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Player != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Player);
      }
      if (BirthdayDate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(BirthdayDate);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerBirthdayRulePB other) {
      if (other == null) {
        return;
      }
      if (other.Player != 0) {
        Player = other.Player;
      }
      if (other.BirthdayDate != 0L) {
        BirthdayDate = other.BirthdayDate;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Player = input.ReadSInt32();
            break;
          }
          case 16: {
            BirthdayDate = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
