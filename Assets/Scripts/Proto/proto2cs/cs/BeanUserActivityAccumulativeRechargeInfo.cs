// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_user_activity_accumulative_recharge_info.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_user_activity_accumulative_recharge_info.proto</summary>
  public static partial class BeanUserActivityAccumulativeRechargeInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_user_activity_accumulative_recharge_info.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanUserActivityAccumulativeRechargeInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNiZWFuX3VzZXJfYWN0aXZpdHlfYWNjdW11bGF0aXZlX3JlY2hhcmdlX2lu",
            "Zm8ucHJvdG8SCWNvbS5wcm90bxoKYmFzZS5wcm90bxoQYmVhbl9hd2FyZC5w",
            "cm90byJ2CiZVc2VyQWN0aXZpdHlBY2N1bXVsYXRpdmVSZWNoYXJnZUluZm9Q",
            "QhIPCgd1c2VyX2lkGAEgASgREhMKC2FjdGl2aXR5X2lkGAIgASgREg4KBmFt",
            "b3VudBgDIAEoERIWCg5yZWNlaXZlX3N0YXR1cxgEIAMoEUJNCh9uZXQuZ2Fs",
            "YXNwb3J0cy5iaWdzdGFyLnByb3RvY29sQipVc2VyQWN0aXZpdHlBY2N1bXVs",
            "YXRpdmVSZWNoYXJnZUluZm9Qcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanAwardReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserActivityAccumulativeRechargeInfoPB), global::Com.Proto.UserActivityAccumulativeRechargeInfoPB.Parser, new[]{ "UserId", "ActivityId", "Amount", "ReceiveStatus" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///UserActivityAccumulativeRechargeInfoPB UserActivityAccumulativeRechargeInfo
  /// </summary>
  public sealed partial class UserActivityAccumulativeRechargeInfoPB : pb::IMessage<UserActivityAccumulativeRechargeInfoPB> {
    private static readonly pb::MessageParser<UserActivityAccumulativeRechargeInfoPB> _parser = new pb::MessageParser<UserActivityAccumulativeRechargeInfoPB>(() => new UserActivityAccumulativeRechargeInfoPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserActivityAccumulativeRechargeInfoPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanUserActivityAccumulativeRechargeInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserActivityAccumulativeRechargeInfoPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserActivityAccumulativeRechargeInfoPB(UserActivityAccumulativeRechargeInfoPB other) : this() {
      userId_ = other.userId_;
      activityId_ = other.activityId_;
      amount_ = other.amount_;
      receiveStatus_ = other.receiveStatus_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserActivityAccumulativeRechargeInfoPB Clone() {
      return new UserActivityAccumulativeRechargeInfoPB(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 2;
    private int activityId_;
    /// <summary>
    ///活动ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private int amount_;
    /// <summary>
    ///充值总额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "receive_status" field.</summary>
    public const int ReceiveStatusFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_receiveStatus_codec
        = pb::FieldCodec.ForSInt32(34);
    private readonly pbc::RepeatedField<int> receiveStatus_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///领取状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ReceiveStatus {
      get { return receiveStatus_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserActivityAccumulativeRechargeInfoPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserActivityAccumulativeRechargeInfoPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ActivityId != other.ActivityId) return false;
      if (Amount != other.Amount) return false;
      if(!receiveStatus_.Equals(other.receiveStatus_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      hash ^= receiveStatus_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(UserId);
      }
      if (ActivityId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(ActivityId);
      }
      if (Amount != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Amount);
      }
      receiveStatus_.WriteTo(output, _repeated_receiveStatus_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActivityId);
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Amount);
      }
      size += receiveStatus_.CalculateSize(_repeated_receiveStatus_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserActivityAccumulativeRechargeInfoPB other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      receiveStatus_.Add(other.receiveStatus_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadSInt32();
            break;
          }
          case 16: {
            ActivityId = input.ReadSInt32();
            break;
          }
          case 24: {
            Amount = input.ReadSInt32();
            break;
          }
          case 34:
          case 32: {
            receiveStatus_.AddEntriesFrom(input, _repeated_receiveStatus_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
