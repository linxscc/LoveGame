// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_anti_addiction.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_anti_addiction.proto</summary>
  public static partial class BeanAntiAddictionReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_anti_addiction.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanAntiAddictionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChliZWFuX2FudGlfYWRkaWN0aW9uLnByb3RvEgljb20ucHJvdG8aCmJhc2Uu",
            "cHJvdG8iSwoPQW50aUFkZGljdGlvblBCEg8KB3VzZXJfaWQYASABKBESEgoK",
            "bG9naW5fdGltZRgCIAEoEhITCgtvbmxpbmVfdGltZRgDIAEoEkI2Ch9uZXQu",
            "Z2FsYXNwb3J0cy5iaWdzdGFyLnByb3RvY29sQhNBbnRpQWRkaWN0aW9uUHJv",
            "dG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.AntiAddictionPB), global::Com.Proto.AntiAddictionPB.Parser, new[]{ "UserId", "LoginTime", "OnlineTime" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///防沉迷
  /// </summary>
  public sealed partial class AntiAddictionPB : pb::IMessage<AntiAddictionPB> {
    private static readonly pb::MessageParser<AntiAddictionPB> _parser = new pb::MessageParser<AntiAddictionPB>(() => new AntiAddictionPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AntiAddictionPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanAntiAddictionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AntiAddictionPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AntiAddictionPB(AntiAddictionPB other) : this() {
      userId_ = other.userId_;
      loginTime_ = other.loginTime_;
      onlineTime_ = other.onlineTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AntiAddictionPB Clone() {
      return new AntiAddictionPB(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///userId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "login_time" field.</summary>
    public const int LoginTimeFieldNumber = 2;
    private long loginTime_;
    /// <summary>
    ///最后记录时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LoginTime {
      get { return loginTime_; }
      set {
        loginTime_ = value;
      }
    }

    /// <summary>Field number for the "online_time" field.</summary>
    public const int OnlineTimeFieldNumber = 3;
    private long onlineTime_;
    /// <summary>
    ///在线时长（秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OnlineTime {
      get { return onlineTime_; }
      set {
        onlineTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AntiAddictionPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AntiAddictionPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (LoginTime != other.LoginTime) return false;
      if (OnlineTime != other.OnlineTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (LoginTime != 0L) hash ^= LoginTime.GetHashCode();
      if (OnlineTime != 0L) hash ^= OnlineTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(UserId);
      }
      if (LoginTime != 0L) {
        output.WriteRawTag(16);
        output.WriteSInt64(LoginTime);
      }
      if (OnlineTime != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(OnlineTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      if (LoginTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(LoginTime);
      }
      if (OnlineTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(OnlineTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AntiAddictionPB other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.LoginTime != 0L) {
        LoginTime = other.LoginTime;
      }
      if (other.OnlineTime != 0L) {
        OnlineTime = other.OnlineTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadSInt32();
            break;
          }
          case 16: {
            LoginTime = input.ReadSInt64();
            break;
          }
          case 24: {
            OnlineTime = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
