// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_card_evo_rule.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_card_evo_rule.proto</summary>
  public static partial class BeanCardEvoRuleReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_card_evo_rule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanCardEvoRuleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhiZWFuX2NhcmRfZXZvX3J1bGUucHJvdG8SCWNvbS5wcm90bxoKYmFzZS5w",
            "cm90byKqAgoNQ2FyZEV2b1J1bGVQQhIZCgZwbGF5ZXIYASABKA4yCS5QbGF5",
            "ZXJQQhIZCgZjcmVkaXQYAiABKA4yCS5DcmVkaXRQQhIZCgNldm8YAyABKA4y",
            "DC5Fdm9sdXRpb25QQhIaCglzdGFyX25lZWQYBCABKA4yBy5TdGFyUEISEQoJ",
            "Z29sZF9uZWVkGAUgASgREjYKB2NvbnN1bWUYBiADKAsyJS5jb20ucHJvdG8u",
            "Q2FyZEV2b1J1bGVQQi5Db25zdW1lRW50cnkSDQoFcG93ZXIYByABKBESDAoE",
            "ZGVzYxgIIAEoCRIUCgx1c2VfY2FyZF9udW0YCSABKBEaLgoMQ29uc3VtZUVu",
            "dHJ5EgsKA2tleRgBIAEoERINCgV2YWx1ZRgCIAEoEToCOAFCNAofbmV0Lmdh",
            "bGFzcG9ydHMuYmlnc3Rhci5wcm90b2NvbEIRQ2FyZEV2b1J1bGVQcm90b3Ni",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CardEvoRulePB), global::Com.Proto.CardEvoRulePB.Parser, new[]{ "Player", "Credit", "Evo", "StarNeed", "GoldNeed", "Consume", "Power", "Desc", "UseCardNum" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///CardEvoRulePB CardEvoRule
  /// </summary>
  public sealed partial class CardEvoRulePB : pb::IMessage<CardEvoRulePB> {
    private static readonly pb::MessageParser<CardEvoRulePB> _parser = new pb::MessageParser<CardEvoRulePB>(() => new CardEvoRulePB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardEvoRulePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanCardEvoRuleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardEvoRulePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardEvoRulePB(CardEvoRulePB other) : this() {
      player_ = other.player_;
      credit_ = other.credit_;
      evo_ = other.evo_;
      starNeed_ = other.starNeed_;
      goldNeed_ = other.goldNeed_;
      consume_ = other.consume_.Clone();
      power_ = other.power_;
      desc_ = other.desc_;
      useCardNum_ = other.useCardNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardEvoRulePB Clone() {
      return new CardEvoRulePB(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::PlayerPB player_ = 0;
    /// <summary>
    ///男主类型1-4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PlayerPB Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "credit" field.</summary>
    public const int CreditFieldNumber = 2;
    private global::CreditPB credit_ = 0;
    /// <summary>
    ///稀有度0-2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CreditPB Credit {
      get { return credit_; }
      set {
        credit_ = value;
      }
    }

    /// <summary>Field number for the "evo" field.</summary>
    public const int EvoFieldNumber = 3;
    private global::EvolutionPB evo_ = 0;
    /// <summary>
    ///进化阶段1-3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EvolutionPB Evo {
      get { return evo_; }
      set {
        evo_ = value;
      }
    }

    /// <summary>Field number for the "star_need" field.</summary>
    public const int StarNeedFieldNumber = 4;
    private global::StarPB starNeed_ = 0;
    /// <summary>
    ///需要达到的星级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::StarPB StarNeed {
      get { return starNeed_; }
      set {
        starNeed_ = value;
      }
    }

    /// <summary>Field number for the "gold_need" field.</summary>
    public const int GoldNeedFieldNumber = 5;
    private int goldNeed_;
    /// <summary>
    ///需要消耗的金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoldNeed {
      get { return goldNeed_; }
      set {
        goldNeed_ = value;
      }
    }

    /// <summary>Field number for the "consume" field.</summary>
    public const int ConsumeFieldNumber = 6;
    private static readonly pbc::MapField<int, int>.Codec _map_consume_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForSInt32(8), pb::FieldCodec.ForSInt32(16), 50);
    private readonly pbc::MapField<int, int> consume_ = new pbc::MapField<int, int>();
    /// <summary>
    ///进化需要消耗的道具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> Consume {
      get { return consume_; }
    }

    /// <summary>Field number for the "power" field.</summary>
    public const int PowerFieldNumber = 7;
    private int power_;
    /// <summary>
    ///进化获得的卡牌能力值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Power {
      get { return power_; }
      set {
        power_ = value;
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 8;
    private string desc_ = "";
    /// <summary>
    ///前端进化描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_card_num" field.</summary>
    public const int UseCardNumFieldNumber = 9;
    private int useCardNum_;
    /// <summary>
    ///最多可使用抵消星缘的数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UseCardNum {
      get { return useCardNum_; }
      set {
        useCardNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardEvoRulePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardEvoRulePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Player != other.Player) return false;
      if (Credit != other.Credit) return false;
      if (Evo != other.Evo) return false;
      if (StarNeed != other.StarNeed) return false;
      if (GoldNeed != other.GoldNeed) return false;
      if (!Consume.Equals(other.Consume)) return false;
      if (Power != other.Power) return false;
      if (Desc != other.Desc) return false;
      if (UseCardNum != other.UseCardNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Player != 0) hash ^= Player.GetHashCode();
      if (Credit != 0) hash ^= Credit.GetHashCode();
      if (Evo != 0) hash ^= Evo.GetHashCode();
      if (StarNeed != 0) hash ^= StarNeed.GetHashCode();
      if (GoldNeed != 0) hash ^= GoldNeed.GetHashCode();
      hash ^= Consume.GetHashCode();
      if (Power != 0) hash ^= Power.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (UseCardNum != 0) hash ^= UseCardNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Player != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Player);
      }
      if (Credit != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Credit);
      }
      if (Evo != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Evo);
      }
      if (StarNeed != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) StarNeed);
      }
      if (GoldNeed != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(GoldNeed);
      }
      consume_.WriteTo(output, _map_consume_codec);
      if (Power != 0) {
        output.WriteRawTag(56);
        output.WriteSInt32(Power);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Desc);
      }
      if (UseCardNum != 0) {
        output.WriteRawTag(72);
        output.WriteSInt32(UseCardNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Player != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Player);
      }
      if (Credit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Credit);
      }
      if (Evo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Evo);
      }
      if (StarNeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StarNeed);
      }
      if (GoldNeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(GoldNeed);
      }
      size += consume_.CalculateSize(_map_consume_codec);
      if (Power != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Power);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (UseCardNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UseCardNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardEvoRulePB other) {
      if (other == null) {
        return;
      }
      if (other.Player != 0) {
        Player = other.Player;
      }
      if (other.Credit != 0) {
        Credit = other.Credit;
      }
      if (other.Evo != 0) {
        Evo = other.Evo;
      }
      if (other.StarNeed != 0) {
        StarNeed = other.StarNeed;
      }
      if (other.GoldNeed != 0) {
        GoldNeed = other.GoldNeed;
      }
      consume_.Add(other.consume_);
      if (other.Power != 0) {
        Power = other.Power;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.UseCardNum != 0) {
        UseCardNum = other.UseCardNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            player_ = (global::PlayerPB) input.ReadEnum();
            break;
          }
          case 16: {
            credit_ = (global::CreditPB) input.ReadEnum();
            break;
          }
          case 24: {
            evo_ = (global::EvolutionPB) input.ReadEnum();
            break;
          }
          case 32: {
            starNeed_ = (global::StarPB) input.ReadEnum();
            break;
          }
          case 40: {
            GoldNeed = input.ReadSInt32();
            break;
          }
          case 50: {
            consume_.AddEntriesFrom(input, _map_consume_codec);
            break;
          }
          case 56: {
            Power = input.ReadSInt32();
            break;
          }
          case 66: {
            Desc = input.ReadString();
            break;
          }
          case 72: {
            UseCardNum = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
