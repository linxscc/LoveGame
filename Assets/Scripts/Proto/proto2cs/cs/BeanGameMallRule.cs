// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_game_mall_rule.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_game_mall_rule.proto</summary>
  public static partial class BeanGameMallRuleReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_game_mall_rule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanGameMallRuleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChliZWFuX2dhbWVfbWFsbF9ydWxlLnByb3RvEgljb20ucHJvdG8aCmJhc2Uu",
            "cHJvdG8aEGJlYW5fYXdhcmQucHJvdG8iiAMKDkdhbWVNYWxsUnVsZVBCEg8K",
            "B21hbGxfaWQYASABKBESHgoJbWFsbF90eXBlGAIgASgOMgsuTWFsbFR5cGVQ",
            "QhIeCgltYWxsX3NvcnQYAyABKA4yCy5NYWxsU29ydFBCEiAKCm1vbmV5X3R5",
            "cGUYBCABKA4yDC5Nb25leVR5cGVQQhIRCgltYWxsX25hbWUYBSABKAkSEQoJ",
            "bWFsbF9kZXNjGAYgASgJEhIKCmdpZnRfaW1hZ2UYByABKAkSDAoEc2xvdBgI",
            "IAEoERIgCgptYWxsX2xhYmVsGAkgASgOMgwuTWFsbExhYmVsUEISEwoLbGFi",
            "ZWxfaW1hZ2UYCiABKAkSEgoKcmVhbF9wcmljZRgLIAEoERIWCg5vcmlnaW5h",
            "bF9wcmljZRgMIAEoERIPCgdidXlfbWF4GA0gASgREiEKBWF3YXJkGA4gAygL",
            "MhIuY29tLnByb3RvLkF3YXJkUEISEgoKc3RhcnRfdGltZRgPIAEoEhIQCghl",
            "bmRfdGltZRgQIAEoEkI1Ch9uZXQuZ2FsYXNwb3J0cy5iaWdzdGFyLnByb3Rv",
            "Y29sQhJHYW1lTWFsbFJ1bGVQcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanAwardReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GameMallRulePB), global::Com.Proto.GameMallRulePB.Parser, new[]{ "MallId", "MallType", "MallSort", "MoneyType", "MallName", "MallDesc", "GiftImage", "Slot", "MallLabel", "LabelImage", "RealPrice", "OriginalPrice", "BuyMax", "Award", "StartTime", "EndTime" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///AwardPB Award
  /// </summary>
  public sealed partial class GameMallRulePB : pb::IMessage<GameMallRulePB> {
    private static readonly pb::MessageParser<GameMallRulePB> _parser = new pb::MessageParser<GameMallRulePB>(() => new GameMallRulePB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameMallRulePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanGameMallRuleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMallRulePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMallRulePB(GameMallRulePB other) : this() {
      mallId_ = other.mallId_;
      mallType_ = other.mallType_;
      mallSort_ = other.mallSort_;
      moneyType_ = other.moneyType_;
      mallName_ = other.mallName_;
      mallDesc_ = other.mallDesc_;
      giftImage_ = other.giftImage_;
      slot_ = other.slot_;
      mallLabel_ = other.mallLabel_;
      labelImage_ = other.labelImage_;
      realPrice_ = other.realPrice_;
      originalPrice_ = other.originalPrice_;
      buyMax_ = other.buyMax_;
      award_ = other.award_.Clone();
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMallRulePB Clone() {
      return new GameMallRulePB(this);
    }

    /// <summary>Field number for the "mall_id" field.</summary>
    public const int MallIdFieldNumber = 1;
    private int mallId_;
    /// <summary>
    ///商品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MallId {
      get { return mallId_; }
      set {
        mallId_ = value;
      }
    }

    /// <summary>Field number for the "mall_type" field.</summary>
    public const int MallTypeFieldNumber = 2;
    private global::MallTypePB mallType_ = 0;
    /// <summary>
    ///商品类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MallTypePB MallType {
      get { return mallType_; }
      set {
        mallType_ = value;
      }
    }

    /// <summary>Field number for the "mall_sort" field.</summary>
    public const int MallSortFieldNumber = 3;
    private global::MallSortPB mallSort_ = 0;
    /// <summary>
    ///商品分类
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MallSortPB MallSort {
      get { return mallSort_; }
      set {
        mallSort_ = value;
      }
    }

    /// <summary>Field number for the "money_type" field.</summary>
    public const int MoneyTypeFieldNumber = 4;
    private global::MoneyTypePB moneyType_ = 0;
    /// <summary>
    ///货币类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MoneyTypePB MoneyType {
      get { return moneyType_; }
      set {
        moneyType_ = value;
      }
    }

    /// <summary>Field number for the "mall_name" field.</summary>
    public const int MallNameFieldNumber = 5;
    private string mallName_ = "";
    /// <summary>
    ///商品名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MallName {
      get { return mallName_; }
      set {
        mallName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mall_desc" field.</summary>
    public const int MallDescFieldNumber = 6;
    private string mallDesc_ = "";
    /// <summary>
    ///商品描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MallDesc {
      get { return mallDesc_; }
      set {
        mallDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gift_image" field.</summary>
    public const int GiftImageFieldNumber = 7;
    private string giftImage_ = "";
    /// <summary>
    ///礼包图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GiftImage {
      get { return giftImage_; }
      set {
        giftImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "slot" field.</summary>
    public const int SlotFieldNumber = 8;
    private int slot_;
    /// <summary>
    ///槽位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Slot {
      get { return slot_; }
      set {
        slot_ = value;
      }
    }

    /// <summary>Field number for the "mall_label" field.</summary>
    public const int MallLabelFieldNumber = 9;
    private global::MallLabelPB mallLabel_ = 0;
    /// <summary>
    ///商品标签
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MallLabelPB MallLabel {
      get { return mallLabel_; }
      set {
        mallLabel_ = value;
      }
    }

    /// <summary>Field number for the "label_image" field.</summary>
    public const int LabelImageFieldNumber = 10;
    private string labelImage_ = "";
    /// <summary>
    ///商品类型展示图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LabelImage {
      get { return labelImage_; }
      set {
        labelImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "real_price" field.</summary>
    public const int RealPriceFieldNumber = 11;
    private int realPrice_;
    /// <summary>
    ///真实价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RealPrice {
      get { return realPrice_; }
      set {
        realPrice_ = value;
      }
    }

    /// <summary>Field number for the "original_price" field.</summary>
    public const int OriginalPriceFieldNumber = 12;
    private int originalPrice_;
    /// <summary>
    ///原价
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OriginalPrice {
      get { return originalPrice_; }
      set {
        originalPrice_ = value;
      }
    }

    /// <summary>Field number for the "buy_max" field.</summary>
    public const int BuyMaxFieldNumber = 13;
    private int buyMax_;
    /// <summary>
    ///周期内购买上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuyMax {
      get { return buyMax_; }
      set {
        buyMax_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_award_codec
        = pb::FieldCodec.ForMessage(114, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> award_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///商品奖励内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Award {
      get { return award_; }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 15;
    private long startTime_;
    /// <summary>
    ///开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 16;
    private long endTime_;
    /// <summary>
    ///结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameMallRulePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameMallRulePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MallId != other.MallId) return false;
      if (MallType != other.MallType) return false;
      if (MallSort != other.MallSort) return false;
      if (MoneyType != other.MoneyType) return false;
      if (MallName != other.MallName) return false;
      if (MallDesc != other.MallDesc) return false;
      if (GiftImage != other.GiftImage) return false;
      if (Slot != other.Slot) return false;
      if (MallLabel != other.MallLabel) return false;
      if (LabelImage != other.LabelImage) return false;
      if (RealPrice != other.RealPrice) return false;
      if (OriginalPrice != other.OriginalPrice) return false;
      if (BuyMax != other.BuyMax) return false;
      if(!award_.Equals(other.award_)) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MallId != 0) hash ^= MallId.GetHashCode();
      if (MallType != 0) hash ^= MallType.GetHashCode();
      if (MallSort != 0) hash ^= MallSort.GetHashCode();
      if (MoneyType != 0) hash ^= MoneyType.GetHashCode();
      if (MallName.Length != 0) hash ^= MallName.GetHashCode();
      if (MallDesc.Length != 0) hash ^= MallDesc.GetHashCode();
      if (GiftImage.Length != 0) hash ^= GiftImage.GetHashCode();
      if (Slot != 0) hash ^= Slot.GetHashCode();
      if (MallLabel != 0) hash ^= MallLabel.GetHashCode();
      if (LabelImage.Length != 0) hash ^= LabelImage.GetHashCode();
      if (RealPrice != 0) hash ^= RealPrice.GetHashCode();
      if (OriginalPrice != 0) hash ^= OriginalPrice.GetHashCode();
      if (BuyMax != 0) hash ^= BuyMax.GetHashCode();
      hash ^= award_.GetHashCode();
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MallId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(MallId);
      }
      if (MallType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MallType);
      }
      if (MallSort != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MallSort);
      }
      if (MoneyType != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) MoneyType);
      }
      if (MallName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MallName);
      }
      if (MallDesc.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MallDesc);
      }
      if (GiftImage.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(GiftImage);
      }
      if (Slot != 0) {
        output.WriteRawTag(64);
        output.WriteSInt32(Slot);
      }
      if (MallLabel != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) MallLabel);
      }
      if (LabelImage.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(LabelImage);
      }
      if (RealPrice != 0) {
        output.WriteRawTag(88);
        output.WriteSInt32(RealPrice);
      }
      if (OriginalPrice != 0) {
        output.WriteRawTag(96);
        output.WriteSInt32(OriginalPrice);
      }
      if (BuyMax != 0) {
        output.WriteRawTag(104);
        output.WriteSInt32(BuyMax);
      }
      award_.WriteTo(output, _repeated_award_codec);
      if (StartTime != 0L) {
        output.WriteRawTag(120);
        output.WriteSInt64(StartTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteSInt64(EndTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MallId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MallId);
      }
      if (MallType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MallType);
      }
      if (MallSort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MallSort);
      }
      if (MoneyType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MoneyType);
      }
      if (MallName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MallName);
      }
      if (MallDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MallDesc);
      }
      if (GiftImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GiftImage);
      }
      if (Slot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Slot);
      }
      if (MallLabel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MallLabel);
      }
      if (LabelImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LabelImage);
      }
      if (RealPrice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(RealPrice);
      }
      if (OriginalPrice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(OriginalPrice);
      }
      if (BuyMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(BuyMax);
      }
      size += award_.CalculateSize(_repeated_award_codec);
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(StartTime);
      }
      if (EndTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeSInt64Size(EndTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameMallRulePB other) {
      if (other == null) {
        return;
      }
      if (other.MallId != 0) {
        MallId = other.MallId;
      }
      if (other.MallType != 0) {
        MallType = other.MallType;
      }
      if (other.MallSort != 0) {
        MallSort = other.MallSort;
      }
      if (other.MoneyType != 0) {
        MoneyType = other.MoneyType;
      }
      if (other.MallName.Length != 0) {
        MallName = other.MallName;
      }
      if (other.MallDesc.Length != 0) {
        MallDesc = other.MallDesc;
      }
      if (other.GiftImage.Length != 0) {
        GiftImage = other.GiftImage;
      }
      if (other.Slot != 0) {
        Slot = other.Slot;
      }
      if (other.MallLabel != 0) {
        MallLabel = other.MallLabel;
      }
      if (other.LabelImage.Length != 0) {
        LabelImage = other.LabelImage;
      }
      if (other.RealPrice != 0) {
        RealPrice = other.RealPrice;
      }
      if (other.OriginalPrice != 0) {
        OriginalPrice = other.OriginalPrice;
      }
      if (other.BuyMax != 0) {
        BuyMax = other.BuyMax;
      }
      award_.Add(other.award_);
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MallId = input.ReadSInt32();
            break;
          }
          case 16: {
            mallType_ = (global::MallTypePB) input.ReadEnum();
            break;
          }
          case 24: {
            mallSort_ = (global::MallSortPB) input.ReadEnum();
            break;
          }
          case 32: {
            moneyType_ = (global::MoneyTypePB) input.ReadEnum();
            break;
          }
          case 42: {
            MallName = input.ReadString();
            break;
          }
          case 50: {
            MallDesc = input.ReadString();
            break;
          }
          case 58: {
            GiftImage = input.ReadString();
            break;
          }
          case 64: {
            Slot = input.ReadSInt32();
            break;
          }
          case 72: {
            mallLabel_ = (global::MallLabelPB) input.ReadEnum();
            break;
          }
          case 82: {
            LabelImage = input.ReadString();
            break;
          }
          case 88: {
            RealPrice = input.ReadSInt32();
            break;
          }
          case 96: {
            OriginalPrice = input.ReadSInt32();
            break;
          }
          case 104: {
            BuyMax = input.ReadSInt32();
            break;
          }
          case 114: {
            award_.AddEntriesFrom(input, _repeated_award_codec);
            break;
          }
          case 120: {
            StartTime = input.ReadSInt64();
            break;
          }
          case 128: {
            EndTime = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
