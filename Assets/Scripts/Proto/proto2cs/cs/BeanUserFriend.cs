// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_user_friend.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_user_friend.proto</summary>
  public static partial class BeanUserFriendReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_user_friend.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanUserFriendReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZiZWFuX3VzZXJfZnJpZW5kLnByb3RvEgljb20ucHJvdG8aCmJhc2UucHJv",
            "dG8ijAEKDkZyaWVuZEJhc2VJbmZvEg8KB3VzZXJfaWQYASABKBESEQoJdXNl",
            "cl9uYW1lGAIgASgJEhEKCXVzZXJfaGVhZBgDIAEoERIXCg9sYXN0X2xvZ2lu",
            "X3RpbWUYBCABKAMSEAoIY2FyZF9udW0YBSABKBESGAoQZGVwYXJ0bWVudF9s",
            "ZXZlbBgGIAEoESJwCgxVc2VyRnJpZW5kUEISDwoHdXNlcl9pZBgBIAEoERIX",
            "Cg9wb3dlcl9nZXRfc3RhdGUYAiABKBESHAoUcG93ZXJfYmVfZ2l2ZW5fc3Rh",
            "dGUYAyABKBESGAoQcG93ZXJfc2VuZF9zdGF0ZRgEIAEoESLdAQoORnJpZW5k",
            "RGV0YWlsUEISDwoHdXNlcl9pZBgBIAEoERIRCgl1c2VyX25hbWUYAiABKAkS",
            "EQoJdXNlcl9oZWFkGAMgASgREhcKD2xhc3RfbG9naW5fdGltZRgEIAEoAxIQ",
            "CghjYXJkX251bRgFIAEoERIYChBkZXBhcnRtZW50X2xldmVsGAYgASgREhcK",
            "D3Bvd2VyX2dldF9zdGF0ZRgHIAEoERIcChRwb3dlcl9iZV9naXZlbl9zdGF0",
            "ZRgIIAEoERIYChBwb3dlcl9zZW5kX3N0YXRlGAkgASgRQjMKH25ldC5nYWxh",
            "c3BvcnRzLmJpZ3N0YXIucHJvdG9jb2xCEFVzZXJGcmllbmRQcm90b3NiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.FriendBaseInfo), global::Com.Proto.FriendBaseInfo.Parser, new[]{ "UserId", "UserName", "UserHead", "LastLoginTime", "CardNum", "DepartmentLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserFriendPB), global::Com.Proto.UserFriendPB.Parser, new[]{ "UserId", "PowerGetState", "PowerBeGivenState", "PowerSendState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.FriendDetailPB), global::Com.Proto.FriendDetailPB.Parser, new[]{ "UserId", "UserName", "UserHead", "LastLoginTime", "CardNum", "DepartmentLevel", "PowerGetState", "PowerBeGivenState", "PowerSendState" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///FriendBaseInfoPB FriendBaseInfo
  /// </summary>
  public sealed partial class FriendBaseInfo : pb::IMessage<FriendBaseInfo> {
    private static readonly pb::MessageParser<FriendBaseInfo> _parser = new pb::MessageParser<FriendBaseInfo>(() => new FriendBaseInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendBaseInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanUserFriendReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendBaseInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendBaseInfo(FriendBaseInfo other) : this() {
      userId_ = other.userId_;
      userName_ = other.userName_;
      userHead_ = other.userHead_;
      lastLoginTime_ = other.lastLoginTime_;
      cardNum_ = other.cardNum_;
      departmentLevel_ = other.departmentLevel_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendBaseInfo Clone() {
      return new FriendBaseInfo(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///游戏ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    /// <summary>
    ///名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_head" field.</summary>
    public const int UserHeadFieldNumber = 3;
    private int userHead_;
    /// <summary>
    ///头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserHead {
      get { return userHead_; }
      set {
        userHead_ = value;
      }
    }

    /// <summary>Field number for the "last_login_time" field.</summary>
    public const int LastLoginTimeFieldNumber = 4;
    private long lastLoginTime_;
    /// <summary>
    ///上次登录的时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastLoginTime {
      get { return lastLoginTime_; }
      set {
        lastLoginTime_ = value;
      }
    }

    /// <summary>Field number for the "card_num" field.</summary>
    public const int CardNumFieldNumber = 5;
    private int cardNum_;
    /// <summary>
    ///星缘种类数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardNum {
      get { return cardNum_; }
      set {
        cardNum_ = value;
      }
    }

    /// <summary>Field number for the "department_level" field.</summary>
    public const int DepartmentLevelFieldNumber = 6;
    private int departmentLevel_;
    /// <summary>
    ///应援会等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DepartmentLevel {
      get { return departmentLevel_; }
      set {
        departmentLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendBaseInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendBaseInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (UserName != other.UserName) return false;
      if (UserHead != other.UserHead) return false;
      if (LastLoginTime != other.LastLoginTime) return false;
      if (CardNum != other.CardNum) return false;
      if (DepartmentLevel != other.DepartmentLevel) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (UserHead != 0) hash ^= UserHead.GetHashCode();
      if (LastLoginTime != 0L) hash ^= LastLoginTime.GetHashCode();
      if (CardNum != 0) hash ^= CardNum.GetHashCode();
      if (DepartmentLevel != 0) hash ^= DepartmentLevel.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (UserHead != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(UserHead);
      }
      if (LastLoginTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(LastLoginTime);
      }
      if (CardNum != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(CardNum);
      }
      if (DepartmentLevel != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(DepartmentLevel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (UserHead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserHead);
      }
      if (LastLoginTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastLoginTime);
      }
      if (CardNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CardNum);
      }
      if (DepartmentLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DepartmentLevel);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendBaseInfo other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.UserHead != 0) {
        UserHead = other.UserHead;
      }
      if (other.LastLoginTime != 0L) {
        LastLoginTime = other.LastLoginTime;
      }
      if (other.CardNum != 0) {
        CardNum = other.CardNum;
      }
      if (other.DepartmentLevel != 0) {
        DepartmentLevel = other.DepartmentLevel;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadSInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 24: {
            UserHead = input.ReadSInt32();
            break;
          }
          case 32: {
            LastLoginTime = input.ReadInt64();
            break;
          }
          case 40: {
            CardNum = input.ReadSInt32();
            break;
          }
          case 48: {
            DepartmentLevel = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///UserFriendPB UserFriend
  /// </summary>
  public sealed partial class UserFriendPB : pb::IMessage<UserFriendPB> {
    private static readonly pb::MessageParser<UserFriendPB> _parser = new pb::MessageParser<UserFriendPB>(() => new UserFriendPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserFriendPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanUserFriendReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserFriendPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserFriendPB(UserFriendPB other) : this() {
      userId_ = other.userId_;
      powerGetState_ = other.powerGetState_;
      powerBeGivenState_ = other.powerBeGivenState_;
      powerSendState_ = other.powerSendState_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserFriendPB Clone() {
      return new UserFriendPB(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///好友游戏ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "power_get_state" field.</summary>
    public const int PowerGetStateFieldNumber = 2;
    private int powerGetState_;
    /// <summary>
    ///0未领取1已经领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PowerGetState {
      get { return powerGetState_; }
      set {
        powerGetState_ = value;
      }
    }

    /// <summary>Field number for the "power_be_given_state" field.</summary>
    public const int PowerBeGivenStateFieldNumber = 3;
    private int powerBeGivenState_;
    /// <summary>
    ///0未被赠送1已被赠送
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PowerBeGivenState {
      get { return powerBeGivenState_; }
      set {
        powerBeGivenState_ = value;
      }
    }

    /// <summary>Field number for the "power_send_state" field.</summary>
    public const int PowerSendStateFieldNumber = 4;
    private int powerSendState_;
    /// <summary>
    ///0未赠送其体力1已赠送其体力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PowerSendState {
      get { return powerSendState_; }
      set {
        powerSendState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserFriendPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserFriendPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (PowerGetState != other.PowerGetState) return false;
      if (PowerBeGivenState != other.PowerBeGivenState) return false;
      if (PowerSendState != other.PowerSendState) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (PowerGetState != 0) hash ^= PowerGetState.GetHashCode();
      if (PowerBeGivenState != 0) hash ^= PowerBeGivenState.GetHashCode();
      if (PowerSendState != 0) hash ^= PowerSendState.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(UserId);
      }
      if (PowerGetState != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(PowerGetState);
      }
      if (PowerBeGivenState != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(PowerBeGivenState);
      }
      if (PowerSendState != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(PowerSendState);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      if (PowerGetState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(PowerGetState);
      }
      if (PowerBeGivenState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(PowerBeGivenState);
      }
      if (PowerSendState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(PowerSendState);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserFriendPB other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.PowerGetState != 0) {
        PowerGetState = other.PowerGetState;
      }
      if (other.PowerBeGivenState != 0) {
        PowerBeGivenState = other.PowerBeGivenState;
      }
      if (other.PowerSendState != 0) {
        PowerSendState = other.PowerSendState;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadSInt32();
            break;
          }
          case 16: {
            PowerGetState = input.ReadSInt32();
            break;
          }
          case 24: {
            PowerBeGivenState = input.ReadSInt32();
            break;
          }
          case 32: {
            PowerSendState = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FriendDetailPB : pb::IMessage<FriendDetailPB> {
    private static readonly pb::MessageParser<FriendDetailPB> _parser = new pb::MessageParser<FriendDetailPB>(() => new FriendDetailPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendDetailPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanUserFriendReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendDetailPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendDetailPB(FriendDetailPB other) : this() {
      userId_ = other.userId_;
      userName_ = other.userName_;
      userHead_ = other.userHead_;
      lastLoginTime_ = other.lastLoginTime_;
      cardNum_ = other.cardNum_;
      departmentLevel_ = other.departmentLevel_;
      powerGetState_ = other.powerGetState_;
      powerBeGivenState_ = other.powerBeGivenState_;
      powerSendState_ = other.powerSendState_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendDetailPB Clone() {
      return new FriendDetailPB(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///游戏ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    /// <summary>
    ///名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_head" field.</summary>
    public const int UserHeadFieldNumber = 3;
    private int userHead_;
    /// <summary>
    ///头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserHead {
      get { return userHead_; }
      set {
        userHead_ = value;
      }
    }

    /// <summary>Field number for the "last_login_time" field.</summary>
    public const int LastLoginTimeFieldNumber = 4;
    private long lastLoginTime_;
    /// <summary>
    ///上次登录的时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastLoginTime {
      get { return lastLoginTime_; }
      set {
        lastLoginTime_ = value;
      }
    }

    /// <summary>Field number for the "card_num" field.</summary>
    public const int CardNumFieldNumber = 5;
    private int cardNum_;
    /// <summary>
    ///星缘种类数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardNum {
      get { return cardNum_; }
      set {
        cardNum_ = value;
      }
    }

    /// <summary>Field number for the "department_level" field.</summary>
    public const int DepartmentLevelFieldNumber = 6;
    private int departmentLevel_;
    /// <summary>
    ///应援会等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DepartmentLevel {
      get { return departmentLevel_; }
      set {
        departmentLevel_ = value;
      }
    }

    /// <summary>Field number for the "power_get_state" field.</summary>
    public const int PowerGetStateFieldNumber = 7;
    private int powerGetState_;
    /// <summary>
    ///0未领取1已经领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PowerGetState {
      get { return powerGetState_; }
      set {
        powerGetState_ = value;
      }
    }

    /// <summary>Field number for the "power_be_given_state" field.</summary>
    public const int PowerBeGivenStateFieldNumber = 8;
    private int powerBeGivenState_;
    /// <summary>
    ///0未被赠送1已被赠送
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PowerBeGivenState {
      get { return powerBeGivenState_; }
      set {
        powerBeGivenState_ = value;
      }
    }

    /// <summary>Field number for the "power_send_state" field.</summary>
    public const int PowerSendStateFieldNumber = 9;
    private int powerSendState_;
    /// <summary>
    ///0未赠送其体力1已赠送其体力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PowerSendState {
      get { return powerSendState_; }
      set {
        powerSendState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendDetailPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendDetailPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (UserName != other.UserName) return false;
      if (UserHead != other.UserHead) return false;
      if (LastLoginTime != other.LastLoginTime) return false;
      if (CardNum != other.CardNum) return false;
      if (DepartmentLevel != other.DepartmentLevel) return false;
      if (PowerGetState != other.PowerGetState) return false;
      if (PowerBeGivenState != other.PowerBeGivenState) return false;
      if (PowerSendState != other.PowerSendState) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (UserHead != 0) hash ^= UserHead.GetHashCode();
      if (LastLoginTime != 0L) hash ^= LastLoginTime.GetHashCode();
      if (CardNum != 0) hash ^= CardNum.GetHashCode();
      if (DepartmentLevel != 0) hash ^= DepartmentLevel.GetHashCode();
      if (PowerGetState != 0) hash ^= PowerGetState.GetHashCode();
      if (PowerBeGivenState != 0) hash ^= PowerBeGivenState.GetHashCode();
      if (PowerSendState != 0) hash ^= PowerSendState.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (UserHead != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(UserHead);
      }
      if (LastLoginTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(LastLoginTime);
      }
      if (CardNum != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(CardNum);
      }
      if (DepartmentLevel != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(DepartmentLevel);
      }
      if (PowerGetState != 0) {
        output.WriteRawTag(56);
        output.WriteSInt32(PowerGetState);
      }
      if (PowerBeGivenState != 0) {
        output.WriteRawTag(64);
        output.WriteSInt32(PowerBeGivenState);
      }
      if (PowerSendState != 0) {
        output.WriteRawTag(72);
        output.WriteSInt32(PowerSendState);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (UserHead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserHead);
      }
      if (LastLoginTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastLoginTime);
      }
      if (CardNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CardNum);
      }
      if (DepartmentLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DepartmentLevel);
      }
      if (PowerGetState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(PowerGetState);
      }
      if (PowerBeGivenState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(PowerBeGivenState);
      }
      if (PowerSendState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(PowerSendState);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendDetailPB other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.UserHead != 0) {
        UserHead = other.UserHead;
      }
      if (other.LastLoginTime != 0L) {
        LastLoginTime = other.LastLoginTime;
      }
      if (other.CardNum != 0) {
        CardNum = other.CardNum;
      }
      if (other.DepartmentLevel != 0) {
        DepartmentLevel = other.DepartmentLevel;
      }
      if (other.PowerGetState != 0) {
        PowerGetState = other.PowerGetState;
      }
      if (other.PowerBeGivenState != 0) {
        PowerBeGivenState = other.PowerBeGivenState;
      }
      if (other.PowerSendState != 0) {
        PowerSendState = other.PowerSendState;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadSInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 24: {
            UserHead = input.ReadSInt32();
            break;
          }
          case 32: {
            LastLoginTime = input.ReadInt64();
            break;
          }
          case 40: {
            CardNum = input.ReadSInt32();
            break;
          }
          case 48: {
            DepartmentLevel = input.ReadSInt32();
            break;
          }
          case 56: {
            PowerGetState = input.ReadSInt32();
            break;
          }
          case 64: {
            PowerBeGivenState = input.ReadSInt32();
            break;
          }
          case 72: {
            PowerSendState = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
