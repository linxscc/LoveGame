// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller_npc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from controller_npc.proto</summary>
  public static partial class ControllerNpcReflection {

    #region Descriptor
    /// <summary>File descriptor for controller_npc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControllerNpcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRjb250cm9sbGVyX25wYy5wcm90bxIJY29tLnByb3RvGgpiYXNlLnByb3Rv",
            "Gg5iZWFuX25wYy5wcm90bxoTYmVhbl91c2VyX25wYy5wcm90bxoPYmVhbl91",
            "c2VyLnByb3RvGhxiZWFuX3VzZXJfZmF2b3JhYmlsaXR5LnByb3RvIjUKBk5w",
            "Y1JlcxILCgNyZXQYASABKBESHgoEbnBjcxgCIAMoCzIQLmNvbS5wcm90by5O",
            "cGNQQiJCCgpVc2VyTnBjUmVzEgsKA3JldBgBIAEoERInCgl1c2VyX25wY3MY",
            "AiADKAsyFC5jb20ucHJvdG8uVXNlck5wY1BCIkEKEVVzZXJTZXROcGNOaWNr",
            "UmVxEhkKBnBsYXllchgBIAEoDjIJLlBsYXllclBCEhEKCW5pY2tfbmFtZRgC",
            "IAEoCSJIChFVc2VyU2V0TnBjTmlja1JlcxILCgNyZXQYASABKBESJgoIdXNl",
            "cl9ucGMYAiABKAsyFC5jb20ucHJvdG8uVXNlck5wY1BCIo8BChRVc2VyU2V0",
            "TnBjQmdTdGF0ZVJlcRJECgthcHBhcmVsX21hcBgBIAMoCzIvLmNvbS5wcm90",
            "by5Vc2VyU2V0TnBjQmdTdGF0ZVJlcS5BcHBhcmVsTWFwRW50cnkaMQoPQXBw",
            "YXJlbE1hcEVudHJ5EgsKA2tleRgBIAEoERINCgV2YWx1ZRgCIAEoEToCOAEi",
            "RAoUVXNlclNldE5wY0JnU3RhdGVSZXMSCwoDcmV0GAEgASgREh8KBHVzZXIY",
            "AiABKAsyES5jb20ucHJvdG8uVXNlclBCIokBChdOcGNNYWluU3RhZ2VJbnRl",
            "cmFjdFJlcxILCgNyZXQYASABKBESJwoJdXNlcl9ucGNzGAIgAygLMhQuY29t",
            "LnByb3RvLlVzZXJOcGNQQhI4ChF1c2VyX2Zhdm9yYWJpbGl0eRgDIAEoCzId",
            "LmNvbS5wcm90by5Vc2VyRmF2b3JhYmlsaXR5UEJCNgofbmV0LmdhbGFzcG9y",
            "dHMuYmlnc3Rhci5wcm90b2NvbEITTnBjQ29udHJvbGxlclByb3Rvc2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanNpcReflection.Descriptor, global::Com.Proto.BeanUserNpcReflection.Descriptor, global::Com.Proto.BeanUserReflection.Descriptor, global::Com.Proto.BeanUserFavorabilityReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.NpcRes), global::Com.Proto.NpcRes.Parser, new[]{ "Ret", "Npcs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserNpcRes), global::Com.Proto.UserNpcRes.Parser, new[]{ "Ret", "UserNpcs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserSetNpcNickReq), global::Com.Proto.UserSetNpcNickReq.Parser, new[]{ "Player", "NickName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserSetNpcNickRes), global::Com.Proto.UserSetNpcNickRes.Parser, new[]{ "Ret", "UserNpc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserSetNpcBgStateReq), global::Com.Proto.UserSetNpcBgStateReq.Parser, new[]{ "ApparelMap" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserSetNpcBgStateRes), global::Com.Proto.UserSetNpcBgStateRes.Parser, new[]{ "Ret", "User" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.NpcMainStageInteractRes), global::Com.Proto.NpcMainStageInteractRes.Parser, new[]{ "Ret", "UserNpcs", "UserFavorability" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///获取NPC列表 npcC/npcs
  /// </summary>
  public sealed partial class NpcRes : pb::IMessage<NpcRes> {
    private static readonly pb::MessageParser<NpcRes> _parser = new pb::MessageParser<NpcRes>(() => new NpcRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NpcRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerNpcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NpcRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NpcRes(NpcRes other) : this() {
      ret_ = other.ret_;
      npcs_ = other.npcs_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NpcRes Clone() {
      return new NpcRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "npcs" field.</summary>
    public const int NpcsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.NpcPB> _repeated_npcs_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.NpcPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.NpcPB> npcs_ = new pbc::RepeatedField<global::Com.Proto.NpcPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.NpcPB> Npcs {
      get { return npcs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NpcRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NpcRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!npcs_.Equals(other.npcs_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= npcs_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      npcs_.WriteTo(output, _repeated_npcs_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += npcs_.CalculateSize(_repeated_npcs_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NpcRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      npcs_.Add(other.npcs_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            npcs_.AddEntriesFrom(input, _repeated_npcs_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///获取用户NPC昵称信息 npcC/userNpcs
  /// </summary>
  public sealed partial class UserNpcRes : pb::IMessage<UserNpcRes> {
    private static readonly pb::MessageParser<UserNpcRes> _parser = new pb::MessageParser<UserNpcRes>(() => new UserNpcRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserNpcRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerNpcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserNpcRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserNpcRes(UserNpcRes other) : this() {
      ret_ = other.ret_;
      userNpcs_ = other.userNpcs_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserNpcRes Clone() {
      return new UserNpcRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_npcs" field.</summary>
    public const int UserNpcsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.UserNpcPB> _repeated_userNpcs_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.UserNpcPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserNpcPB> userNpcs_ = new pbc::RepeatedField<global::Com.Proto.UserNpcPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserNpcPB> UserNpcs {
      get { return userNpcs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserNpcRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserNpcRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!userNpcs_.Equals(other.userNpcs_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= userNpcs_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      userNpcs_.WriteTo(output, _repeated_userNpcs_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += userNpcs_.CalculateSize(_repeated_userNpcs_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserNpcRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      userNpcs_.Add(other.userNpcs_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            userNpcs_.AddEntriesFrom(input, _repeated_userNpcs_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///更改NPC昵称 npcC/nick
  /// </summary>
  public sealed partial class UserSetNpcNickReq : pb::IMessage<UserSetNpcNickReq> {
    private static readonly pb::MessageParser<UserSetNpcNickReq> _parser = new pb::MessageParser<UserSetNpcNickReq>(() => new UserSetNpcNickReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserSetNpcNickReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerNpcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSetNpcNickReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSetNpcNickReq(UserSetNpcNickReq other) : this() {
      player_ = other.player_;
      nickName_ = other.nickName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSetNpcNickReq Clone() {
      return new UserSetNpcNickReq(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::PlayerPB player_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PlayerPB Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "nick_name" field.</summary>
    public const int NickNameFieldNumber = 2;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserSetNpcNickReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserSetNpcNickReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Player != other.Player) return false;
      if (NickName != other.NickName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Player != 0) hash ^= Player.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Player != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Player);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NickName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Player != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Player);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserSetNpcNickReq other) {
      if (other == null) {
        return;
      }
      if (other.Player != 0) {
        Player = other.Player;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            player_ = (global::PlayerPB) input.ReadEnum();
            break;
          }
          case 18: {
            NickName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserSetNpcNickRes : pb::IMessage<UserSetNpcNickRes> {
    private static readonly pb::MessageParser<UserSetNpcNickRes> _parser = new pb::MessageParser<UserSetNpcNickRes>(() => new UserSetNpcNickRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserSetNpcNickRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerNpcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSetNpcNickRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSetNpcNickRes(UserSetNpcNickRes other) : this() {
      ret_ = other.ret_;
      UserNpc = other.userNpc_ != null ? other.UserNpc.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSetNpcNickRes Clone() {
      return new UserSetNpcNickRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_npc" field.</summary>
    public const int UserNpcFieldNumber = 2;
    private global::Com.Proto.UserNpcPB userNpc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserNpcPB UserNpc {
      get { return userNpc_; }
      set {
        userNpc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserSetNpcNickRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserSetNpcNickRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserNpc, other.UserNpc)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userNpc_ != null) hash ^= UserNpc.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userNpc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserNpc);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userNpc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserNpc);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserSetNpcNickRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userNpc_ != null) {
        if (userNpc_ == null) {
          userNpc_ = new global::Com.Proto.UserNpcPB();
        }
        UserNpc.MergeFrom(other.UserNpc);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userNpc_ == null) {
              userNpc_ = new global::Com.Proto.UserNpcPB();
            }
            input.ReadMessage(userNpc_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///更改背景 npcC/bgState
  /// </summary>
  public sealed partial class UserSetNpcBgStateReq : pb::IMessage<UserSetNpcBgStateReq> {
    private static readonly pb::MessageParser<UserSetNpcBgStateReq> _parser = new pb::MessageParser<UserSetNpcBgStateReq>(() => new UserSetNpcBgStateReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserSetNpcBgStateReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerNpcReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSetNpcBgStateReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSetNpcBgStateReq(UserSetNpcBgStateReq other) : this() {
      apparelMap_ = other.apparelMap_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSetNpcBgStateReq Clone() {
      return new UserSetNpcBgStateReq(this);
    }

    /// <summary>Field number for the "apparel_map" field.</summary>
    public const int ApparelMapFieldNumber = 1;
    private static readonly pbc::MapField<int, int>.Codec _map_apparelMap_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForSInt32(8), pb::FieldCodec.ForSInt32(16), 10);
    private readonly pbc::MapField<int, int> apparelMap_ = new pbc::MapField<int, int>();
    /// <summary>
    ///服饰请求map
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> ApparelMap {
      get { return apparelMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserSetNpcBgStateReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserSetNpcBgStateReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ApparelMap.Equals(other.ApparelMap)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ApparelMap.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      apparelMap_.WriteTo(output, _map_apparelMap_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += apparelMap_.CalculateSize(_map_apparelMap_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserSetNpcBgStateReq other) {
      if (other == null) {
        return;
      }
      apparelMap_.Add(other.apparelMap_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            apparelMap_.AddEntriesFrom(input, _map_apparelMap_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserSetNpcBgStateRes : pb::IMessage<UserSetNpcBgStateRes> {
    private static readonly pb::MessageParser<UserSetNpcBgStateRes> _parser = new pb::MessageParser<UserSetNpcBgStateRes>(() => new UserSetNpcBgStateRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserSetNpcBgStateRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerNpcReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSetNpcBgStateRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSetNpcBgStateRes(UserSetNpcBgStateRes other) : this() {
      ret_ = other.ret_;
      User = other.user_ != null ? other.User.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSetNpcBgStateRes Clone() {
      return new UserSetNpcBgStateRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Com.Proto.UserPB user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserPB User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserSetNpcBgStateRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserSetNpcBgStateRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(User, other.User)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserSetNpcBgStateRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Com.Proto.UserPB();
        }
        User.MergeFrom(other.User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (user_ == null) {
              user_ = new global::Com.Proto.UserPB();
            }
            input.ReadMessage(user_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NpcMainStageInteractRes : pb::IMessage<NpcMainStageInteractRes> {
    private static readonly pb::MessageParser<NpcMainStageInteractRes> _parser = new pb::MessageParser<NpcMainStageInteractRes>(() => new NpcMainStageInteractRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NpcMainStageInteractRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerNpcReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NpcMainStageInteractRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NpcMainStageInteractRes(NpcMainStageInteractRes other) : this() {
      ret_ = other.ret_;
      userNpcs_ = other.userNpcs_.Clone();
      UserFavorability = other.userFavorability_ != null ? other.UserFavorability.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NpcMainStageInteractRes Clone() {
      return new NpcMainStageInteractRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_npcs" field.</summary>
    public const int UserNpcsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.UserNpcPB> _repeated_userNpcs_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.UserNpcPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserNpcPB> userNpcs_ = new pbc::RepeatedField<global::Com.Proto.UserNpcPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserNpcPB> UserNpcs {
      get { return userNpcs_; }
    }

    /// <summary>Field number for the "user_favorability" field.</summary>
    public const int UserFavorabilityFieldNumber = 3;
    private global::Com.Proto.UserFavorabilityPB userFavorability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserFavorabilityPB UserFavorability {
      get { return userFavorability_; }
      set {
        userFavorability_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NpcMainStageInteractRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NpcMainStageInteractRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!userNpcs_.Equals(other.userNpcs_)) return false;
      if (!object.Equals(UserFavorability, other.UserFavorability)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= userNpcs_.GetHashCode();
      if (userFavorability_ != null) hash ^= UserFavorability.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      userNpcs_.WriteTo(output, _repeated_userNpcs_codec);
      if (userFavorability_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserFavorability);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += userNpcs_.CalculateSize(_repeated_userNpcs_codec);
      if (userFavorability_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserFavorability);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NpcMainStageInteractRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      userNpcs_.Add(other.userNpcs_);
      if (other.userFavorability_ != null) {
        if (userFavorability_ == null) {
          userFavorability_ = new global::Com.Proto.UserFavorabilityPB();
        }
        UserFavorability.MergeFrom(other.UserFavorability);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            userNpcs_.AddEntriesFrom(input, _repeated_userNpcs_codec);
            break;
          }
          case 26: {
            if (userFavorability_ == null) {
              userFavorability_ = new global::Com.Proto.UserFavorabilityPB();
            }
            input.ReadMessage(userFavorability_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
