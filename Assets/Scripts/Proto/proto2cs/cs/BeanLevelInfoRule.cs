// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_level_info_rule.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_level_info_rule.proto</summary>
  public static partial class BeanLevelInfoRuleReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_level_info_rule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanLevelInfoRuleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpiZWFuX2xldmVsX2luZm9fcnVsZS5wcm90bxIJY29tLnByb3RvGgpiYXNl",
            "LnByb3RvIl0KD0xldmVsSW5mb1J1bGVQQhIPCgdpbmZvX2lkGAEgASgREhEK",
            "CWluZm9fdHlwZRgCIAEoERISCgpsZXZlbF9uYW1lGAMgASgJEhIKCmxldmVs",
            "X2Rlc2MYBCABKAlCNgofbmV0LmdhbGFzcG9ydHMuYmlnc3Rhci5wcm90b2Nv",
            "bEITTGV2ZWxJbmZvUnVsZVByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.LevelInfoRulePB), global::Com.Proto.LevelInfoRulePB.Parser, new[]{ "InfoId", "InfoType", "LevelName", "LevelDesc" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///LevelInfoRulePB LevelInfoRule
  /// </summary>
  public sealed partial class LevelInfoRulePB : pb::IMessage<LevelInfoRulePB> {
    private static readonly pb::MessageParser<LevelInfoRulePB> _parser = new pb::MessageParser<LevelInfoRulePB>(() => new LevelInfoRulePB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LevelInfoRulePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanLevelInfoRuleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelInfoRulePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelInfoRulePB(LevelInfoRulePB other) : this() {
      infoId_ = other.infoId_;
      infoType_ = other.infoType_;
      levelName_ = other.levelName_;
      levelDesc_ = other.levelDesc_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelInfoRulePB Clone() {
      return new LevelInfoRulePB(this);
    }

    /// <summary>Field number for the "info_id" field.</summary>
    public const int InfoIdFieldNumber = 1;
    private int infoId_;
    /// <summary>
    ///信息id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InfoId {
      get { return infoId_; }
      set {
        infoId_ = value;
      }
    }

    /// <summary>Field number for the "info_type" field.</summary>
    public const int InfoTypeFieldNumber = 2;
    private int infoType_;
    /// <summary>
    ///信息分类（0关卡，1章节）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InfoType {
      get { return infoType_; }
      set {
        infoType_ = value;
      }
    }

    /// <summary>Field number for the "level_name" field.</summary>
    public const int LevelNameFieldNumber = 3;
    private string levelName_ = "";
    /// <summary>
    ///关卡名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LevelName {
      get { return levelName_; }
      set {
        levelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level_desc" field.</summary>
    public const int LevelDescFieldNumber = 4;
    private string levelDesc_ = "";
    /// <summary>
    ///关卡描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LevelDesc {
      get { return levelDesc_; }
      set {
        levelDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LevelInfoRulePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LevelInfoRulePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InfoId != other.InfoId) return false;
      if (InfoType != other.InfoType) return false;
      if (LevelName != other.LevelName) return false;
      if (LevelDesc != other.LevelDesc) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InfoId != 0) hash ^= InfoId.GetHashCode();
      if (InfoType != 0) hash ^= InfoType.GetHashCode();
      if (LevelName.Length != 0) hash ^= LevelName.GetHashCode();
      if (LevelDesc.Length != 0) hash ^= LevelDesc.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InfoId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(InfoId);
      }
      if (InfoType != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(InfoType);
      }
      if (LevelName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LevelName);
      }
      if (LevelDesc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LevelDesc);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InfoId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(InfoId);
      }
      if (InfoType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(InfoType);
      }
      if (LevelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LevelName);
      }
      if (LevelDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LevelDesc);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LevelInfoRulePB other) {
      if (other == null) {
        return;
      }
      if (other.InfoId != 0) {
        InfoId = other.InfoId;
      }
      if (other.InfoType != 0) {
        InfoType = other.InfoType;
      }
      if (other.LevelName.Length != 0) {
        LevelName = other.LevelName;
      }
      if (other.LevelDesc.Length != 0) {
        LevelDesc = other.LevelDesc;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            InfoId = input.ReadSInt32();
            break;
          }
          case 16: {
            InfoType = input.ReadSInt32();
            break;
          }
          case 26: {
            LevelName = input.ReadString();
            break;
          }
          case 34: {
            LevelDesc = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
