// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_unlock_goal.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_unlock_goal.proto</summary>
  public static partial class BeanUnlockGoalReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_unlock_goal.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanUnlockGoalReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZiZWFuX3VubG9ja19nb2FsLnByb3RvEgljb20ucHJvdG8aCmJhc2UucHJv",
            "dG8iVwoMVW5sb2NrUnVsZVBCEg8KB2NhcmRfaWQYASABKBESFwoPZXZvbHV0",
            "aW9uX2xldmVsGAIgASgREgsKA2dlbRgDIAEoERIQCghsZXZlbF9pZBgEIAEo",
            "EUIzCh9uZXQuZ2FsYXNwb3J0cy5iaWdzdGFyLnByb3RvY29sQhBVbmxvY2tH",
            "b2FsUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UnlockRulePB), global::Com.Proto.UnlockRulePB.Parser, new[]{ "CardId", "EvolutionLevel", "Gem", "LevelId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///UnlockGoalPB UnlockGoal
  /// </summary>
  public sealed partial class UnlockRulePB : pb::IMessage<UnlockRulePB> {
    private static readonly pb::MessageParser<UnlockRulePB> _parser = new pb::MessageParser<UnlockRulePB>(() => new UnlockRulePB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnlockRulePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanUnlockGoalReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnlockRulePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnlockRulePB(UnlockRulePB other) : this() {
      cardId_ = other.cardId_;
      evolutionLevel_ = other.evolutionLevel_;
      gem_ = other.gem_;
      levelId_ = other.levelId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnlockRulePB Clone() {
      return new UnlockRulePB(this);
    }

    /// <summary>Field number for the "card_id" field.</summary>
    public const int CardIdFieldNumber = 1;
    private int cardId_;
    /// <summary>
    ///卡牌ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "evolution_level" field.</summary>
    public const int EvolutionLevelFieldNumber = 2;
    private int evolutionLevel_;
    /// <summary>
    ///进化等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EvolutionLevel {
      get { return evolutionLevel_; }
      set {
        evolutionLevel_ = value;
      }
    }

    /// <summary>Field number for the "gem" field.</summary>
    public const int GemFieldNumber = 3;
    private int gem_;
    /// <summary>
    ///宝石数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gem {
      get { return gem_; }
      set {
        gem_ = value;
      }
    }

    /// <summary>Field number for the "level_id" field.</summary>
    public const int LevelIdFieldNumber = 4;
    private int levelId_;
    /// <summary>
    ///通关关卡Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LevelId {
      get { return levelId_; }
      set {
        levelId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnlockRulePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnlockRulePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CardId != other.CardId) return false;
      if (EvolutionLevel != other.EvolutionLevel) return false;
      if (Gem != other.Gem) return false;
      if (LevelId != other.LevelId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (EvolutionLevel != 0) hash ^= EvolutionLevel.GetHashCode();
      if (Gem != 0) hash ^= Gem.GetHashCode();
      if (LevelId != 0) hash ^= LevelId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CardId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(CardId);
      }
      if (EvolutionLevel != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(EvolutionLevel);
      }
      if (Gem != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Gem);
      }
      if (LevelId != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(LevelId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CardId);
      }
      if (EvolutionLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(EvolutionLevel);
      }
      if (Gem != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Gem);
      }
      if (LevelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(LevelId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnlockRulePB other) {
      if (other == null) {
        return;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      if (other.EvolutionLevel != 0) {
        EvolutionLevel = other.EvolutionLevel;
      }
      if (other.Gem != 0) {
        Gem = other.Gem;
      }
      if (other.LevelId != 0) {
        LevelId = other.LevelId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CardId = input.ReadSInt32();
            break;
          }
          case 16: {
            EvolutionLevel = input.ReadSInt32();
            break;
          }
          case 24: {
            Gem = input.ReadSInt32();
            break;
          }
          case 32: {
            LevelId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
