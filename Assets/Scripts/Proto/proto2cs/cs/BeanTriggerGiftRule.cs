// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_trigger_gift_rule.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_trigger_gift_rule.proto</summary>
  public static partial class BeanTriggerGiftRuleReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_trigger_gift_rule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanTriggerGiftRuleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxiZWFuX3RyaWdnZXJfZ2lmdF9ydWxlLnByb3RvEgljb20ucHJvdG8aCmJh",
            "c2UucHJvdG8aEGJlYW5fYXdhcmQucHJvdG8aF2JlYW5fdHJpZ2dlcl9nb2Fs",
            "LnByb3RvItABChFUcmlnZ2VyR2lmdFJ1bGVQQhIPCgdtYWxsX2lkGAEgASgR",
            "EjUKEnRyaWdnZXJfZ29hbF9saXN0cxgCIAMoCzIZLmNvbS5wcm90by5Ucmln",
            "Z2VyR29hbFNQQhIQCgh0aW1lX251bRgDIAEoERIVCg10cmlnZ2VyX2xpbWl0",
            "GAQgASgREiYKCmZyZWVfYXdhcmQYBSADKAsyEi5jb20ucHJvdG8uQXdhcmRQ",
            "QhIiCgtyZWZyZXNoX2RheRgGIAEoDjINLlJlZnJlc2hEYXlQQiJACg5Ucmln",
            "Z2VyR29hbFNQQhIuCgx0cmlnZ2VyX2dvYWwYASADKAsyGC5jb20ucHJvdG8u",
            "VHJpZ2dlckdvYWxQQkI4Ch9uZXQuZ2FsYXNwb3J0cy5iaWdzdGFyLnByb3Rv",
            "Y29sQhVUcmlnZ2VyR2lmdFJ1bGVQcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanAwardReflection.Descriptor, global::Com.Proto.BeanTriggerGoalReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.TriggerGiftRulePB), global::Com.Proto.TriggerGiftRulePB.Parser, new[]{ "MallId", "TriggerGoalLists", "TimeNum", "TriggerLimit", "FreeAward", "RefreshDay" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.TriggerGoalSPB), global::Com.Proto.TriggerGoalSPB.Parser, new[]{ "TriggerGoal" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///TriggerGiftRulePB TriggerGiftRule
  /// </summary>
  public sealed partial class TriggerGiftRulePB : pb::IMessage<TriggerGiftRulePB> {
    private static readonly pb::MessageParser<TriggerGiftRulePB> _parser = new pb::MessageParser<TriggerGiftRulePB>(() => new TriggerGiftRulePB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TriggerGiftRulePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanTriggerGiftRuleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerGiftRulePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerGiftRulePB(TriggerGiftRulePB other) : this() {
      mallId_ = other.mallId_;
      triggerGoalLists_ = other.triggerGoalLists_.Clone();
      timeNum_ = other.timeNum_;
      triggerLimit_ = other.triggerLimit_;
      freeAward_ = other.freeAward_.Clone();
      refreshDay_ = other.refreshDay_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerGiftRulePB Clone() {
      return new TriggerGiftRulePB(this);
    }

    /// <summary>Field number for the "mall_id" field.</summary>
    public const int MallIdFieldNumber = 1;
    private int mallId_;
    /// <summary>
    ///商品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MallId {
      get { return mallId_; }
      set {
        mallId_ = value;
      }
    }

    /// <summary>Field number for the "trigger_goal_lists" field.</summary>
    public const int TriggerGoalListsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.TriggerGoalSPB> _repeated_triggerGoalLists_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.TriggerGoalSPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.TriggerGoalSPB> triggerGoalLists_ = new pbc::RepeatedField<global::Com.Proto.TriggerGoalSPB>();
    /// <summary>
    ///触发条件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.TriggerGoalSPB> TriggerGoalLists {
      get { return triggerGoalLists_; }
    }

    /// <summary>Field number for the "time_num" field.</summary>
    public const int TimeNumFieldNumber = 3;
    private int timeNum_;
    /// <summary>
    ///时限(小时)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeNum {
      get { return timeNum_; }
      set {
        timeNum_ = value;
      }
    }

    /// <summary>Field number for the "trigger_limit" field.</summary>
    public const int TriggerLimitFieldNumber = 4;
    private int triggerLimit_;
    /// <summary>
    ///触发上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TriggerLimit {
      get { return triggerLimit_; }
      set {
        triggerLimit_ = value;
      }
    }

    /// <summary>Field number for the "free_award" field.</summary>
    public const int FreeAwardFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_freeAward_codec
        = pb::FieldCodec.ForMessage(42, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> freeAward_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///免费奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> FreeAward {
      get { return freeAward_; }
    }

    /// <summary>Field number for the "refresh_day" field.</summary>
    public const int RefreshDayFieldNumber = 6;
    private global::RefreshDayPB refreshDay_ = 0;
    /// <summary>
    ///刷新周期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RefreshDayPB RefreshDay {
      get { return refreshDay_; }
      set {
        refreshDay_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TriggerGiftRulePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TriggerGiftRulePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MallId != other.MallId) return false;
      if(!triggerGoalLists_.Equals(other.triggerGoalLists_)) return false;
      if (TimeNum != other.TimeNum) return false;
      if (TriggerLimit != other.TriggerLimit) return false;
      if(!freeAward_.Equals(other.freeAward_)) return false;
      if (RefreshDay != other.RefreshDay) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MallId != 0) hash ^= MallId.GetHashCode();
      hash ^= triggerGoalLists_.GetHashCode();
      if (TimeNum != 0) hash ^= TimeNum.GetHashCode();
      if (TriggerLimit != 0) hash ^= TriggerLimit.GetHashCode();
      hash ^= freeAward_.GetHashCode();
      if (RefreshDay != 0) hash ^= RefreshDay.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MallId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(MallId);
      }
      triggerGoalLists_.WriteTo(output, _repeated_triggerGoalLists_codec);
      if (TimeNum != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(TimeNum);
      }
      if (TriggerLimit != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(TriggerLimit);
      }
      freeAward_.WriteTo(output, _repeated_freeAward_codec);
      if (RefreshDay != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) RefreshDay);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MallId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MallId);
      }
      size += triggerGoalLists_.CalculateSize(_repeated_triggerGoalLists_codec);
      if (TimeNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(TimeNum);
      }
      if (TriggerLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(TriggerLimit);
      }
      size += freeAward_.CalculateSize(_repeated_freeAward_codec);
      if (RefreshDay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RefreshDay);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TriggerGiftRulePB other) {
      if (other == null) {
        return;
      }
      if (other.MallId != 0) {
        MallId = other.MallId;
      }
      triggerGoalLists_.Add(other.triggerGoalLists_);
      if (other.TimeNum != 0) {
        TimeNum = other.TimeNum;
      }
      if (other.TriggerLimit != 0) {
        TriggerLimit = other.TriggerLimit;
      }
      freeAward_.Add(other.freeAward_);
      if (other.RefreshDay != 0) {
        RefreshDay = other.RefreshDay;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MallId = input.ReadSInt32();
            break;
          }
          case 18: {
            triggerGoalLists_.AddEntriesFrom(input, _repeated_triggerGoalLists_codec);
            break;
          }
          case 24: {
            TimeNum = input.ReadSInt32();
            break;
          }
          case 32: {
            TriggerLimit = input.ReadSInt32();
            break;
          }
          case 42: {
            freeAward_.AddEntriesFrom(input, _repeated_freeAward_codec);
            break;
          }
          case 48: {
            refreshDay_ = (global::RefreshDayPB) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TriggerGoalSPB : pb::IMessage<TriggerGoalSPB> {
    private static readonly pb::MessageParser<TriggerGoalSPB> _parser = new pb::MessageParser<TriggerGoalSPB>(() => new TriggerGoalSPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TriggerGoalSPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanTriggerGiftRuleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerGoalSPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerGoalSPB(TriggerGoalSPB other) : this() {
      triggerGoal_ = other.triggerGoal_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerGoalSPB Clone() {
      return new TriggerGoalSPB(this);
    }

    /// <summary>Field number for the "trigger_goal" field.</summary>
    public const int TriggerGoalFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Proto.TriggerGoalPB> _repeated_triggerGoal_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Proto.TriggerGoalPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.TriggerGoalPB> triggerGoal_ = new pbc::RepeatedField<global::Com.Proto.TriggerGoalPB>();
    /// <summary>
    ///触发条件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.TriggerGoalPB> TriggerGoal {
      get { return triggerGoal_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TriggerGoalSPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TriggerGoalSPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!triggerGoal_.Equals(other.triggerGoal_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= triggerGoal_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      triggerGoal_.WriteTo(output, _repeated_triggerGoal_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += triggerGoal_.CalculateSize(_repeated_triggerGoal_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TriggerGoalSPB other) {
      if (other == null) {
        return;
      }
      triggerGoal_.Add(other.triggerGoal_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            triggerGoal_.AddEntriesFrom(input, _repeated_triggerGoal_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
