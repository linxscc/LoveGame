// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller_mission.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from controller_mission.proto</summary>
  public static partial class ControllerMissionReflection {

    #region Descriptor
    /// <summary>File descriptor for controller_mission.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControllerMissionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chhjb250cm9sbGVyX21pc3Npb24ucHJvdG8SCWNvbS5wcm90bxoKYmFzZS5w",
            "cm90bxoXYmVhbl9taXNzaW9uX3J1bGUucHJvdG8aF2JlYW5fdXNlcl9taXNz",
            "aW9uLnByb3RvGhBiZWFuX2F3YXJkLnByb3RvGhhiZWFuX2JpcnRoZGF5X3J1",
            "bGUucHJvdG8izwEKDk1pc3Npb25SdWxlUmVzEgsKA3JldBgBIAEoERIvCg1t",
            "aXNzaW9uX3J1bGVzGAIgAygLMhguY29tLnByb3RvLk1pc3Npb25SdWxlUEIS",
            "QAoQYWN0aXZpdHlfcmV3YXJkcxgDIAMoCzImLmNvbS5wcm90by5NaXNzaW9u",
            "QWN0aXZpdHlSZXdhcmRSdWxlUEISPQoUcGxheWVyQmlydGhkYXlSdWxlUEIY",
            "BCADKAsyHy5jb20ucHJvdG8uUGxheWVyQmlydGhkYXlSdWxlUEIiiAEKD1Vz",
            "ZXJNaXNzaW9uc1JlcxILCgNyZXQYASABKBESLwoNdXNlcl9taXNzaW9ucxgC",
            "IAMoCzIYLmNvbS5wcm90by5Vc2VyTWlzc2lvblBCEjcKEXVzZXJfbWlzc2lv",
            "bl9pbmZvGAMgASgLMhwuY29tLnByb3RvLlVzZXJNaXNzaW9uSW5mb1BCIkwK",
            "EE1pc3Npb25Bd2FyZHNSZXESJAoMbWlzc2lvbl90eXBlGAEgASgOMg4uTWlz",
            "c2lvblR5cGVQQhISCgptaXNzaW9uX2lkGAIgASgRIqwBChBNaXNzaW9uQXdh",
            "cmRzUmVzEgsKA3JldBgBIAEoERIuCgx1c2VyX21pc3Npb24YAiABKAsyGC5j",
            "b20ucHJvdG8uVXNlck1pc3Npb25QQhI3ChF1c2VyX21pc3Npb25faW5mbxgD",
            "IAEoCzIcLmNvbS5wcm90by5Vc2VyTWlzc2lvbkluZm9QQhIiCgZhd2FyZHMY",
            "BCADKAsyEi5jb20ucHJvdG8uQXdhcmRQQiJrChhNaXNzaW9uQWN0aXZpdHlB",
            "d2FyZHNSZXESJAoMbWlzc2lvbl90eXBlGAEgASgOMg4uTWlzc2lvblR5cGVQ",
            "QhIZCgZwbGF5ZXIYAiABKA4yCS5QbGF5ZXJQQhIOCgZ3ZWlnaHQYAyABKBEi",
            "hAEKGE1pc3Npb25BY3Rpdml0eUF3YXJkc1JlcxILCgNyZXQYASABKBESIgoG",
            "YXdhcmRzGAIgAygLMhIuY29tLnByb3RvLkF3YXJkUEISNwoRdXNlcl9taXNz",
            "aW9uX2luZm8YAyABKAsyHC5jb20ucHJvdG8uVXNlck1pc3Npb25JbmZvUEIi",
            "EwoRTWlzc2lvblJlZnJlc2hSZXEiigEKEU1pc3Npb25SZWZyZXNoUmVzEgsK",
            "A3JldBgBIAEoERIvCg11c2VyX21pc3Npb25zGAIgAygLMhguY29tLnByb3Rv",
            "LlVzZXJNaXNzaW9uUEISNwoRdXNlcl9taXNzaW9uX2luZm8YAyABKAsyHC5j",
            "b20ucHJvdG8uVXNlck1pc3Npb25JbmZvUEJCOgofbmV0LmdhbGFzcG9ydHMu",
            "Ymlnc3Rhci5wcm90b2NvbEIXTWlzc2lvbkNvbnRyb2xsZXJQcm90b3NiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanMissionRuleReflection.Descriptor, global::Com.Proto.BeanUserMissionReflection.Descriptor, global::Com.Proto.BeanAwardReflection.Descriptor, global::Com.Proto.BeanBirthdayRuleReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.MissionRuleRes), global::Com.Proto.MissionRuleRes.Parser, new[]{ "Ret", "MissionRules", "ActivityRewards", "PlayerBirthdayRulePB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserMissionsRes), global::Com.Proto.UserMissionsRes.Parser, new[]{ "Ret", "UserMissions", "UserMissionInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.MissionAwardsReq), global::Com.Proto.MissionAwardsReq.Parser, new[]{ "MissionType", "MissionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.MissionAwardsRes), global::Com.Proto.MissionAwardsRes.Parser, new[]{ "Ret", "UserMission", "UserMissionInfo", "Awards" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.MissionActivityAwardsReq), global::Com.Proto.MissionActivityAwardsReq.Parser, new[]{ "MissionType", "Player", "Weight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.MissionActivityAwardsRes), global::Com.Proto.MissionActivityAwardsRes.Parser, new[]{ "Ret", "Awards", "UserMissionInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.MissionRefreshReq), global::Com.Proto.MissionRefreshReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.MissionRefreshRes), global::Com.Proto.MissionRefreshRes.Parser, new[]{ "Ret", "UserMissions", "UserMissionInfo" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///规则   missionC/missionRules
  /// </summary>
  public sealed partial class MissionRuleRes : pb::IMessage<MissionRuleRes> {
    private static readonly pb::MessageParser<MissionRuleRes> _parser = new pb::MessageParser<MissionRuleRes>(() => new MissionRuleRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MissionRuleRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerMissionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionRuleRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionRuleRes(MissionRuleRes other) : this() {
      ret_ = other.ret_;
      missionRules_ = other.missionRules_.Clone();
      activityRewards_ = other.activityRewards_.Clone();
      playerBirthdayRulePB_ = other.playerBirthdayRulePB_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionRuleRes Clone() {
      return new MissionRuleRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "mission_rules" field.</summary>
    public const int MissionRulesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.MissionRulePB> _repeated_missionRules_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.MissionRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.MissionRulePB> missionRules_ = new pbc::RepeatedField<global::Com.Proto.MissionRulePB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.MissionRulePB> MissionRules {
      get { return missionRules_; }
    }

    /// <summary>Field number for the "activity_rewards" field.</summary>
    public const int ActivityRewardsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.MissionActivityRewardRulePB> _repeated_activityRewards_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.MissionActivityRewardRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.MissionActivityRewardRulePB> activityRewards_ = new pbc::RepeatedField<global::Com.Proto.MissionActivityRewardRulePB>();
    /// <summary>
    ///活跃奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.MissionActivityRewardRulePB> ActivityRewards {
      get { return activityRewards_; }
    }

    /// <summary>Field number for the "playerBirthdayRulePB" field.</summary>
    public const int PlayerBirthdayRulePBFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.PlayerBirthdayRulePB> _repeated_playerBirthdayRulePB_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.PlayerBirthdayRulePB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.PlayerBirthdayRulePB> playerBirthdayRulePB_ = new pbc::RepeatedField<global::Com.Proto.PlayerBirthdayRulePB>();
    /// <summary>
    ///生日任务信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.PlayerBirthdayRulePB> PlayerBirthdayRulePB {
      get { return playerBirthdayRulePB_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MissionRuleRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MissionRuleRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!missionRules_.Equals(other.missionRules_)) return false;
      if(!activityRewards_.Equals(other.activityRewards_)) return false;
      if(!playerBirthdayRulePB_.Equals(other.playerBirthdayRulePB_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= missionRules_.GetHashCode();
      hash ^= activityRewards_.GetHashCode();
      hash ^= playerBirthdayRulePB_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      missionRules_.WriteTo(output, _repeated_missionRules_codec);
      activityRewards_.WriteTo(output, _repeated_activityRewards_codec);
      playerBirthdayRulePB_.WriteTo(output, _repeated_playerBirthdayRulePB_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += missionRules_.CalculateSize(_repeated_missionRules_codec);
      size += activityRewards_.CalculateSize(_repeated_activityRewards_codec);
      size += playerBirthdayRulePB_.CalculateSize(_repeated_playerBirthdayRulePB_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MissionRuleRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      missionRules_.Add(other.missionRules_);
      activityRewards_.Add(other.activityRewards_);
      playerBirthdayRulePB_.Add(other.playerBirthdayRulePB_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            missionRules_.AddEntriesFrom(input, _repeated_missionRules_codec);
            break;
          }
          case 26: {
            activityRewards_.AddEntriesFrom(input, _repeated_activityRewards_codec);
            break;
          }
          case 34: {
            playerBirthdayRulePB_.AddEntriesFrom(input, _repeated_playerBirthdayRulePB_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///获取用户任务信息 missionC/userMissions
  /// </summary>
  public sealed partial class UserMissionsRes : pb::IMessage<UserMissionsRes> {
    private static readonly pb::MessageParser<UserMissionsRes> _parser = new pb::MessageParser<UserMissionsRes>(() => new UserMissionsRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMissionsRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerMissionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMissionsRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMissionsRes(UserMissionsRes other) : this() {
      ret_ = other.ret_;
      userMissions_ = other.userMissions_.Clone();
      UserMissionInfo = other.userMissionInfo_ != null ? other.UserMissionInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMissionsRes Clone() {
      return new UserMissionsRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_missions" field.</summary>
    public const int UserMissionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.UserMissionPB> _repeated_userMissions_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.UserMissionPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserMissionPB> userMissions_ = new pbc::RepeatedField<global::Com.Proto.UserMissionPB>();
    /// <summary>
    ///任务列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserMissionPB> UserMissions {
      get { return userMissions_; }
    }

    /// <summary>Field number for the "user_mission_info" field.</summary>
    public const int UserMissionInfoFieldNumber = 3;
    private global::Com.Proto.UserMissionInfoPB userMissionInfo_;
    /// <summary>
    ///任务信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMissionInfoPB UserMissionInfo {
      get { return userMissionInfo_; }
      set {
        userMissionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMissionsRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMissionsRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!userMissions_.Equals(other.userMissions_)) return false;
      if (!object.Equals(UserMissionInfo, other.UserMissionInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= userMissions_.GetHashCode();
      if (userMissionInfo_ != null) hash ^= UserMissionInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      userMissions_.WriteTo(output, _repeated_userMissions_codec);
      if (userMissionInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserMissionInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += userMissions_.CalculateSize(_repeated_userMissions_codec);
      if (userMissionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMissionInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMissionsRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      userMissions_.Add(other.userMissions_);
      if (other.userMissionInfo_ != null) {
        if (userMissionInfo_ == null) {
          userMissionInfo_ = new global::Com.Proto.UserMissionInfoPB();
        }
        UserMissionInfo.MergeFrom(other.UserMissionInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            userMissions_.AddEntriesFrom(input, _repeated_userMissions_codec);
            break;
          }
          case 26: {
            if (userMissionInfo_ == null) {
              userMissionInfo_ = new global::Com.Proto.UserMissionInfoPB();
            }
            input.ReadMessage(userMissionInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///领取任务奖励 missionC/awards
  /// </summary>
  public sealed partial class MissionAwardsReq : pb::IMessage<MissionAwardsReq> {
    private static readonly pb::MessageParser<MissionAwardsReq> _parser = new pb::MessageParser<MissionAwardsReq>(() => new MissionAwardsReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MissionAwardsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerMissionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionAwardsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionAwardsReq(MissionAwardsReq other) : this() {
      missionType_ = other.missionType_;
      missionId_ = other.missionId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionAwardsReq Clone() {
      return new MissionAwardsReq(this);
    }

    /// <summary>Field number for the "mission_type" field.</summary>
    public const int MissionTypeFieldNumber = 1;
    private global::MissionTypePB missionType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MissionTypePB MissionType {
      get { return missionType_; }
      set {
        missionType_ = value;
      }
    }

    /// <summary>Field number for the "mission_id" field.</summary>
    public const int MissionIdFieldNumber = 2;
    private int missionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MissionId {
      get { return missionId_; }
      set {
        missionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MissionAwardsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MissionAwardsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MissionType != other.MissionType) return false;
      if (MissionId != other.MissionId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MissionType != 0) hash ^= MissionType.GetHashCode();
      if (MissionId != 0) hash ^= MissionId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MissionType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MissionType);
      }
      if (MissionId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(MissionId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MissionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MissionType);
      }
      if (MissionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MissionId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MissionAwardsReq other) {
      if (other == null) {
        return;
      }
      if (other.MissionType != 0) {
        MissionType = other.MissionType;
      }
      if (other.MissionId != 0) {
        MissionId = other.MissionId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            missionType_ = (global::MissionTypePB) input.ReadEnum();
            break;
          }
          case 16: {
            MissionId = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MissionAwardsRes : pb::IMessage<MissionAwardsRes> {
    private static readonly pb::MessageParser<MissionAwardsRes> _parser = new pb::MessageParser<MissionAwardsRes>(() => new MissionAwardsRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MissionAwardsRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerMissionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionAwardsRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionAwardsRes(MissionAwardsRes other) : this() {
      ret_ = other.ret_;
      UserMission = other.userMission_ != null ? other.UserMission.Clone() : null;
      UserMissionInfo = other.userMissionInfo_ != null ? other.UserMissionInfo.Clone() : null;
      awards_ = other.awards_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionAwardsRes Clone() {
      return new MissionAwardsRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_mission" field.</summary>
    public const int UserMissionFieldNumber = 2;
    private global::Com.Proto.UserMissionPB userMission_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMissionPB UserMission {
      get { return userMission_; }
      set {
        userMission_ = value;
      }
    }

    /// <summary>Field number for the "user_mission_info" field.</summary>
    public const int UserMissionInfoFieldNumber = 3;
    private global::Com.Proto.UserMissionInfoPB userMissionInfo_;
    /// <summary>
    ///任务信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMissionInfoPB UserMissionInfo {
      get { return userMissionInfo_; }
      set {
        userMissionInfo_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MissionAwardsRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MissionAwardsRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserMission, other.UserMission)) return false;
      if (!object.Equals(UserMissionInfo, other.UserMissionInfo)) return false;
      if(!awards_.Equals(other.awards_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userMission_ != null) hash ^= UserMission.GetHashCode();
      if (userMissionInfo_ != null) hash ^= UserMissionInfo.GetHashCode();
      hash ^= awards_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userMission_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserMission);
      }
      if (userMissionInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserMissionInfo);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userMission_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMission);
      }
      if (userMissionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMissionInfo);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MissionAwardsRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userMission_ != null) {
        if (userMission_ == null) {
          userMission_ = new global::Com.Proto.UserMissionPB();
        }
        UserMission.MergeFrom(other.UserMission);
      }
      if (other.userMissionInfo_ != null) {
        if (userMissionInfo_ == null) {
          userMissionInfo_ = new global::Com.Proto.UserMissionInfoPB();
        }
        UserMissionInfo.MergeFrom(other.UserMissionInfo);
      }
      awards_.Add(other.awards_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userMission_ == null) {
              userMission_ = new global::Com.Proto.UserMissionPB();
            }
            input.ReadMessage(userMission_);
            break;
          }
          case 26: {
            if (userMissionInfo_ == null) {
              userMissionInfo_ = new global::Com.Proto.UserMissionInfoPB();
            }
            input.ReadMessage(userMissionInfo_);
            break;
          }
          case 34: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///领取活跃奖励 missionC/activityAwards
  /// </summary>
  public sealed partial class MissionActivityAwardsReq : pb::IMessage<MissionActivityAwardsReq> {
    private static readonly pb::MessageParser<MissionActivityAwardsReq> _parser = new pb::MessageParser<MissionActivityAwardsReq>(() => new MissionActivityAwardsReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MissionActivityAwardsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerMissionReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionActivityAwardsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionActivityAwardsReq(MissionActivityAwardsReq other) : this() {
      missionType_ = other.missionType_;
      player_ = other.player_;
      weight_ = other.weight_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionActivityAwardsReq Clone() {
      return new MissionActivityAwardsReq(this);
    }

    /// <summary>Field number for the "mission_type" field.</summary>
    public const int MissionTypeFieldNumber = 1;
    private global::MissionTypePB missionType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MissionTypePB MissionType {
      get { return missionType_; }
      set {
        missionType_ = value;
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 2;
    private global::PlayerPB player_ = 0;
    /// <summary>
    ///PlayerPB 该任务相关的男主，星路历程0表示应援会
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PlayerPB Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 3;
    private int weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MissionActivityAwardsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MissionActivityAwardsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MissionType != other.MissionType) return false;
      if (Player != other.Player) return false;
      if (Weight != other.Weight) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MissionType != 0) hash ^= MissionType.GetHashCode();
      if (Player != 0) hash ^= Player.GetHashCode();
      if (Weight != 0) hash ^= Weight.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MissionType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MissionType);
      }
      if (Player != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Player);
      }
      if (Weight != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Weight);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MissionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MissionType);
      }
      if (Player != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Player);
      }
      if (Weight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Weight);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MissionActivityAwardsReq other) {
      if (other == null) {
        return;
      }
      if (other.MissionType != 0) {
        MissionType = other.MissionType;
      }
      if (other.Player != 0) {
        Player = other.Player;
      }
      if (other.Weight != 0) {
        Weight = other.Weight;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            missionType_ = (global::MissionTypePB) input.ReadEnum();
            break;
          }
          case 16: {
            player_ = (global::PlayerPB) input.ReadEnum();
            break;
          }
          case 24: {
            Weight = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MissionActivityAwardsRes : pb::IMessage<MissionActivityAwardsRes> {
    private static readonly pb::MessageParser<MissionActivityAwardsRes> _parser = new pb::MessageParser<MissionActivityAwardsRes>(() => new MissionActivityAwardsRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MissionActivityAwardsRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerMissionReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionActivityAwardsRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionActivityAwardsRes(MissionActivityAwardsRes other) : this() {
      ret_ = other.ret_;
      awards_ = other.awards_.Clone();
      UserMissionInfo = other.userMissionInfo_ != null ? other.UserMissionInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionActivityAwardsRes Clone() {
      return new MissionActivityAwardsRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "user_mission_info" field.</summary>
    public const int UserMissionInfoFieldNumber = 3;
    private global::Com.Proto.UserMissionInfoPB userMissionInfo_;
    /// <summary>
    ///任务信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMissionInfoPB UserMissionInfo {
      get { return userMissionInfo_; }
      set {
        userMissionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MissionActivityAwardsRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MissionActivityAwardsRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if (!object.Equals(UserMissionInfo, other.UserMissionInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= awards_.GetHashCode();
      if (userMissionInfo_ != null) hash ^= UserMissionInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      if (userMissionInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserMissionInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      if (userMissionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMissionInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MissionActivityAwardsRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      awards_.Add(other.awards_);
      if (other.userMissionInfo_ != null) {
        if (userMissionInfo_ == null) {
          userMissionInfo_ = new global::Com.Proto.UserMissionInfoPB();
        }
        UserMissionInfo.MergeFrom(other.UserMissionInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 26: {
            if (userMissionInfo_ == null) {
              userMissionInfo_ = new global::Com.Proto.UserMissionInfoPB();
            }
            input.ReadMessage(userMissionInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///隔天刷新任务 missionC/refresh
  /// </summary>
  public sealed partial class MissionRefreshReq : pb::IMessage<MissionRefreshReq> {
    private static readonly pb::MessageParser<MissionRefreshReq> _parser = new pb::MessageParser<MissionRefreshReq>(() => new MissionRefreshReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MissionRefreshReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerMissionReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionRefreshReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionRefreshReq(MissionRefreshReq other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionRefreshReq Clone() {
      return new MissionRefreshReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MissionRefreshReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MissionRefreshReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MissionRefreshReq other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class MissionRefreshRes : pb::IMessage<MissionRefreshRes> {
    private static readonly pb::MessageParser<MissionRefreshRes> _parser = new pb::MessageParser<MissionRefreshRes>(() => new MissionRefreshRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MissionRefreshRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerMissionReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionRefreshRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionRefreshRes(MissionRefreshRes other) : this() {
      ret_ = other.ret_;
      userMissions_ = other.userMissions_.Clone();
      UserMissionInfo = other.userMissionInfo_ != null ? other.UserMissionInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionRefreshRes Clone() {
      return new MissionRefreshRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user_missions" field.</summary>
    public const int UserMissionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.UserMissionPB> _repeated_userMissions_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.UserMissionPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.UserMissionPB> userMissions_ = new pbc::RepeatedField<global::Com.Proto.UserMissionPB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.UserMissionPB> UserMissions {
      get { return userMissions_; }
    }

    /// <summary>Field number for the "user_mission_info" field.</summary>
    public const int UserMissionInfoFieldNumber = 3;
    private global::Com.Proto.UserMissionInfoPB userMissionInfo_;
    /// <summary>
    ///任务信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMissionInfoPB UserMissionInfo {
      get { return userMissionInfo_; }
      set {
        userMissionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MissionRefreshRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MissionRefreshRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if(!userMissions_.Equals(other.userMissions_)) return false;
      if (!object.Equals(UserMissionInfo, other.UserMissionInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      hash ^= userMissions_.GetHashCode();
      if (userMissionInfo_ != null) hash ^= UserMissionInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      userMissions_.WriteTo(output, _repeated_userMissions_codec);
      if (userMissionInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserMissionInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      size += userMissions_.CalculateSize(_repeated_userMissions_codec);
      if (userMissionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMissionInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MissionRefreshRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      userMissions_.Add(other.userMissions_);
      if (other.userMissionInfo_ != null) {
        if (userMissionInfo_ == null) {
          userMissionInfo_ = new global::Com.Proto.UserMissionInfoPB();
        }
        UserMissionInfo.MergeFrom(other.UserMissionInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            userMissions_.AddEntriesFrom(input, _repeated_userMissions_codec);
            break;
          }
          case 26: {
            if (userMissionInfo_ == null) {
              userMissionInfo_ = new global::Com.Proto.UserMissionInfoPB();
            }
            input.ReadMessage(userMissionInfo_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
