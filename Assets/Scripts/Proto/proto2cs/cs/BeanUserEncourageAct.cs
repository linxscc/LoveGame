// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_user_encourage_act.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_user_encourage_act.proto</summary>
  public static partial class BeanUserEncourageActReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_user_encourage_act.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanUserEncourageActReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1iZWFuX3VzZXJfZW5jb3VyYWdlX2FjdC5wcm90bxIJY29tLnByb3RvGgpi",
            "YXNlLnByb3RvIqABChJVc2VyRW5jb3VyYWdlQWN0UEISCgoCaWQYASABKBES",
            "DwoHdXNlcl9pZBgCIAEoERIOCgZhY3RfaWQYAyABKBESEwoLc3RhcnRfc3Rh",
            "dGUYBCABKBESHgoWaW1tZWRpYXRlX2ZpbmlzaF9zdGF0ZRgFIAEoERITCgth",
            "d2FyZF9zdGF0ZRgGIAEoERITCgthY2NlcHRfdGltZRgHIAEoEkI5Ch9uZXQu",
            "Z2FsYXNwb3J0cy5iaWdzdGFyLnByb3RvY29sQhZVc2VyRW5jb3VyYWdlQWN0",
            "UHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserEncourageActPB), global::Com.Proto.UserEncourageActPB.Parser, new[]{ "Id", "UserId", "ActId", "StartState", "ImmediateFinishState", "AwardState", "AcceptTime" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///DepartmentActivityRulePBPB UserEncourageAct
  /// </summary>
  public sealed partial class UserEncourageActPB : pb::IMessage<UserEncourageActPB> {
    private static readonly pb::MessageParser<UserEncourageActPB> _parser = new pb::MessageParser<UserEncourageActPB>(() => new UserEncourageActPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserEncourageActPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanUserEncourageActReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEncourageActPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEncourageActPB(UserEncourageActPB other) : this() {
      id_ = other.id_;
      userId_ = other.userId_;
      actId_ = other.actId_;
      startState_ = other.startState_;
      immediateFinishState_ = other.immediateFinishState_;
      awardState_ = other.awardState_;
      acceptTime_ = other.acceptTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEncourageActPB Clone() {
      return new UserEncourageActPB(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private int userId_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "act_id" field.</summary>
    public const int ActIdFieldNumber = 3;
    private int actId_;
    /// <summary>
    ///活动ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActId {
      get { return actId_; }
      set {
        actId_ = value;
      }
    }

    /// <summary>Field number for the "start_state" field.</summary>
    public const int StartStateFieldNumber = 4;
    private int startState_;
    /// <summary>
    ///0未开始1已开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartState {
      get { return startState_; }
      set {
        startState_ = value;
      }
    }

    /// <summary>Field number for the "immediate_finish_state" field.</summary>
    public const int ImmediateFinishStateFieldNumber = 5;
    private int immediateFinishState_;
    /// <summary>
    ///0未使用立即完成1使用了立即完成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ImmediateFinishState {
      get { return immediateFinishState_; }
      set {
        immediateFinishState_ = value;
      }
    }

    /// <summary>Field number for the "award_state" field.</summary>
    public const int AwardStateFieldNumber = 6;
    private int awardState_;
    /// <summary>
    ///0未领奖1已经领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AwardState {
      get { return awardState_; }
      set {
        awardState_ = value;
      }
    }

    /// <summary>Field number for the "accept_time" field.</summary>
    public const int AcceptTimeFieldNumber = 7;
    private long acceptTime_;
    /// <summary>
    ///活动接取时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AcceptTime {
      get { return acceptTime_; }
      set {
        acceptTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserEncourageActPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserEncourageActPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (UserId != other.UserId) return false;
      if (ActId != other.ActId) return false;
      if (StartState != other.StartState) return false;
      if (ImmediateFinishState != other.ImmediateFinishState) return false;
      if (AwardState != other.AwardState) return false;
      if (AcceptTime != other.AcceptTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (ActId != 0) hash ^= ActId.GetHashCode();
      if (StartState != 0) hash ^= StartState.GetHashCode();
      if (ImmediateFinishState != 0) hash ^= ImmediateFinishState.GetHashCode();
      if (AwardState != 0) hash ^= AwardState.GetHashCode();
      if (AcceptTime != 0L) hash ^= AcceptTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(UserId);
      }
      if (ActId != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(ActId);
      }
      if (StartState != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(StartState);
      }
      if (ImmediateFinishState != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(ImmediateFinishState);
      }
      if (AwardState != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(AwardState);
      }
      if (AcceptTime != 0L) {
        output.WriteRawTag(56);
        output.WriteSInt64(AcceptTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Id);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      if (ActId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ActId);
      }
      if (StartState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(StartState);
      }
      if (ImmediateFinishState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ImmediateFinishState);
      }
      if (AwardState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(AwardState);
      }
      if (AcceptTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(AcceptTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserEncourageActPB other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.ActId != 0) {
        ActId = other.ActId;
      }
      if (other.StartState != 0) {
        StartState = other.StartState;
      }
      if (other.ImmediateFinishState != 0) {
        ImmediateFinishState = other.ImmediateFinishState;
      }
      if (other.AwardState != 0) {
        AwardState = other.AwardState;
      }
      if (other.AcceptTime != 0L) {
        AcceptTime = other.AcceptTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
          case 16: {
            UserId = input.ReadSInt32();
            break;
          }
          case 24: {
            ActId = input.ReadSInt32();
            break;
          }
          case 32: {
            StartState = input.ReadSInt32();
            break;
          }
          case 40: {
            ImmediateFinishState = input.ReadSInt32();
            break;
          }
          case 48: {
            AwardState = input.ReadSInt32();
            break;
          }
          case 56: {
            AcceptTime = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
