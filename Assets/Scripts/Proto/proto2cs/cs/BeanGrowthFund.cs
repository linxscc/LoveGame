// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_growth_fund.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_growth_fund.proto</summary>
  public static partial class BeanGrowthFundReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_growth_fund.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanGrowthFundReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZiZWFuX2dyb3d0aF9mdW5kLnByb3RvEgljb20ucHJvdG8aCmJhc2UucHJv",
            "dG8aEGJlYW5fYXdhcmQucHJvdG8iXAoQR3Jvd3RoRnVuZFJ1bGVQQhIKCgJp",
            "ZBgBIAEoERIYChBkZXBhcnRtZW50X2xldmVsGAIgASgREiIKBmF3YXJkcxgD",
            "IAMoCzISLmNvbS5wcm90by5Bd2FyZFBCQjcKH25ldC5nYWxhc3BvcnRzLmJp",
            "Z3N0YXIucHJvdG9jb2xCFEdyb3d0aEZ1bmRSdWxlUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, global::Com.Proto.BeanAwardReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GrowthFundRulePB), global::Com.Proto.GrowthFundRulePB.Parser, new[]{ "Id", "DepartmentLevel", "Awards" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///GrowthFundRulePB GrowthFundRule
  /// </summary>
  public sealed partial class GrowthFundRulePB : pb::IMessage<GrowthFundRulePB> {
    private static readonly pb::MessageParser<GrowthFundRulePB> _parser = new pb::MessageParser<GrowthFundRulePB>(() => new GrowthFundRulePB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrowthFundRulePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanGrowthFundReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrowthFundRulePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrowthFundRulePB(GrowthFundRulePB other) : this() {
      id_ = other.id_;
      departmentLevel_ = other.departmentLevel_;
      awards_ = other.awards_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrowthFundRulePB Clone() {
      return new GrowthFundRulePB(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "department_level" field.</summary>
    public const int DepartmentLevelFieldNumber = 2;
    private int departmentLevel_;
    /// <summary>
    ///应援会等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DepartmentLevel {
      get { return departmentLevel_; }
      set {
        departmentLevel_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.AwardPB> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.AwardPB.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.AwardPB> awards_ = new pbc::RepeatedField<global::Com.Proto.AwardPB>();
    /// <summary>
    ///奖励物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.AwardPB> Awards {
      get { return awards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrowthFundRulePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrowthFundRulePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (DepartmentLevel != other.DepartmentLevel) return false;
      if(!awards_.Equals(other.awards_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (DepartmentLevel != 0) hash ^= DepartmentLevel.GetHashCode();
      hash ^= awards_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
      if (DepartmentLevel != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(DepartmentLevel);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Id);
      }
      if (DepartmentLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DepartmentLevel);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrowthFundRulePB other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.DepartmentLevel != 0) {
        DepartmentLevel = other.DepartmentLevel;
      }
      awards_.Add(other.awards_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
          case 16: {
            DepartmentLevel = input.ReadSInt32();
            break;
          }
          case 26: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
