// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_user_level.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_user_level.proto</summary>
  public static partial class BeanUserLevelReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_user_level.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanUserLevelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChViZWFuX3VzZXJfbGV2ZWwucHJvdG8SCWNvbS5wcm90bxoKYmFzZS5wcm90",
            "byKmAQoLVXNlckxldmVsUEISDwoHdXNlcl9pZBgBIAEoERIQCghsZXZlbF9p",
            "ZBgCIAEoERIMCgRzdGFyGAMgASgREg0KBWNvdW50GAQgASgREhIKCnJlc2V0",
            "X3RpbWUYBSABKBISFAoMbWF4X2ZyYWN0aW9uGAYgASgREhEKCWJ1eV9jb3Vu",
            "dBgHIAEoERIaChJmaXJzdF9hd2FyZHNfc3RhdGUYCCABKBFCMgofbmV0Lmdh",
            "bGFzcG9ydHMuYmlnc3Rhci5wcm90b2NvbEIPVXNlckxldmVsUHJvdG9zYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserLevelPB), global::Com.Proto.UserLevelPB.Parser, new[]{ "UserId", "LevelId", "Star", "Count", "ResetTime", "MaxFraction", "BuyCount", "FirstAwardsState" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///UserLevelPB UserLevel
  /// </summary>
  public sealed partial class UserLevelPB : pb::IMessage<UserLevelPB> {
    private static readonly pb::MessageParser<UserLevelPB> _parser = new pb::MessageParser<UserLevelPB>(() => new UserLevelPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserLevelPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanUserLevelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLevelPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLevelPB(UserLevelPB other) : this() {
      userId_ = other.userId_;
      levelId_ = other.levelId_;
      star_ = other.star_;
      count_ = other.count_;
      resetTime_ = other.resetTime_;
      maxFraction_ = other.maxFraction_;
      buyCount_ = other.buyCount_;
      firstAwardsState_ = other.firstAwardsState_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLevelPB Clone() {
      return new UserLevelPB(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "level_id" field.</summary>
    public const int LevelIdFieldNumber = 2;
    private int levelId_;
    /// <summary>
    ///关卡id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LevelId {
      get { return levelId_; }
      set {
        levelId_ = value;
      }
    }

    /// <summary>Field number for the "star" field.</summary>
    public const int StarFieldNumber = 3;
    private int star_;
    /// <summary>
    ///星级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Star {
      get { return star_; }
      set {
        star_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 4;
    private int count_;
    /// <summary>
    ///当天刷的次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "reset_time" field.</summary>
    public const int ResetTimeFieldNumber = 5;
    private long resetTime_;
    /// <summary>
    ///当天刷的次数重置时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ResetTime {
      get { return resetTime_; }
      set {
        resetTime_ = value;
      }
    }

    /// <summary>Field number for the "max_fraction" field.</summary>
    public const int MaxFractionFieldNumber = 6;
    private int maxFraction_;
    /// <summary>
    ///最高分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxFraction {
      get { return maxFraction_; }
      set {
        maxFraction_ = value;
      }
    }

    /// <summary>Field number for the "buy_count" field.</summary>
    public const int BuyCountFieldNumber = 7;
    private int buyCount_;
    /// <summary>
    ///三次扫荡购买次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuyCount {
      get { return buyCount_; }
      set {
        buyCount_ = value;
      }
    }

    /// <summary>Field number for the "first_awards_state" field.</summary>
    public const int FirstAwardsStateFieldNumber = 8;
    private int firstAwardsState_;
    /// <summary>
    ///首通奖励领取状态0未领取1已领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FirstAwardsState {
      get { return firstAwardsState_; }
      set {
        firstAwardsState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserLevelPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserLevelPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (LevelId != other.LevelId) return false;
      if (Star != other.Star) return false;
      if (Count != other.Count) return false;
      if (ResetTime != other.ResetTime) return false;
      if (MaxFraction != other.MaxFraction) return false;
      if (BuyCount != other.BuyCount) return false;
      if (FirstAwardsState != other.FirstAwardsState) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (LevelId != 0) hash ^= LevelId.GetHashCode();
      if (Star != 0) hash ^= Star.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (ResetTime != 0L) hash ^= ResetTime.GetHashCode();
      if (MaxFraction != 0) hash ^= MaxFraction.GetHashCode();
      if (BuyCount != 0) hash ^= BuyCount.GetHashCode();
      if (FirstAwardsState != 0) hash ^= FirstAwardsState.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(UserId);
      }
      if (LevelId != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(LevelId);
      }
      if (Star != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Star);
      }
      if (Count != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(Count);
      }
      if (ResetTime != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(ResetTime);
      }
      if (MaxFraction != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(MaxFraction);
      }
      if (BuyCount != 0) {
        output.WriteRawTag(56);
        output.WriteSInt32(BuyCount);
      }
      if (FirstAwardsState != 0) {
        output.WriteRawTag(64);
        output.WriteSInt32(FirstAwardsState);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      if (LevelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(LevelId);
      }
      if (Star != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Star);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Count);
      }
      if (ResetTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(ResetTime);
      }
      if (MaxFraction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MaxFraction);
      }
      if (BuyCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(BuyCount);
      }
      if (FirstAwardsState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FirstAwardsState);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserLevelPB other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.LevelId != 0) {
        LevelId = other.LevelId;
      }
      if (other.Star != 0) {
        Star = other.Star;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.ResetTime != 0L) {
        ResetTime = other.ResetTime;
      }
      if (other.MaxFraction != 0) {
        MaxFraction = other.MaxFraction;
      }
      if (other.BuyCount != 0) {
        BuyCount = other.BuyCount;
      }
      if (other.FirstAwardsState != 0) {
        FirstAwardsState = other.FirstAwardsState;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadSInt32();
            break;
          }
          case 16: {
            LevelId = input.ReadSInt32();
            break;
          }
          case 24: {
            Star = input.ReadSInt32();
            break;
          }
          case 32: {
            Count = input.ReadSInt32();
            break;
          }
          case 40: {
            ResetTime = input.ReadSInt64();
            break;
          }
          case 48: {
            MaxFraction = input.ReadSInt32();
            break;
          }
          case 56: {
            BuyCount = input.ReadSInt32();
            break;
          }
          case 64: {
            FirstAwardsState = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
