// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_user_trigger_gift_data.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_user_trigger_gift_data.proto</summary>
  public static partial class BeanUserTriggerGiftDataReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_user_trigger_gift_data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanUserTriggerGiftDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFiZWFuX3VzZXJfdHJpZ2dlcl9naWZ0X2RhdGEucHJvdG8SCWNvbS5wcm90",
            "bxoKYmFzZS5wcm90byLNAgoVVXNlclRyaWdnZXJHaWZ0RGF0YVBCEg8KB3Vz",
            "ZXJfaWQYASABKBESEgoKcmVjb3JkX2RheRgCIAEoEhIYChBzdG9wX3JlY29y",
            "ZF90aW1lGAUgASgSEkcKDHRyaWdnZXJfZ29hbBgDIAMoCzIxLmNvbS5wcm90",
            "by5Vc2VyVHJpZ2dlckdpZnREYXRhUEIuVHJpZ2dlckdvYWxFbnRyeRJFCgt0",
            "cmlnZ2VyX251bRgEIAMoCzIwLmNvbS5wcm90by5Vc2VyVHJpZ2dlckdpZnRE",
            "YXRhUEIuVHJpZ2dlck51bUVudHJ5GjIKEFRyaWdnZXJHb2FsRW50cnkSCwoD",
            "a2V5GAEgASgREg0KBXZhbHVlGAIgASgROgI4ARoxCg9UcmlnZ2VyTnVtRW50",
            "cnkSCwoDa2V5GAEgASgREg0KBXZhbHVlGAIgASgROgI4AUI8Ch9uZXQuZ2Fs",
            "YXNwb3J0cy5iaWdzdGFyLnByb3RvY29sQhlVc2VyVHJpZ2dlckdpZnREYXRh",
            "UHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.UserTriggerGiftDataPB), global::Com.Proto.UserTriggerGiftDataPB.Parser, new[]{ "UserId", "RecordDay", "StopRecordTime", "TriggerGoal", "TriggerNum" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///UserTriggerGiftDataPB UserTriggerGiftData
  /// </summary>
  public sealed partial class UserTriggerGiftDataPB : pb::IMessage<UserTriggerGiftDataPB> {
    private static readonly pb::MessageParser<UserTriggerGiftDataPB> _parser = new pb::MessageParser<UserTriggerGiftDataPB>(() => new UserTriggerGiftDataPB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserTriggerGiftDataPB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanUserTriggerGiftDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTriggerGiftDataPB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTriggerGiftDataPB(UserTriggerGiftDataPB other) : this() {
      userId_ = other.userId_;
      recordDay_ = other.recordDay_;
      stopRecordTime_ = other.stopRecordTime_;
      triggerGoal_ = other.triggerGoal_.Clone();
      triggerNum_ = other.triggerNum_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTriggerGiftDataPB Clone() {
      return new UserTriggerGiftDataPB(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "record_day" field.</summary>
    public const int RecordDayFieldNumber = 2;
    private long recordDay_;
    /// <summary>
    ///刷新时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RecordDay {
      get { return recordDay_; }
      set {
        recordDay_ = value;
      }
    }

    /// <summary>Field number for the "stop_record_time" field.</summary>
    public const int StopRecordTimeFieldNumber = 5;
    private long stopRecordTime_;
    /// <summary>
    ///刷新周期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StopRecordTime {
      get { return stopRecordTime_; }
      set {
        stopRecordTime_ = value;
      }
    }

    /// <summary>Field number for the "trigger_goal" field.</summary>
    public const int TriggerGoalFieldNumber = 3;
    private static readonly pbc::MapField<int, int>.Codec _map_triggerGoal_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForSInt32(8), pb::FieldCodec.ForSInt32(16), 26);
    private readonly pbc::MapField<int, int> triggerGoal_ = new pbc::MapField<int, int>();
    /// <summary>
    ///触发数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> TriggerGoal {
      get { return triggerGoal_; }
    }

    /// <summary>Field number for the "trigger_num" field.</summary>
    public const int TriggerNumFieldNumber = 4;
    private static readonly pbc::MapField<int, int>.Codec _map_triggerNum_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForSInt32(8), pb::FieldCodec.ForSInt32(16), 34);
    private readonly pbc::MapField<int, int> triggerNum_ = new pbc::MapField<int, int>();
    /// <summary>
    ///当天触发次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> TriggerNum {
      get { return triggerNum_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserTriggerGiftDataPB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserTriggerGiftDataPB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (RecordDay != other.RecordDay) return false;
      if (StopRecordTime != other.StopRecordTime) return false;
      if (!TriggerGoal.Equals(other.TriggerGoal)) return false;
      if (!TriggerNum.Equals(other.TriggerNum)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (RecordDay != 0L) hash ^= RecordDay.GetHashCode();
      if (StopRecordTime != 0L) hash ^= StopRecordTime.GetHashCode();
      hash ^= TriggerGoal.GetHashCode();
      hash ^= TriggerNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(UserId);
      }
      if (RecordDay != 0L) {
        output.WriteRawTag(16);
        output.WriteSInt64(RecordDay);
      }
      triggerGoal_.WriteTo(output, _map_triggerGoal_codec);
      triggerNum_.WriteTo(output, _map_triggerNum_codec);
      if (StopRecordTime != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(StopRecordTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      if (RecordDay != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(RecordDay);
      }
      if (StopRecordTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(StopRecordTime);
      }
      size += triggerGoal_.CalculateSize(_map_triggerGoal_codec);
      size += triggerNum_.CalculateSize(_map_triggerNum_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserTriggerGiftDataPB other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.RecordDay != 0L) {
        RecordDay = other.RecordDay;
      }
      if (other.StopRecordTime != 0L) {
        StopRecordTime = other.StopRecordTime;
      }
      triggerGoal_.Add(other.triggerGoal_);
      triggerNum_.Add(other.triggerNum_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadSInt32();
            break;
          }
          case 16: {
            RecordDay = input.ReadSInt64();
            break;
          }
          case 26: {
            triggerGoal_.AddEntriesFrom(input, _map_triggerGoal_codec);
            break;
          }
          case 34: {
            triggerNum_.AddEntriesFrom(input, _map_triggerNum_codec);
            break;
          }
          case 40: {
            StopRecordTime = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
