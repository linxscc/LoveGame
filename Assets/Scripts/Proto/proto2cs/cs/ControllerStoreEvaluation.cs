// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller_store_evaluation.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from controller_store_evaluation.proto</summary>
  public static partial class ControllerStoreEvaluationReflection {

    #region Descriptor
    /// <summary>File descriptor for controller_store_evaluation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControllerStoreEvaluationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFjb250cm9sbGVyX3N0b3JlX2V2YWx1YXRpb24ucHJvdG8SCWNvbS5wcm90",
            "bxoVYmVhbl91c2VyX21vbmV5LnByb3RvIhQKElN0b3JlRXZhbHVhdGlvblJl",
            "cSIyChJTdG9yZUV2YWx1YXRpb25SZXMSCwoDcmV0GAEgASgREg8KB2NvbW1l",
            "bnQYAiABKAgiOQoKQ29tbWVudFJlcRIMCgR0eXBlGAEgASgREg8KB2NvbW1l",
            "bnQYAiABKAkSDAoEc3RhchgDIAEoESJECgpDb21tZW50UmVzEgsKA3JldBgB",
            "IAEoERIpCgl1c2VyTW9uZXkYAiABKAsyFi5jb20ucHJvdG8uVXNlck1vbmV5",
            "UEJCOAofbmV0LmdhbGFzcG9ydHMuYmlnc3Rhci5wcm90b2NvbEIVU3RvcmVF",
            "dmFsdWF0aW9uUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Com.Proto.BeanUserMoneyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.StoreEvaluationReq), global::Com.Proto.StoreEvaluationReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.StoreEvaluationRes), global::Com.Proto.StoreEvaluationRes.Parser, new[]{ "Ret", "Comment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CommentReq), global::Com.Proto.CommentReq.Parser, new[]{ "Type", "Comment", "Star" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.CommentRes), global::Com.Proto.CommentRes.Parser, new[]{ "Ret", "UserMoney" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// /storeEvaluationC/canComment  是否可以评论
  /// </summary>
  public sealed partial class StoreEvaluationReq : pb::IMessage<StoreEvaluationReq> {
    private static readonly pb::MessageParser<StoreEvaluationReq> _parser = new pb::MessageParser<StoreEvaluationReq>(() => new StoreEvaluationReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StoreEvaluationReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerStoreEvaluationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoreEvaluationReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoreEvaluationReq(StoreEvaluationReq other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoreEvaluationReq Clone() {
      return new StoreEvaluationReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StoreEvaluationReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StoreEvaluationReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StoreEvaluationReq other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class StoreEvaluationRes : pb::IMessage<StoreEvaluationRes> {
    private static readonly pb::MessageParser<StoreEvaluationRes> _parser = new pb::MessageParser<StoreEvaluationRes>(() => new StoreEvaluationRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StoreEvaluationRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerStoreEvaluationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoreEvaluationRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoreEvaluationRes(StoreEvaluationRes other) : this() {
      ret_ = other.ret_;
      comment_ = other.comment_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoreEvaluationRes Clone() {
      return new StoreEvaluationRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应吗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 2;
    private bool comment_;
    /// <summary>
    ///是否可以评论  true为可以
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Comment {
      get { return comment_; }
      set {
        comment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StoreEvaluationRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StoreEvaluationRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (Comment != other.Comment) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (Comment != false) hash ^= Comment.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (Comment != false) {
        output.WriteRawTag(16);
        output.WriteBool(Comment);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (Comment != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StoreEvaluationRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.Comment != false) {
        Comment = other.Comment;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 16: {
            Comment = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// /storeEvaluationC/comment  评论完请求
  /// </summary>
  public sealed partial class CommentReq : pb::IMessage<CommentReq> {
    private static readonly pb::MessageParser<CommentReq> _parser = new pb::MessageParser<CommentReq>(() => new CommentReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommentReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerStoreEvaluationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentReq(CommentReq other) : this() {
      type_ = other.type_;
      comment_ = other.comment_;
      star_ = other.star_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentReq Clone() {
      return new CommentReq(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///评论类型  0是本地品论， 1是商店评论
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 2;
    private string comment_ = "";
    /// <summary>
    ///评论信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "star" field.</summary>
    public const int StarFieldNumber = 3;
    private int star_;
    /// <summary>
    ///星级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Star {
      get { return star_; }
      set {
        star_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommentReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommentReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Comment != other.Comment) return false;
      if (Star != other.Star) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (Star != 0) hash ^= Star.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Type);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Comment);
      }
      if (Star != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Star);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Type);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (Star != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Star);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommentReq other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      if (other.Star != 0) {
        Star = other.Star;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Type = input.ReadSInt32();
            break;
          }
          case 18: {
            Comment = input.ReadString();
            break;
          }
          case 24: {
            Star = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommentRes : pb::IMessage<CommentRes> {
    private static readonly pb::MessageParser<CommentRes> _parser = new pb::MessageParser<CommentRes>(() => new CommentRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommentRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ControllerStoreEvaluationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentRes(CommentRes other) : this() {
      ret_ = other.ret_;
      UserMoney = other.userMoney_ != null ? other.UserMoney.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentRes Clone() {
      return new CommentRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    /// <summary>
    ///响应吗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "userMoney" field.</summary>
    public const int UserMoneyFieldNumber = 2;
    private global::Com.Proto.UserMoneyPB userMoney_;
    /// <summary>
    ///资源更新
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.UserMoneyPB UserMoney {
      get { return userMoney_; }
      set {
        userMoney_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommentRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommentRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(UserMoney, other.UserMoney)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (userMoney_ != null) hash ^= UserMoney.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret);
      }
      if (userMoney_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserMoney);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret);
      }
      if (userMoney_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMoney);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommentRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.userMoney_ != null) {
        if (userMoney_ == null) {
          userMoney_ = new global::Com.Proto.UserMoneyPB();
        }
        UserMoney.MergeFrom(other.UserMoney);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret = input.ReadSInt32();
            break;
          }
          case 18: {
            if (userMoney_ == null) {
              userMoney_ = new global::Com.Proto.UserMoneyPB();
            }
            input.ReadMessage(userMoney_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
