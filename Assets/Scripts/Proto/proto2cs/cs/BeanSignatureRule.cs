// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bean_signature_rule.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto {

  /// <summary>Holder for reflection information generated from bean_signature_rule.proto</summary>
  public static partial class BeanSignatureRuleReflection {

    #region Descriptor
    /// <summary>File descriptor for bean_signature_rule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanSignatureRuleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChliZWFuX3NpZ25hdHVyZV9ydWxlLnByb3RvEgljb20ucHJvdG8aCmJhc2Uu",
            "cHJvdG8iNQoPU2lnbmF0dXJlUnVsZVBCEhQKDHNpZ25hdHVyZV9pZBgBIAEo",
            "ERIMCgRkZXNjGAIgASgJQjYKH25ldC5nYWxhc3BvcnRzLmJpZ3N0YXIucHJv",
            "dG9jb2xCE1NpZ25hdHVyZVJ1bGVQcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.SignatureRulePB), global::Com.Proto.SignatureRulePB.Parser, new[]{ "SignatureId", "Desc" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///SignaturePBPB SignatureRule
  /// </summary>
  public sealed partial class SignatureRulePB : pb::IMessage<SignatureRulePB> {
    private static readonly pb::MessageParser<SignatureRulePB> _parser = new pb::MessageParser<SignatureRulePB>(() => new SignatureRulePB());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignatureRulePB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.BeanSignatureRuleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatureRulePB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatureRulePB(SignatureRulePB other) : this() {
      signatureId_ = other.signatureId_;
      desc_ = other.desc_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatureRulePB Clone() {
      return new SignatureRulePB(this);
    }

    /// <summary>Field number for the "signature_id" field.</summary>
    public const int SignatureIdFieldNumber = 1;
    private int signatureId_;
    /// <summary>
    ///签名id，和星缘id一致
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SignatureId {
      get { return signatureId_; }
      set {
        signatureId_ = value;
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 2;
    private string desc_ = "";
    /// <summary>
    ///描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignatureRulePB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignatureRulePB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SignatureId != other.SignatureId) return false;
      if (Desc != other.Desc) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SignatureId != 0) hash ^= SignatureId.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SignatureId != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(SignatureId);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Desc);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SignatureId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SignatureId);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignatureRulePB other) {
      if (other == null) {
        return;
      }
      if (other.SignatureId != 0) {
        SignatureId = other.SignatureId;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SignatureId = input.ReadSInt32();
            break;
          }
          case 18: {
            Desc = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
